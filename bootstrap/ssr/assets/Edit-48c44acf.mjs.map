{"version":3,"file":"Edit-48c44acf.mjs","sources":["../../../common/resources/client/icons/material/ChevronRight.tsx","../../../common/resources/client/ui/breadcrumbs/breadcrumb-item.tsx","../../../common/resources/client/icons/material/MoreHoriz.tsx","../../../common/resources/client/ui/breadcrumbs/breadcrumb.tsx","../../../common/resources/client/ui/section-helper.tsx","../../../common/resources/client/icons/material/Edit.tsx"],"sourcesContent":["import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const ChevronRightIcon = createSvgIcon(\r\n  <path d=\"M10 6 8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6-6-6z\" />\r\n, 'ChevronRightOutlined');\r\n","import React, {HTMLAttributes, ReactElement, ReactNode} from 'react';\r\nimport clsx from 'clsx';\r\nimport {ChevronRightIcon} from '../../icons/material/ChevronRight';\r\nimport type {BreadcrumbSizeStyle} from './breadcrumb';\r\n\r\nexport interface BreadcrumbItemProps {\r\n  sizeStyle?: BreadcrumbSizeStyle;\r\n  isMenuTrigger?: boolean;\r\n  isMenuItem?: boolean;\r\n  children: ReactNode | ((state: {isMenuItem?: boolean}) => ReactNode);\r\n  isCurrent?: boolean;\r\n  onSelected?: () => void;\r\n  isClickable?: boolean;\r\n  isDisabled?: boolean;\r\n  className?: string;\r\n  isLink?: boolean;\r\n}\r\n\r\nexport function BreadcrumbItem(props: BreadcrumbItemProps) {\r\n  const {\r\n    isCurrent,\r\n    sizeStyle,\r\n    isMenuTrigger,\r\n    isClickable,\r\n    isDisabled,\r\n    onSelected,\r\n    className,\r\n    isMenuItem,\r\n    isLink,\r\n  } = props;\r\n\r\n  const children =\r\n    typeof props.children === 'function'\r\n      ? props.children({isMenuItem})\r\n      : props.children;\r\n\r\n  if (isMenuItem) {\r\n    return children as ReactElement;\r\n  }\r\n\r\n  const domProps: HTMLAttributes<HTMLDivElement> = isMenuTrigger\r\n    ? {}\r\n    : {\r\n        tabIndex: isLink && !isDisabled ? 0 : undefined,\r\n        role: isLink ? 'link' : undefined,\r\n        'aria-disabled': isLink ? isDisabled : undefined,\r\n        'aria-current': isCurrent && isLink ? 'page' : undefined,\r\n        onClick: () => onSelected?.(),\r\n      };\r\n\r\n  return (\r\n    <li\r\n      className={clsx(\r\n        `relative inline-flex min-w-0 flex-shrink-0 items-center justify-start ${sizeStyle?.font}`,\r\n        (!isClickable || isDisabled) && 'pointer-events-none',\r\n        !isCurrent && isDisabled && 'text-disabled'\r\n      )}\r\n    >\r\n      <div\r\n        {...domProps}\r\n        className={clsx(\r\n          className,\r\n          'cursor-pointer overflow-hidden whitespace-nowrap rounded px-8',\r\n          !isMenuTrigger && 'py-4 hover:bg-hover',\r\n          !isMenuTrigger && isLink && 'outline-none focus-visible:ring'\r\n        )}\r\n      >\r\n        {children}\r\n      </div>\r\n      {isCurrent === false && (\r\n        <ChevronRightIcon\r\n          size={sizeStyle?.icon}\r\n          className={clsx(isDisabled ? 'text-disabled' : 'text-muted')}\r\n        />\r\n      )}\r\n    </li>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const MoreHorizIcon = createSvgIcon(\r\n  <path d=\"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\r\n, 'MoreHorizOutlined');\r\n","import React, {\r\n  cloneElement,\r\n  ReactElement,\r\n  ReactNode,\r\n  useCallback,\r\n  useRef,\r\n} from 'react';\r\nimport {\r\n  useLayoutEffect,\r\n  useResizeObserver,\r\n  useValueEffect,\r\n} from '@react-aria/utils';\r\nimport clsx from 'clsx';\r\nimport {IconButton} from '../buttons/icon-button';\r\nimport {BreadcrumbItem, BreadcrumbItemProps} from './breadcrumb-item';\r\nimport {MoreHorizIcon} from '../../icons/material/MoreHoriz';\r\nimport {ButtonSize} from '../buttons/button-size';\r\nimport {Menu, MenuItem, MenuTrigger} from '../navigation/menu/menu-trigger';\r\nimport {IconSize} from '../../icons/svg-icon';\r\nimport {useTrans} from '../../i18n/use-trans';\r\n\r\nconst MIN_VISIBLE_ITEMS = 1;\r\nconst MAX_VISIBLE_ITEMS = 10;\r\n\r\nexport interface BreadcrumbsProps {\r\n  children?: ReactNode;\r\n  isDisabled?: boolean;\r\n  size?: 'sm' | 'md' | 'lg' | 'xl';\r\n  className?: string;\r\n  currentIsClickable?: boolean;\r\n  isNavigation?: boolean;\r\n}\r\n\r\nexport function Breadcrumb(props: BreadcrumbsProps) {\r\n  const {\r\n    size = 'md',\r\n    children,\r\n    isDisabled,\r\n    className,\r\n    currentIsClickable,\r\n    isNavigation,\r\n  } = props;\r\n  const {trans} = useTrans();\r\n  const style = sizeStyle(size);\r\n\r\n  // Not using React.Children.toArray because it mutates the key prop.\r\n  const childArray: ReactElement<BreadcrumbItemProps>[] = [];\r\n  React.Children.forEach(children, child => {\r\n    if (React.isValidElement(child)) {\r\n      childArray.push(child as ReactElement<BreadcrumbItemProps>);\r\n    }\r\n  });\r\n\r\n  const domRef = useRef<HTMLDivElement>(null);\r\n  const listRef = useRef<HTMLOListElement>(null);\r\n\r\n  const [visibleItems, setVisibleItems] = useValueEffect(childArray.length);\r\n\r\n  const updateOverflow = useCallback(() => {\r\n    const computeVisibleItems = (itemCount: number) => {\r\n      // Refs can be null at runtime.\r\n      const currListRef: HTMLUListElement | null = listRef.current;\r\n      if (!currListRef) {\r\n        return;\r\n      }\r\n\r\n      const listItems = Array.from(currListRef.children) as HTMLLIElement[];\r\n      if (!listItems.length) return;\r\n\r\n      const containerWidth = currListRef.offsetWidth;\r\n      const isShowingMenu = childArray.length > itemCount;\r\n      let calculatedWidth = 0;\r\n      let newVisibleItems = 0;\r\n      let maxVisibleItems = MAX_VISIBLE_ITEMS;\r\n\r\n      calculatedWidth += listItems.shift()!.offsetWidth;\r\n      newVisibleItems++;\r\n\r\n      if (isShowingMenu) {\r\n        calculatedWidth += listItems.shift()?.offsetWidth ?? 0;\r\n        maxVisibleItems--;\r\n      }\r\n\r\n      if (calculatedWidth >= containerWidth) {\r\n        newVisibleItems--;\r\n      }\r\n\r\n      // Ensure the last breadcrumb isn't truncated when we measure it.\r\n      if (listItems.length > 0) {\r\n        const last = listItems.pop();\r\n        last!.style.overflow = 'visible';\r\n\r\n        calculatedWidth += last!.offsetWidth;\r\n        if (calculatedWidth < containerWidth) {\r\n          newVisibleItems++;\r\n        }\r\n\r\n        last!.style.overflow = '';\r\n      }\r\n\r\n      // eslint-disable-next-line no-restricted-syntax\r\n      for (const breadcrumb of listItems.reverse()) {\r\n        calculatedWidth += breadcrumb.offsetWidth;\r\n        if (calculatedWidth < containerWidth) {\r\n          newVisibleItems++;\r\n        }\r\n      }\r\n\r\n      return Math.max(\r\n        MIN_VISIBLE_ITEMS,\r\n        Math.min(maxVisibleItems, newVisibleItems),\r\n      );\r\n    };\r\n\r\n    // eslint-disable-next-line func-names\r\n    setVisibleItems(function* () {\r\n      // Update to show all items.\r\n      yield childArray.length;\r\n\r\n      // Measure, and update to show the items that fit.\r\n      const newVisibleItems = computeVisibleItems(childArray.length);\r\n      yield newVisibleItems;\r\n\r\n      // If the number of items is less than the number of children,\r\n      // then update again to ensure that the menu fits.\r\n      if (newVisibleItems! < childArray.length && newVisibleItems! > 1) {\r\n        yield computeVisibleItems(newVisibleItems!);\r\n      }\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [listRef, children, setVisibleItems]);\r\n\r\n  useResizeObserver({ref: domRef, onResize: updateOverflow});\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useLayoutEffect(updateOverflow, [children]);\r\n\r\n  let contents = childArray;\r\n  if (childArray.length > visibleItems) {\r\n    const selectedKey = childArray.length - 1;\r\n\r\n    const menuItem = (\r\n      <BreadcrumbItem key=\"menu\" sizeStyle={style} isMenuTrigger>\r\n        <MenuTrigger selectionMode=\"single\" selectedValue={selectedKey}>\r\n          <IconButton aria-label=\"â€¦\" disabled={isDisabled} size={style.btn}>\r\n            <MoreHorizIcon />\r\n          </IconButton>\r\n          <Menu>\r\n            {childArray.map((child, index) => {\r\n              const isLast = selectedKey === index;\r\n              return (\r\n                <MenuItem\r\n                  key={index}\r\n                  value={index}\r\n                  onSelected={() => {\r\n                    if (!isLast) {\r\n                      child.props.onSelected?.();\r\n                    }\r\n                  }}\r\n                >\r\n                  {cloneElement(child, {isMenuItem: true})}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Menu>\r\n        </MenuTrigger>\r\n      </BreadcrumbItem>\r\n    );\r\n\r\n    contents = [menuItem];\r\n    const breadcrumbs = [...childArray];\r\n    let endItems = visibleItems;\r\n    if (visibleItems > 1) {\r\n      contents.unshift(breadcrumbs.shift()!);\r\n      endItems--;\r\n    }\r\n    contents.push(...breadcrumbs.slice(-endItems));\r\n  }\r\n\r\n  const lastIndex = contents.length - 1;\r\n  const breadcrumbItems = contents.map((child, index) => {\r\n    const isCurrent = index === lastIndex;\r\n    const isClickable = !isCurrent || currentIsClickable;\r\n\r\n    return cloneElement<BreadcrumbItemProps>(child, {\r\n      key: child.key || index,\r\n      isCurrent,\r\n      sizeStyle: style,\r\n      isClickable,\r\n      isDisabled,\r\n      isLink: isNavigation && child.key !== 'menu',\r\n    });\r\n  });\r\n\r\n  const Element = isNavigation ? 'nav' : 'div';\r\n\r\n  return (\r\n    <Element\r\n      className={clsx(className, 'w-full min-w-0')} // prevent flex parent overflow\r\n      aria-label={trans({message: 'Breadcrumbs'})}\r\n      ref={domRef}\r\n    >\r\n      <ol\r\n        ref={listRef}\r\n        className={clsx('flex flex-nowrap justify-start', style.minHeight)}\r\n      >\r\n        {breadcrumbItems}\r\n      </ol>\r\n    </Element>\r\n  );\r\n}\r\n\r\nfunction sizeStyle(size: BreadcrumbsProps['size']): BreadcrumbSizeStyle {\r\n  switch (size) {\r\n    case 'sm':\r\n      return {font: 'text-sm', icon: 'sm', btn: 'sm', minHeight: 'min-h-36'};\r\n    case 'lg':\r\n      return {font: 'text-lg', icon: 'md', btn: 'md', minHeight: 'min-h-42'};\r\n    case 'xl':\r\n      return {font: 'text-xl', icon: 'md', btn: 'md', minHeight: 'min-h-42'};\r\n    default:\r\n      return {font: 'text-base', icon: 'md', btn: 'md', minHeight: 'min-h-42'};\r\n  }\r\n}\r\n\r\nexport interface BreadcrumbSizeStyle {\r\n  font: string;\r\n  icon: IconSize;\r\n  btn: ButtonSize;\r\n  minHeight: string;\r\n}\r\n","import {ReactNode} from 'react';\r\nimport clsx from 'clsx';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {CloseIcon} from '@common/icons/material/Close';\r\n\r\nexport interface SectionHelperProps {\r\n  title?: ReactNode;\r\n  description?: ReactNode;\r\n  actions?: ReactNode;\r\n  color?: 'positive' | 'danger' | 'warning' | 'primary' | 'neutral' | 'bgAlt';\r\n  className?: string;\r\n  size?: 'sm' | 'md';\r\n  leadingIcon?: ReactNode;\r\n  onClose?: () => void;\r\n}\r\nexport function SectionHelper({\r\n  title,\r\n  description,\r\n  actions,\r\n  color = 'primary',\r\n  className,\r\n  size = 'md',\r\n  leadingIcon,\r\n  onClose,\r\n}: SectionHelperProps) {\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        className,\r\n        'rounded-panel px-10 pb-10',\r\n        leadingIcon || onClose ? 'py-4' : 'py-10',\r\n        size === 'sm' ? 'text-xs' : 'text-sm',\r\n        color === 'positive' && 'bg-positive/focus',\r\n        color === 'warning' && 'bg-warning/focus',\r\n        color === 'danger' && 'bg-danger/focus',\r\n        color === 'primary' && 'bg-primary/focus',\r\n        color === 'neutral' && 'border bg',\r\n        color === 'bgAlt' && 'border bg-alt',\r\n      )}\r\n    >\r\n      {title && (\r\n        <div className=\"mb-4 flex items-center gap-6\">\r\n          {leadingIcon}\r\n          <div className=\"font-medium\">{title}</div>\r\n          {onClose ? (\r\n            <IconButton size=\"xs\" className=\"ml-auto\" onClick={() => onClose()}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          ) : null}\r\n        </div>\r\n      )}\r\n      {description && <div>{description}</div>}\r\n      {actions && <div className=\"mt-14\">{actions}</div>}\r\n    </div>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const EditIcon = createSvgIcon(\r\n  <path d=\"m14.06 9.02.92.92L5.92 19H5v-.92l9.06-9.06M17.66 3c-.25 0-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29zm-3.6 3.19L3 17.25V21h3.75L17.81 9.94l-3.75-3.75z\" />\r\n, 'EditOutlined');\r\n"],"names":["sizeStyle","MenuItem"],"mappings":"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"}