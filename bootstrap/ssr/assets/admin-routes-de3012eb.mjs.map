{"version":3,"file":"admin-routes-de3012eb.mjs","sources":["../../../common/resources/client/admin/admin-sidebar.tsx","../../../common/resources/client/admin/use-admin-setup-alerts.ts","../../../common/resources/client/admin/admin-layout.tsx","../../../common/resources/client/admin/users/user-datatable-filters.ts","../../../common/resources/client/datatable/requests/paginated-resources.ts","../../../common/resources/client/datatable/page/data-table-context.ts","../../../common/resources/client/http/backend-response/pagination-response.ts","../../../common/resources/client/datatable/data-table-pagination-footer.tsx","../../../common/resources/client/icons/material/FilterAlt.tsx","../../../common/resources/client/ui/accordion/accordtion-animation.ts","../../../common/resources/client/ui/accordion/accordion.tsx","../../../common/resources/client/datatable/filters/panels/boolean-filter-panel.tsx","../../../common/resources/client/datatable/filters/add-filter-dialog.tsx","../../../common/resources/client/datatable/filters/add-filter-button.tsx","../../../common/resources/client/datatable/data-table-header.tsx","../../../common/resources/client/datatable/selected-state-datatable-header.tsx","../../../common/resources/client/datatable/filters/filter-list/filter-list-skeleton.tsx","../../../common/resources/client/datatable/data-table.tsx","../../../common/resources/client/datatable/page/data-table-page.tsx","../../../common/resources/client/datatable/requests/delete-selected-rows.ts","../../../common/resources/client/datatable/page/delete-selected-items-action.tsx","../../../common/resources/client/datatable/page/data-table-emty-state-message.tsx","../../../common/resources/client/admin/roles/team.svg","../../../common/resources/client/datatable/data-table-add-item-button.tsx","../../../common/resources/client/datatable/requests/use-export-csv.ts","../../../common/resources/client/datatable/csv-export/csv-export-info-dialog.tsx","../../../common/resources/client/datatable/csv-export/data-table-export-csv-button.tsx","../../../common/resources/client/datatable/column-templates/name-with-avatar.tsx","../../../common/resources/client/icons/material/PersonOff.tsx","../../../common/resources/client/admin/users/requests/use-ban-user.ts","../../../common/resources/client/admin/users/ban-user-dialog.tsx","../../../common/resources/client/admin/users/requests/use-unban-user.ts","../../../common/resources/client/admin/users/requests/use-impersonate-user.ts","../../../common/resources/client/admin/users/user-datatable-columns.tsx","../../../common/resources/client/admin/users/user-datatable.tsx","../../../common/resources/client/utils/array/chunk-array.ts","../../../common/resources/client/admin/appearance/config/default-appearance-config.ts","../../../common/resources/client/ui/forms/slider/base-slider.tsx","../../../common/resources/client/ui/forms/slider/use-slider.ts","../../../common/resources/client/ui/forms/slider/slider-thumb.tsx","../../../common/resources/client/ui/forms/slider/slider.tsx","../../../common/resources/client/admin/appearance/appearance-button.tsx","../../../common/resources/client/admin/appearance/sections/themes/color-icon.tsx","../../../common/resources/client/ui/color-picker/color-swatch.tsx","../../../common/resources/client/ui/color-picker/color-presets.ts","../../../common/resources/client/ui/color-picker/color-picker.tsx","../../../common/resources/client/ui/color-picker/color-picker-dialog.tsx","../../../resources/client/admin/appearance/sections/landing-page-section/landing-page-section-general.tsx","../../../common/resources/client/utils/string/uc-first.ts","../../../common/resources/client/auth/ui/permission-selector.tsx","../../../common/resources/client/admin/appearance/sections/menus/hooks/available-routes.ts","../../../common/resources/client/ui/icon-picker/icon-grid-style.ts","../../../common/resources/client/ui/icon-picker/icon-picker.tsx","../../../common/resources/client/ui/icon-picker/icon-picker-dialog.tsx","../../../common/resources/client/utils/hooks/use-previous.ts","../../../common/resources/client/admin/menus/menu-item-form.tsx","../../../resources/client/admin/appearance/sections/landing-page-section/landing-page-section-action-buttons.tsx","../../../resources/client/admin/appearance/sections/landing-page-section/landing-page-section-primary-features.tsx","../../../resources/client/admin/appearance/sections/landing-page-section/landing-page-section-secondary-features.tsx","../../../resources/client/admin/appearance/app-appearance-config.tsx","../../../common/resources/client/admin/appearance/config/merged-appearance-config.ts","../../../common/resources/client/admin/appearance/appearance-store.ts","../../../common/resources/client/admin/appearance/requests/save-appearance-changes.ts","../../../common/resources/client/admin/appearance/requests/appearance-values.ts","../../../common/resources/client/admin/appearance/section-header.tsx","../../../common/resources/client/admin/appearance/appearance-layout.tsx","../../../common/resources/client/admin/appearance/sections/menus/menu-list.tsx","../../../common/resources/client/admin/appearance/sections/menus/add-menu-item-dialog.tsx","../../../common/resources/client/icons/material/DragIndicator.tsx","../../../common/resources/client/admin/appearance/sections/menus/dropdown-menu.svg","../../../common/resources/client/ui/interactions/dnd/sortable/sortable-line-strategy.ts","../../../common/resources/client/utils/array/move-item-in-array.ts","../../../common/resources/client/utils/array/move-item-in-new-array.ts","../../../common/resources/client/ui/interactions/dnd/sortable/sortable-transform-strategy.ts","../../../common/resources/client/ui/interactions/dnd/sortable/sortable-move-node-strategy.ts","../../../common/resources/client/ui/interactions/dnd/sortable/use-sortable.ts","../../../common/resources/client/admin/appearance/sections/menus/menu-editor.tsx","../../../common/resources/client/admin/appearance/sections/menus/menu-item-editor.tsx","../../../common/resources/client/admin/appearance/sections/general-section.tsx","../../../common/resources/client/utils/string/random-number.ts","../../../common/resources/client/admin/appearance/sections/themes/theme-list.tsx","../../../common/resources/client/ace-editor/ace-dialog.tsx","../../../common/resources/client/admin/appearance/sections/seo/use-seo-tags.ts","../../../common/resources/client/admin/appearance/sections/seo/use-update-seo-tags.ts","../../../common/resources/client/admin/appearance/sections/seo/seo-section.tsx","../../../common/resources/client/admin/appearance/sections/code/custom-code-section.tsx","../../../common/resources/client/admin/custom-pages/articles.svg","../../../common/resources/client/admin/custom-pages/custom-page-datatable-filters.tsx","../../../common/resources/client/admin/custom-pages/custom-page-datatable-columns.tsx","../../../common/resources/client/admin/custom-pages/custom-page-datable-page.tsx","../../../resources/client/admin/settings/app-settings-nav-config.ts","../../../common/resources/client/admin/settings/settings-nav-config.ts","../../../common/resources/client/admin/settings/settings-layout.tsx","../../../common/resources/client/admin/settings/requests/use-admin-settings.ts","../../../common/resources/client/admin/settings/generate-sitemap.ts","../../../common/resources/client/admin/settings/requests/update-admin-settings.ts","../../../common/resources/client/admin/settings/settings-panel.tsx","../../../common/resources/client/admin/settings/settings-separator.tsx","../../../common/resources/client/admin/settings/learn-more-link.tsx","../../../common/resources/client/admin/settings/pages/general-settings.tsx","../../../common/resources/client/ui/themes/utils/color-to-theme-value.ts","../../../common/resources/client/icons/material/Tune.tsx","../../../common/resources/client/admin/appearance/sections/themes/theme-settings-dialog-trigger.tsx","../../../common/resources/client/icons/material/RestartAlt.tsx","../../../common/resources/client/admin/appearance/sections/themes/theme-more-options-button.tsx","../../../common/resources/client/admin/appearance/sections/themes/navbar-color-picker.tsx","../../../common/resources/client/ui/themes/utils/theme-value-to-hex.ts","../../../common/resources/client/admin/appearance/sections/themes/theme-editor.tsx","../../../resources/client/admin/settings/drive-settings.tsx","../../../resources/client/admin/settings/app-settings-routes.tsx","../../../common/resources/client/admin/settings/settings-error-group.tsx","../../../common/resources/client/admin/settings/json-chip-field.tsx","../../../common/resources/client/ui/tabs/tabs-context.tsx","../../../common/resources/client/ui/tabs/tabs.tsx","../../../common/resources/client/ui/tabs/tab-line.tsx","../../../common/resources/client/ui/tabs/tab-list.tsx","../../../common/resources/client/ui/tabs/tab.tsx","../../../common/resources/client/ui/tabs/tab-panels.tsx","../../../common/resources/client/admin/settings/pages/subscription-settings.tsx","../../../common/resources/client/admin/settings/pages/localization-settings.tsx","../../../common/resources/client/admin/settings/pages/authentication-settings.tsx","../../../common/resources/client/admin/settings/pages/uploading-settings/max-server-upload-size.ts","../../../common/resources/client/uploads/utils/space-units.ts","../../../common/resources/client/uploads/utils/convert-to-bytes.ts","../../../common/resources/client/ui/forms/input-field/file-size-field.tsx","../../../common/resources/client/admin/settings/pages/uploading-settings/use-upload-s3-cors.ts","../../../common/resources/client/admin/settings/pages/uploading-settings/dropbox-form/use-generate-dropbox-refresh-token.ts","../../../common/resources/client/admin/settings/pages/uploading-settings/dropbox-form/dropbox-form.tsx","../../../common/resources/client/admin/settings/pages/uploading-settings/uploading-settings.tsx","../../../common/resources/client/admin/settings/pages/mail-settings/mailgun-credentials.tsx","../../../common/resources/client/admin/settings/pages/mail-settings/smtp-credentials.tsx","../../../common/resources/client/admin/settings/pages/mail-settings/ses-credentials.tsx","../../../common/resources/client/admin/settings/pages/mail-settings/postmark-credentials.tsx","../../../common/resources/client/admin/settings/pages/mail-settings/gmail-icon.tsx","../../../common/resources/client/admin/settings/pages/mail-settings/connect-gmail-panel.tsx","../../../common/resources/client/admin/settings/pages/mail-settings/outgoing-mail-group.tsx","../../../common/resources/client/admin/settings/pages/mail-settings/outgoing-email-settings.tsx","../../../common/resources/client/admin/settings/pages/cache-settings/clear-cache.ts","../../../common/resources/client/admin/settings/pages/cache-settings/cache-settings.tsx","../../../common/resources/client/admin/settings/pages/logging-settings.tsx","../../../common/resources/client/admin/settings/pages/queue-settings.tsx","../../../common/resources/client/admin/settings/pages/recaptcha-settings.tsx","../../../common/resources/client/ui/forms/input-field/file-field.tsx","../../../common/resources/client/admin/settings/pages/reports-settings.tsx","../../../common/resources/client/admin/users/requests/update-user.ts","../../../common/resources/client/utils/hooks/sticky-sentinel.ts","../../../common/resources/client/admin/crupdate-resource-layout.tsx","../../../common/resources/client/admin/users/crupdate-user-form.tsx","../../../common/resources/client/icons/material/Report.tsx","../../../common/resources/client/admin/users/update-user-page.tsx","../../../common/resources/client/admin/users/requests/create-user.ts","../../../common/resources/client/admin/users/create-user-page.tsx","../../../common/resources/client/icons/material/Translate.tsx","../../../common/resources/client/admin/translations/use-locale-with-lines.ts","../../../common/resources/client/admin/translations/update-localization.ts","../../../common/resources/client/admin/translations/update-localization-dialog.tsx","../../../common/resources/client/admin/translations/create-localization.ts","../../../common/resources/client/admin/translations/create-localization-dialog.tsx","../../../common/resources/client/admin/translations/around-the-world.svg","../../../common/resources/client/admin/translations/use-upload-translation-file.ts","../../../common/resources/client/admin/translations/localization-index.tsx","../../../common/resources/client/admin/translations/new-translation-dialog.tsx","../../../common/resources/client/admin/translations/translation-management-page.tsx","../../../common/resources/client/ui/overlays/dialog/image-zoom-dialog.tsx","../../../common/resources/client/admin/ads/ads-page.tsx","../../../common/resources/client/admin/appearance/section-list.tsx","../../../common/resources/client/admin/roles/role-index-page-filters.ts","../../../common/resources/client/admin/roles/roles-index-page.tsx","../../../common/resources/client/admin/roles/requests/use-role.ts","../../../common/resources/client/admin/roles/requests/use-update-role.ts","../../../common/resources/client/admin/roles/crupdate-role-page/crupdate-role-settings-panel.tsx","../../../common/resources/client/users/select-user-dialog.tsx","../../../common/resources/client/admin/roles/requests/use-remove-users-from-role.ts","../../../common/resources/client/admin/roles/requests/use-add-users-to-role.ts","../../../common/resources/client/admin/roles/crupdate-role-page/edit-role-page-users-panel.tsx","../../../common/resources/client/admin/roles/crupdate-role-page/edit-role-page.tsx","../../../common/resources/client/admin/roles/requests/user-create-role.ts","../../../common/resources/client/admin/roles/crupdate-role-page/create-role-page.tsx","../../../common/resources/client/admin/tags/tag-index-page-filters.ts","../../../common/resources/client/admin/tags/software-engineer.svg","../../../common/resources/client/admin/tags/crupdate-tag-form.tsx","../../../common/resources/client/utils/string/slugify-string.ts","../../../common/resources/client/admin/tags/requests/use-create-new-tag.ts","../../../common/resources/client/admin/tags/create-tag-dialog.tsx","../../../common/resources/client/admin/tags/requests/use-update-tag.ts","../../../common/resources/client/admin/tags/update-tag-dialog.tsx","../../../common/resources/client/admin/tags/tag-index-page.tsx","../../../common/resources/client/uploads/formatted-bytes.tsx","../../../common/resources/client/icons/material/Visibility.tsx","../../../common/resources/client/admin/file-entry/upload.svg","../../../common/resources/client/admin/file-entry/file-entry-index-page.tsx","../../../common/resources/client/admin/subscriptions/subscription-index-page-filters.ts","../../../common/resources/client/admin/subscriptions/subscriptions.svg","../../../common/resources/client/admin/subscriptions/requests/use-update-subscription.ts","../../../common/resources/client/admin/subscriptions/crupdate-subscription-form.tsx","../../../common/resources/client/admin/subscriptions/update-subscription-dialog.tsx","../../../common/resources/client/admin/subscriptions/requests/use-create-subscription.ts","../../../common/resources/client/admin/subscriptions/create-subscription-dialog.tsx","../../../common/resources/client/icons/material/Pause.tsx","../../../common/resources/client/icons/material/PlayArrow.tsx","../../../common/resources/client/admin/subscriptions/subscriptions-index-page.tsx","../../../common/resources/client/icons/material/Sync.tsx","../../../common/resources/client/admin/plans/requests/use-sync-products.ts","../../../common/resources/client/admin/plans/requests/use-delete-product.ts","../../../common/resources/client/admin/plans/plans-index-page-filters.ts","../../../common/resources/client/admin/plans/plans-index-page.tsx","../../../common/resources/client/admin/plans/requests/use-product.ts","../../../common/resources/client/admin/plans/crupdate-plan-page/billing-period-presets.ts","../../../common/resources/client/admin/plans/crupdate-plan-page/price-form.tsx","../../../common/resources/client/admin/plans/crupdate-plan-page/crupdate-plan-form.tsx","../../../common/resources/client/admin/plans/requests/use-update-product.ts","../../../common/resources/client/admin/plans/crupdate-plan-page/edit-plan-page.tsx","../../../common/resources/client/admin/plans/requests/use-create-product.ts","../../../common/resources/client/admin/plans/crupdate-plan-page/create-plan-page.tsx","../../../common/resources/client/admin/settings/pages/gdpr-settings.tsx","../../../resources/client/admin/app-admin-routes.tsx","../../../common/resources/client/admin/custom-pages/requests/use-update-custom-page.ts","../../../common/resources/client/article-editor/article-editor-title.tsx","../../../common/resources/client/ui/slug-editor.tsx","../../../common/resources/client/icons/material/Undo.tsx","../../../common/resources/client/icons/material/Redo.tsx","../../../common/resources/client/text-editor/menubar/history-buttons.tsx","../../../common/resources/client/icons/material/Code.tsx","../../../common/resources/client/text-editor/menubar/mode-button.tsx","../../../common/resources/client/text-editor/menubar/divider.tsx","../../../common/resources/client/icons/material/FormatBold.tsx","../../../common/resources/client/icons/material/FormatItalic.tsx","../../../common/resources/client/icons/material/FormatUnderlined.tsx","../../../common/resources/client/text-editor/menubar/font-style-buttons.tsx","../../../common/resources/client/icons/material/FormatListBulleted.tsx","../../../common/resources/client/icons/material/FormatListNumbered.tsx","../../../common/resources/client/text-editor/menubar/list-buttons.tsx","../../../common/resources/client/text-editor/insert-link-into-text-editor.ts","../../../common/resources/client/text-editor/menubar/link-button.tsx","../../../common/resources/client/icons/material/Image.tsx","../../../common/resources/client/text-editor/menubar/image-button.tsx","../../../common/resources/client/icons/material/FormatClear.tsx","../../../common/resources/client/text-editor/menubar/clear-format-button.tsx","../../../common/resources/client/icons/material/HorizontalRule.tsx","../../../common/resources/client/icons/material/PriorityHigh.tsx","../../../common/resources/client/icons/material/Note.tsx","../../../common/resources/client/icons/material/SmartDisplay.tsx","../../../common/resources/client/text-editor/menubar/insert-menu-trigger.tsx","../../../common/resources/client/ui/keyboard/keyboard.tsx","../../../common/resources/client/text-editor/menubar/format-menu-trigger.tsx","../../../common/resources/client/icons/material/FormatColorText.tsx","../../../common/resources/client/icons/material/FormatColorFill.tsx","../../../common/resources/client/text-editor/menubar/color-buttons.tsx","../../../common/resources/client/icons/material/FormatAlignLeft.tsx","../../../common/resources/client/icons/material/FormatAlignCenter.tsx","../../../common/resources/client/icons/material/FormatAlignRight.tsx","../../../common/resources/client/icons/material/FormatAlignJustify.tsx","../../../common/resources/client/text-editor/menubar/align-buttons.tsx","../../../common/resources/client/icons/material/FormatIndentDecrease.tsx","../../../common/resources/client/icons/material/FormatIndentIncrease.tsx","../../../common/resources/client/text-editor/menubar/indent-buttons.tsx","../../../common/resources/client/text-editor/menubar/code-block-menu-trigger.tsx","../../../common/resources/client/article-editor/article-body-editor-menubar.tsx","../../../common/resources/client/article-editor/article-editor-sticky-header.tsx","../../../common/resources/client/admin/custom-pages/edit-custom-page.tsx","../../../common/resources/client/admin/custom-pages/requests/use-create-custom-page.ts","../../../common/resources/client/admin/custom-pages/create-custom-page.tsx","../../../common/resources/client/ui/font-selector/font.svg","../../../common/resources/client/ui/font-selector/font-selector-filters.tsx","../../../common/resources/client/i18n/use-filter.ts","../../../common/resources/client/ui/font-picker/browser-safe-fonts.ts","../../../common/resources/client/ui/font-selector/font-selector-state.ts","../../../common/resources/client/ui/font-selector/font-selector-pagination.tsx","../../../common/resources/client/ui/font-selector/font-selector.tsx","../../../common/resources/client/admin/appearance/sections/themes/theme-font-panel.tsx","../../../common/resources/client/admin/appearance/sections/themes/theme-radius-panel.tsx","../../../common/resources/client/admin/logging/logs-page.tsx","../../../common/resources/client/datatable/column-templates/boolean-indicator.tsx","../../../common/resources/client/admin/logging/schedule/use-rerurun-scheduled-command.tsx","../../../common/resources/client/icons/material/EventRepeat.tsx","../../../common/resources/client/admin/logging/schedule/schedule-datatable-columns.tsx","../../../common/resources/client/admin/logging/schedule/timeline.svg","../../../common/resources/client/icons/material/Download.tsx","../../../common/resources/client/admin/logging/schedule/schedule-log-datatable.tsx","../../../common/resources/client/admin/logging/error/bug-fixing.svg","../../../common/resources/client/admin/logging/error/error-log-datatable-columns.tsx","../../../common/resources/client/admin/logging/error/error-log-entry-dialog.tsx","../../../common/resources/client/admin/logging/error/use-delete-error-log.ts","../../../common/resources/client/admin/logging/error/error-log-datatable.tsx","../../../common/resources/client/admin/logging/outgoing-email/opened.svg","../../../common/resources/client/admin/logging/outgoing-email/use-outgoing-email-log-item-with-mime.ts","../../../common/resources/client/admin/logging/outgoing-email/outgoing-email-log-entry-dialog.tsx","../../../common/resources/client/admin/logging/outgoing-email/outgoing-email-log-datatable-columns.tsx","../../../common/resources/client/admin/logging/outgoing-email/outgoing-email-log-datatable-filters.tsx","../../../common/resources/client/admin/logging/outgoing-email/outgoing-email-log-datatable.tsx","../../../common/resources/client/admin/admin-routes.tsx"],"sourcesContent":["import clsx from 'clsx';\r\nimport React from 'react';\r\nimport {CustomMenu} from '../menus/custom-menu';\r\nimport {Trans} from '../i18n/trans';\r\nimport {useSettings} from '../core/settings/use-settings';\r\n\r\ninterface Props {\r\n  className?: string;\r\n  isCompactMode?: boolean;\r\n}\r\nexport function AdminSidebar({className, isCompactMode}: Props) {\r\n  const {version} = useSettings();\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        className,\r\n        'relative flex flex-col gap-20 overflow-y-auto border-r bg-alt px-12 pb-16 pt-26 text-sm font-medium text-muted',\r\n      )}\r\n    >\r\n      <CustomMenu\r\n        matchDescendants={to => to === '/admin'}\r\n        menu=\"admin-sidebar\"\r\n        orientation=\"vertical\"\r\n        onlyShowIcons={isCompactMode}\r\n        itemClassName={({isActive}) =>\r\n          clsx(\r\n            'block w-full rounded-button py-12 px-16',\r\n            isActive\r\n              ? 'bg-primary/6 text-primary font-semibold'\r\n              : 'hover:bg-hover',\r\n          )\r\n        }\r\n        gap=\"gap-8\"\r\n      />\r\n      {!isCompactMode && (\r\n        <div className=\"mt-auto gap-14 px-16 text-xs\">\r\n          <Trans message=\"Version: :number\" values={{number: version}} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\n\r\nexport interface AdminSetupAlert {\r\n  title: string;\r\n  description: string;\r\n}\r\n\r\ninterface Response extends BackendResponse {\r\n  alerts: AdminSetupAlert[];\r\n}\r\n\r\nexport function useAdminSetupAlerts() {\r\n  return useQuery({\r\n    queryKey: ['admin-setup-alerts'],\r\n    queryFn: () => fetchAlerts(),\r\n  });\r\n}\r\n\r\nfunction fetchAlerts() {\r\n  return apiClient\r\n    .get<Response>(`admin/setup-alerts`)\r\n    .then(response => response.data);\r\n}\r\n","import {Outlet} from 'react-router-dom';\r\nimport {AdminSidebar} from './admin-sidebar';\r\nimport {DashboardLayout} from '../ui/layout/dashboard-layout';\r\nimport {DashboardContent} from '../ui/layout/dashboard-content';\r\nimport {DashboardSidenav} from '../ui/layout/dashboard-sidenav';\r\nimport {DashboardNavbar} from '../ui/layout/dashboard-navbar';\r\nimport {\r\n  AdminSetupAlert,\r\n  useAdminSetupAlerts,\r\n} from '@common/admin/use-admin-setup-alerts';\r\nimport {SectionHelper} from '@common/ui/section-helper';\r\nimport {ErrorIcon} from '@common/icons/material/Error';\r\nimport {\r\n  setInLocalStorage,\r\n  useLocalStorage,\r\n} from '@common/utils/hooks/local-storage';\r\n\r\nexport function AdminLayout() {\r\n  return (\r\n    <DashboardLayout name=\"admin\" leftSidenavCanBeCompact>\r\n      <DashboardNavbar size=\"sm\" menuPosition=\"admin-navbar\" />\r\n      <DashboardSidenav position=\"left\" size=\"sm\">\r\n        <AdminSidebar />\r\n      </DashboardSidenav>\r\n      <DashboardContent>\r\n        <div className=\"bg dark:bg-alt\">\r\n          <SetupAlertsList />\r\n          <Outlet />\r\n        </div>\r\n      </DashboardContent>\r\n    </DashboardLayout>\r\n  );\r\n}\r\n\r\nfunction SetupAlertsList() {\r\n  const {data} = useAdminSetupAlerts();\r\n  const [dismissValue] = useLocalStorage<{\r\n    timestamp: number;\r\n  } | null>('admin-setup-alert-dismissed', null);\r\n\r\n  // show alert if 1 day passed since last dismiss\r\n  const shouldShowAlert =\r\n    !dismissValue || Date.now() - dismissValue.timestamp > 86400000;\r\n\r\n  if (!data?.alerts.length || !shouldShowAlert) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed left-0 right-0 top-24 z-10 mx-auto w-max overflow-hidden rounded-panel bg shadow-md\">\r\n      <SetupAlert alert={data.alerts[0]} />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface SetupAlertProps {\r\n  alert: AdminSetupAlert;\r\n}\r\nfunction SetupAlert({alert}: SetupAlertProps) {\r\n  const description = (\r\n    <div dangerouslySetInnerHTML={{__html: alert.description}}></div>\r\n  );\r\n  return (\r\n    <SectionHelper\r\n      leadingIcon={<ErrorIcon size=\"xs\" className=\"text-danger\" />}\r\n      onClose={() => {\r\n        setInLocalStorage('admin-setup-alert-dismissed', {\r\n          timestamp: Date.now(),\r\n        });\r\n      }}\r\n      key={alert.title}\r\n      title={alert.title}\r\n      description={description}\r\n      color=\"neutral\"\r\n    />\r\n  );\r\n}\r\n","import {\r\n  BackendFilter,\r\n  FilterControlType,\r\n  FilterOperator,\r\n} from '../../datatable/filters/backend-filter';\r\nimport {\r\n  createdAtFilter,\r\n  updatedAtFilter,\r\n} from '../../datatable/filters/timestamp-filters';\r\nimport {message} from '../../i18n/message';\r\n\r\nexport const UserDatatableFilters: BackendFilter[] = [\r\n  {\r\n    key: 'email_verified_at',\r\n    label: message('Email'),\r\n    description: message('Email verification status'),\r\n    defaultOperator: FilterOperator.ne,\r\n    control: {\r\n      type: FilterControlType.Select,\r\n      defaultValue: '01',\r\n      options: [\r\n        {\r\n          key: '01',\r\n          label: message('is confirmed'),\r\n          value: {value: null, operator: FilterOperator.ne},\r\n        },\r\n        {\r\n          key: '02',\r\n          label: message('is not confirmed'),\r\n          value: {value: null, operator: FilterOperator.eq},\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  createdAtFilter({\r\n    description: message('Date user registered or was created'),\r\n  }),\r\n  updatedAtFilter({\r\n    description: message('Date user was last updated'),\r\n  }),\r\n  {\r\n    key: 'subscriptions',\r\n    label: message('Subscription'),\r\n    description: message('Whether user is subscribed or not'),\r\n    defaultOperator: FilterOperator.eq,\r\n    control: {\r\n      type: FilterControlType.Select,\r\n      defaultValue: '01',\r\n      options: [\r\n        {\r\n          key: '01',\r\n          label: message('is subscribed'),\r\n          value: {value: '*', operator: FilterOperator.has},\r\n        },\r\n        {\r\n          key: '02',\r\n          label: message('is not subscribed'),\r\n          value: {value: '*', operator: FilterOperator.doesntHave},\r\n        },\r\n      ],\r\n    },\r\n  },\r\n];\r\n","import {\r\n  keepPreviousData,\r\n  useQuery,\r\n  UseQueryOptions,\r\n} from '@tanstack/react-query';\r\nimport {PaginatedBackendResponse} from '../../http/backend-response/pagination-response';\r\nimport {apiClient} from '../../http/query-client';\r\n\r\nexport interface GetDatatableDataParams {\r\n  orderBy?: string;\r\n  orderDir?: 'asc' | 'desc';\r\n  filters?: string | null;\r\n  query?: string;\r\n  with?: string;\r\n  perPage?: number | string | null;\r\n  page?: number | string;\r\n  [key: string]: string | number | boolean | undefined | null;\r\n}\r\n\r\nexport const DatatableDataQueryKey = (\r\n  endpoint: string,\r\n  params?: GetDatatableDataParams | Record<string, string | number | boolean>,\r\n) => {\r\n  // split endpoint by slash, so we can clear cache from the root later,\r\n  // for example, 'link-group' will clear 'link-group/1/links' endpoint\r\n  const key: (string | GetDatatableDataParams)[] = endpoint.split('/');\r\n  if (params) {\r\n    key.push(params);\r\n  }\r\n  return key;\r\n};\r\n\r\nexport function useDatatableData<T = object>(\r\n  endpoint: string,\r\n  params: GetDatatableDataParams,\r\n  options?: Omit<\r\n    UseQueryOptions<\r\n      PaginatedBackendResponse<T>,\r\n      unknown,\r\n      PaginatedBackendResponse<T>,\r\n      any[]\r\n    >,\r\n    'queryKey' | 'queryFn'\r\n  >,\r\n  onLoad?: (data: PaginatedBackendResponse<T>) => void,\r\n) {\r\n  return useQuery({\r\n    queryKey: DatatableDataQueryKey(endpoint, params),\r\n    queryFn: ({signal}) => paginate<T>(endpoint, params, onLoad, signal),\r\n    placeholderData: keepPreviousData,\r\n    ...options,\r\n  });\r\n}\r\n\r\nasync function paginate<T>(\r\n  endpoint: string,\r\n  params: GetDatatableDataParams,\r\n  onLoad?: (data: PaginatedBackendResponse<T>) => void,\r\n  signal?: AbortSignal,\r\n): Promise<PaginatedBackendResponse<T>> {\r\n  if (params.query) {\r\n    await new Promise(resolve => setTimeout(resolve, 300));\r\n  }\r\n  const response = await apiClient\r\n    .get(endpoint, {params, signal: params.query ? signal : undefined})\r\n    .then(response => response.data);\r\n  onLoad?.(response);\r\n  return response;\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {GetDatatableDataParams} from '../requests/paginated-resources';\r\nimport {UseQueryResult} from '@tanstack/react-query';\r\nimport {PaginatedBackendResponse} from '../../http/backend-response/pagination-response';\r\n\r\nexport interface DataTableContextValue<T = unknown, A = unknown> {\r\n  selectedRows: (string | number)[];\r\n  setSelectedRows: (keys: (string | number)[]) => void;\r\n  endpoint: string;\r\n  params: GetDatatableDataParams;\r\n  setParams: (value: GetDatatableDataParams) => void;\r\n  query: UseQueryResult<PaginatedBackendResponse<T> & A, unknown>;\r\n}\r\n\r\nexport const DataTableContext = React.createContext<DataTableContextValue>(\r\n  null!,\r\n);\r\n\r\nexport function useDataTable<T = unknown, A = unknown>() {\r\n  return useContext(DataTableContext) as DataTableContextValue<T, A>;\r\n}\r\n","import {BackendResponse} from './backend-response';\r\n\r\nexport interface LengthAwarePaginationResponse<T> {\r\n  data: T[];\r\n  from: number;\r\n  to: number;\r\n  total: number;\r\n  per_page: number;\r\n  current_page: number;\r\n  last_page: number;\r\n  next_page: number;\r\n  prev_page: number;\r\n}\r\n\r\nexport interface SimplePaginationResponse<T> {\r\n  data: T[];\r\n  from: number;\r\n  to: number;\r\n  per_page: number;\r\n  current_page: number;\r\n}\r\n\r\ninterface CursorPaginationResponse<T> {\r\n  data: T[];\r\n  next_cursor: string | null;\r\n  per_page: number;\r\n  prev_cursor: string | null;\r\n}\r\n\r\nexport type PaginationResponse<T> =\r\n  | LengthAwarePaginationResponse<T>\r\n  | SimplePaginationResponse<T>\r\n  | CursorPaginationResponse<T>;\r\n\r\nexport const EMPTY_PAGINATION_RESPONSE = {\r\n  pagination: {data: [], from: 0, to: 0, per_page: 15, current_page: 1},\r\n};\r\n\r\nexport interface PaginatedBackendResponse<T> extends BackendResponse {\r\n  pagination: PaginationResponse<T>;\r\n}\r\n\r\nexport function hasNextPage(pagination: PaginationResponse<unknown>): boolean {\r\n  if ('next_cursor' in pagination) {\r\n    return pagination.next_cursor != null;\r\n  }\r\n\r\n  if ('last_page' in pagination) {\r\n    return pagination.current_page < pagination.last_page;\r\n  }\r\n\r\n  return (\r\n    pagination.data.length > 0 && pagination.data.length >= pagination.per_page\r\n  );\r\n}\r\n","import {UseQueryResult} from '@tanstack/react-query';\r\nimport {\r\n  hasNextPage,\r\n  LengthAwarePaginationResponse,\r\n  PaginatedBackendResponse,\r\n} from '../http/backend-response/pagination-response';\r\nimport {useNumberFormatter} from '../i18n/use-number-formatter';\r\nimport {Select} from '../ui/forms/select/select';\r\nimport {Trans} from '../i18n/trans';\r\nimport {Item} from '../ui/forms/listbox/item';\r\nimport {IconButton} from '../ui/buttons/icon-button';\r\nimport {KeyboardArrowLeftIcon} from '../icons/material/KeyboardArrowLeft';\r\nimport {KeyboardArrowRightIcon} from '../icons/material/KeyboardArrowRight';\r\nimport React from 'react';\r\nimport {useIsMobileMediaQuery} from '../utils/hooks/is-mobile-media-query';\r\nimport clsx from 'clsx';\r\n\r\nconst defaultPerPage = 15;\r\nconst perPageOptions = [{key: 10}, {key: 15}, {key: 20}, {key: 50}, {key: 100}];\r\n\r\ntype DataTablePaginationFooterProps = {\r\n  query: UseQueryResult<PaginatedBackendResponse<unknown>, unknown>;\r\n  onPerPageChange?: (perPage: number) => void;\r\n  onPageChange?: (page: number) => void;\r\n  className?: string;\r\n};\r\nexport function DataTablePaginationFooter({\r\n  query,\r\n  onPerPageChange,\r\n  onPageChange,\r\n  className,\r\n}: DataTablePaginationFooterProps) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n  const numberFormatter = useNumberFormatter();\r\n  const pagination = query.data\r\n    ?.pagination as LengthAwarePaginationResponse<any>;\r\n\r\n  if (!pagination) return null;\r\n\r\n  const perPageSelect = onPerPageChange ? (\r\n    <Select\r\n      minWidth=\"min-w-auto\"\r\n      selectionMode=\"single\"\r\n      disabled={query.isLoading}\r\n      labelPosition=\"side\"\r\n      size=\"xs\"\r\n      label={<Trans message=\"Items per page\" />}\r\n      selectedValue={pagination.per_page || defaultPerPage}\r\n      onSelectionChange={value => onPerPageChange(value as number)}\r\n    >\r\n      {perPageOptions.map(option => (\r\n        <Item key={option.key} value={option.key}>\r\n          {option.key}\r\n        </Item>\r\n      ))}\r\n    </Select>\r\n  ) : null;\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        'flex h-54 select-none items-center justify-end gap-20 px-20',\r\n        className,\r\n      )}\r\n    >\r\n      {!isMobile && perPageSelect}\r\n      {pagination.from && pagination.to && 'total' in pagination ? (\r\n        <div className=\"text-sm\">\r\n          <Trans\r\n            message=\":from - :to of :total\"\r\n            values={{\r\n              from: pagination.from,\r\n              to: pagination.to,\r\n              total: numberFormatter.format(pagination.total),\r\n            }}\r\n          />\r\n        </div>\r\n      ) : null}\r\n      <div className=\"text-muted\">\r\n        <IconButton\r\n          disabled={query.isFetching || pagination.current_page < 2}\r\n          onClick={() => {\r\n            onPageChange?.(pagination?.current_page - 1);\r\n          }}\r\n        >\r\n          <KeyboardArrowLeftIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          disabled={query.isFetching || !hasNextPage(pagination)}\r\n          onClick={() => {\r\n            onPageChange?.(pagination?.current_page + 1);\r\n          }}\r\n        >\r\n          <KeyboardArrowRightIcon />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FilterAltIcon = createSvgIcon(\r\n  <path d=\"M7 6h10l-5.01 6.3L7 6zm-2.75-.39C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\" />\r\n, 'FilterAltOutlined');\r\n","export const AccordionAnimation = {\r\n  variants: {\r\n    open: {\r\n      height: 'auto',\r\n      visibility: 'visible',\r\n      transitionEnd: {\r\n        overflow: 'auto',\r\n      },\r\n    },\r\n    closed: {\r\n      height: 0,\r\n      overflow: 'hidden',\r\n      transitionEnd: {\r\n        visibility: 'hidden',\r\n      },\r\n    },\r\n  },\r\n  transition: {type: 'tween', duration: 0.2},\r\n} as const;\r\n","import React, {\r\n  cloneElement,\r\n  isValidElement,\r\n  ReactElement,\r\n  ReactNode,\r\n  useId,\r\n  useRef,\r\n} from 'react';\r\nimport clsx from 'clsx';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {useControlledState} from '@react-stately/utils';\r\nimport {FocusScope, useFocusManager} from '@react-aria/focus';\r\nimport {AccordionAnimation} from '@common/ui/accordion/accordtion-animation';\r\nimport {ArrowDropDownIcon} from '@common/icons/material/ArrowDropDown';\r\n\r\ntype Props = {\r\n  variant?: 'outline' | 'default' | 'minimal';\r\n  children?: ReactNode;\r\n  mode?: 'single' | 'multiple';\r\n  expandedValues?: (string | number)[];\r\n  defaultExpandedValues?: (string | number)[];\r\n  onExpandedChange?: (key: (string | number)[]) => void;\r\n  className?: string;\r\n  isLazy?: boolean;\r\n};\r\nexport const Accordion = React.forwardRef<HTMLDivElement, Props>(\r\n  (\r\n    {\r\n      variant = 'default',\r\n      mode = 'single',\r\n      children,\r\n      className,\r\n      isLazy,\r\n      ...other\r\n    },\r\n    ref,\r\n  ) => {\r\n    const [expandedValues, setExpandedValues] = useControlledState(\r\n      other.expandedValues,\r\n      other.defaultExpandedValues || [],\r\n      other.onExpandedChange,\r\n    );\r\n\r\n    const itemsCount = React.Children.count(children);\r\n\r\n    return (\r\n      <div\r\n        className={clsx(variant === 'outline' && 'space-y-10', className)}\r\n        ref={ref}\r\n        role=\"presentation\"\r\n      >\r\n        <AnimatePresence>\r\n          <FocusScope>\r\n            {React.Children.map(children, (child, index) => {\r\n              if (!isValidElement<AccordionItemProps>(child)) return null;\r\n              return cloneElement<AccordionItemProps>(child, {\r\n                key: child.key || index,\r\n                value: child.props.value || index,\r\n                isFirst: index === 0,\r\n                isLast: index === itemsCount - 1,\r\n                mode,\r\n                variant,\r\n                expandedValues,\r\n                setExpandedValues,\r\n                isLazy,\r\n              });\r\n            })}\r\n          </FocusScope>\r\n        </AnimatePresence>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\ninterface AccordionItemProps {\r\n  children: ReactNode;\r\n  disabled?: boolean;\r\n  label: ReactNode;\r\n  description?: ReactNode;\r\n  value?: string | number;\r\n  isFirst?: boolean;\r\n  isLast?: boolean;\r\n  bodyClassName?: string;\r\n  labelClassName?: string;\r\n  buttonPadding?: string;\r\n  chevronPosition?: 'left' | 'right';\r\n  startIcon?: ReactElement;\r\n  endAppend?: ReactElement;\r\n  variant?: 'outline' | 'default' | 'minimal';\r\n  expandedValues?: (string | number)[];\r\n  setExpandedValues?: (keys: (string | number)[]) => void;\r\n  mode?: 'single' | 'multiple';\r\n  footerContent?: ReactNode;\r\n  isLazy?: boolean;\r\n  onHeaderMouseEnter?: () => void;\r\n  onHeaderMouseLeave?: () => void;\r\n}\r\nexport function AccordionItem(props: AccordionItemProps) {\r\n  const {\r\n    children,\r\n    label,\r\n    disabled,\r\n    bodyClassName,\r\n    labelClassName,\r\n    buttonPadding = 'py-10 pl-14 pr-10',\r\n    startIcon,\r\n    description,\r\n    endAppend,\r\n    chevronPosition = 'right',\r\n    isFirst,\r\n    mode,\r\n    isLazy,\r\n    variant,\r\n    footerContent,\r\n    onHeaderMouseEnter,\r\n    onHeaderMouseLeave,\r\n  } = props;\r\n  const expandedValues = props.expandedValues || [];\r\n  const value = props.value || 0;\r\n  const setExpandedValues = props.setExpandedValues || (() => {});\r\n  const ref = useRef<HTMLButtonElement>(null);\r\n  const isExpanded = !disabled && expandedValues!.includes(value!);\r\n  const wasExpandedOnce = useRef(false);\r\n  if (isExpanded) {\r\n    wasExpandedOnce.current = true;\r\n  }\r\n  const focusManager = useFocusManager();\r\n  const id = useId();\r\n  const buttonId = `${id}-button`;\r\n  const panelId = `${id}-panel`;\r\n\r\n  const onKeyDown = (e: React.KeyboardEvent<HTMLButtonElement>) => {\r\n    switch (e.key) {\r\n      case 'ArrowDown':\r\n        focusManager?.focusNext();\r\n        break;\r\n      case 'ArrowUp':\r\n        focusManager?.focusPrevious();\r\n        break;\r\n      case 'Home':\r\n        focusManager?.focusFirst();\r\n        break;\r\n      case 'End':\r\n        focusManager?.focusLast();\r\n        break;\r\n    }\r\n  };\r\n\r\n  const toggle = () => {\r\n    const i = expandedValues.indexOf(value);\r\n    if (i > -1) {\r\n      const newKeys = [...expandedValues];\r\n      newKeys.splice(i, 1);\r\n      setExpandedValues(newKeys);\r\n    } else if (mode === 'single') {\r\n      setExpandedValues([value]);\r\n    } else {\r\n      setExpandedValues([...expandedValues, value]);\r\n    }\r\n  };\r\n\r\n  const chevron = (\r\n    <div className={clsx(variant === 'minimal' && '')}>\r\n      <ArrowDropDownIcon\r\n        aria-hidden=\"true\"\r\n        size=\"md\"\r\n        className={clsx(\r\n          disabled ? 'text-disabled' : 'text-muted',\r\n          isExpanded && 'rotate-180 transition-transform',\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        variant === 'default' && 'border-b',\r\n        variant === 'outline' && 'rounded-panel border',\r\n        disabled && 'text-disabled',\r\n      )}\r\n    >\r\n      <h3\r\n        className={clsx(\r\n          'flex w-full items-center justify-between text-sm',\r\n          disabled && 'pointer-events-none',\r\n          isFirst && variant === 'default' && 'border-t',\r\n          isExpanded && variant !== 'minimal'\r\n            ? 'border-b'\r\n            : 'border-b border-b-transparent',\r\n          variant === 'outline'\r\n            ? isExpanded\r\n              ? 'rounded-panel-t'\r\n              : 'rounded-panel'\r\n            : undefined,\r\n        )}\r\n        onMouseEnter={onHeaderMouseEnter}\r\n        onMouseLeave={onHeaderMouseLeave}\r\n      >\r\n        <button\r\n          disabled={disabled}\r\n          aria-expanded={isExpanded}\r\n          id={buttonId}\r\n          aria-controls={panelId}\r\n          type=\"button\"\r\n          ref={ref}\r\n          onKeyDown={onKeyDown}\r\n          onClick={() => {\r\n            if (!disabled) {\r\n              toggle();\r\n            }\r\n          }}\r\n          className={clsx(\r\n            'flex flex-auto items-center gap-10 text-left outline-none hover:bg-hover focus-visible:bg-primary/focus',\r\n            buttonPadding,\r\n          )}\r\n        >\r\n          {chevronPosition === 'left' && chevron}\r\n          {startIcon &&\r\n            cloneElement(startIcon, {\r\n              size: 'md',\r\n              className: clsx(\r\n                startIcon.props.className,\r\n                disabled ? 'text-disabled' : 'text-muted',\r\n              ),\r\n            })}\r\n          <div className=\"flex-auto overflow-hidden overflow-ellipsis\">\r\n            <div className={labelClassName} data-testid=\"accordion-label\">\r\n              {label}\r\n            </div>\r\n            {description && (\r\n              <div className=\"text-xs text-muted\">{description}</div>\r\n            )}\r\n          </div>\r\n          {chevronPosition === 'right' && chevron}\r\n        </button>\r\n        {endAppend && (\r\n          <div className=\"flex-shrink-0 px-4 text-sm text-muted\">\r\n            {endAppend}\r\n          </div>\r\n        )}\r\n      </h3>\r\n      <m.div\r\n        aria-labelledby={id}\r\n        role=\"region\"\r\n        variants={AccordionAnimation.variants}\r\n        transition={AccordionAnimation.transition}\r\n        initial={false}\r\n        animate={isExpanded ? 'open' : 'closed'}\r\n      >\r\n        <div className={clsx('p-16', bodyClassName)}>\r\n          {!isLazy || wasExpandedOnce ? children : null}\r\n        </div>\r\n        {footerContent}\r\n      </m.div>\r\n    </div>\r\n  );\r\n}\r\n","import {FilterPanelProps} from './filter-panel-props';\r\nimport {FilterBooleanToggleControl} from '@common/datatable/filters/backend-filter';\r\n\r\nexport function BooleanFilterPanel({\r\n  filter,\r\n}: FilterPanelProps<FilterBooleanToggleControl>) {\r\n  // Toggling accordion in the dialog will already apply boolean filter, no need for any extra fields here\r\n  return null;\r\n}\r\n","import {Dialog} from '../../ui/overlays/dialog/dialog';\r\nimport {\r\n  BackendFilter,\r\n  CustomFilterControl,\r\n  DatePickerFilterControl,\r\n  FilterBooleanToggleControl,\r\n  FilterChipFieldControl,\r\n  FilterControlType,\r\n  FilterOperator,\r\n  FilterSelectControl,\r\n  FilterSelectModelControl,\r\n  FilterTextInputControl,\r\n} from './backend-filter';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {useState} from 'react';\r\nimport {DialogHeader} from '../../ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '../../ui/overlays/dialog/dialog-body';\r\nimport {useBackendFilterUrlParams} from './backend-filter-url-params';\r\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\r\nimport {Accordion, AccordionItem} from '../../ui/accordion/accordion';\r\nimport {Button} from '../../ui/buttons/button';\r\nimport {useForm} from 'react-hook-form';\r\nimport {Form} from '../../ui/forms/form';\r\nimport {Checkbox} from '../../ui/forms/toggle/checkbox';\r\nimport {SelectFilterPanel} from './panels/select-filter-panel';\r\nimport {DateRangeFilterPanel} from './panels/date-range-filter-panel';\r\nimport {NormalizedModelFilterPanel} from './panels/normalized-model-filter-panel';\r\nimport {InputFilterPanel} from './panels/input-filter-panel';\r\nimport {BooleanFilterPanel} from './panels/boolean-filter-panel';\r\nimport clsx from 'clsx';\r\nimport {ChipFieldFilterPanel} from '@common/datatable/filters/panels/chip-field-filter-panel';\r\n\r\nexport interface FilterItemFormValue<T = any> {\r\n  value: T;\r\n  operator?: FilterOperator;\r\n}\r\n\r\ninterface AddFilterDialogProps {\r\n  filters: BackendFilter[];\r\n}\r\nexport function AddFilterDialog({filters}: AddFilterDialogProps) {\r\n  const {decodedFilters} = useBackendFilterUrlParams(filters);\r\n  const {formId} = useDialogContext();\r\n\r\n  // expand currently active filters\r\n  const [expandedFilters, setExpandedFilters] = useState<(string | number)[]>(\r\n    () => {\r\n      return decodedFilters.map(f => f.key);\r\n    },\r\n  );\r\n\r\n  const clearButton = (\r\n    <Button\r\n      size=\"xs\"\r\n      variant=\"outline\"\r\n      className=\"mr-auto\"\r\n      onClick={() => {\r\n        setExpandedFilters([]);\r\n      }}\r\n    >\r\n      <Trans message=\"Clear\" />\r\n    </Button>\r\n  );\r\n\r\n  const applyButton = (\r\n    <Button\r\n      size=\"xs\"\r\n      variant=\"flat\"\r\n      color=\"primary\"\r\n      className=\"ml-auto\"\r\n      type=\"submit\"\r\n      form={formId}\r\n    >\r\n      <Trans message=\"Apply\" />\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <Dialog className=\"min-w-[300px]\" maxWidth=\"max-w-400\" size=\"auto\">\r\n      <DialogHeader\r\n        padding=\"px-14 py-10\"\r\n        leftAdornment={clearButton}\r\n        rightAdornment={applyButton}\r\n      >\r\n        <Trans message=\"Filter\" />\r\n      </DialogHeader>\r\n      <DialogBody padding=\"p-0\">\r\n        <FilterList\r\n          filters={filters}\r\n          expandedFilters={expandedFilters}\r\n          setExpandedFilters={setExpandedFilters}\r\n        />\r\n      </DialogBody>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\ninterface FilterListProps {\r\n  filters: BackendFilter[];\r\n  expandedFilters: (string | number)[];\r\n  setExpandedFilters: (value: (string | number)[]) => void;\r\n}\r\nfunction FilterList({\r\n  filters,\r\n  expandedFilters,\r\n  setExpandedFilters,\r\n}: FilterListProps) {\r\n  const {decodedFilters, replaceAll} = useBackendFilterUrlParams(filters);\r\n\r\n  // either get value and operator from url params if filter is active, or get defaults from filter config\r\n  const defaultValues: Record<string, FilterItemFormValue> = {};\r\n  filters.forEach(filter => {\r\n    const appliedFilter = decodedFilters.find(f => f.key === filter.key);\r\n    defaultValues[filter.key] =\r\n      appliedFilter?.value !== undefined\r\n        ? // there might be some extra keys set on filter besides\r\n          // \"value\" and \"operator\", so add the whole object to form\r\n          appliedFilter\r\n        : {\r\n            value: filter.control.defaultValue,\r\n            operator: filter.defaultOperator,\r\n          };\r\n  });\r\n  const form = useForm<Record<string, FilterItemFormValue>>({defaultValues});\r\n  const {formId, close} = useDialogContext();\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      id={formId}\r\n      onSubmit={formValue => {\r\n        const filterValue = Object.entries(formValue)\r\n          // remove undefined and non-expanded filters, so \"clear\" button will correctly remove active filters\r\n          .filter(\r\n            ([key, fieldValue]) =>\r\n              expandedFilters.includes(key) && fieldValue !== undefined,\r\n          )\r\n          .map(([key, fieldValue]) => ({\r\n            key,\r\n            ...fieldValue, // value and operator from form\r\n          }));\r\n\r\n        replaceAll(filterValue);\r\n        close();\r\n      }}\r\n    >\r\n      <Accordion\r\n        mode=\"multiple\"\r\n        expandedValues={expandedFilters}\r\n        onExpandedChange={setExpandedFilters}\r\n      >\r\n        {filters.map(filter => (\r\n          <AccordionItem\r\n            startIcon={\r\n              <Checkbox checked={expandedFilters.includes(filter.key)} />\r\n            }\r\n            key={filter.key}\r\n            value={filter.key}\r\n            label={<Trans {...filter.label} />}\r\n            bodyClassName=\"max-h-288 overflow-y-auto compact-scrollbar\"\r\n          >\r\n            {filter.description && (\r\n              <div\r\n                className={clsx(\r\n                  'text-xs text-muted',\r\n                  // boolean filter will have nothing in the panel, no need to add margin\r\n                  filter.control.type !== FilterControlType.BooleanToggle &&\r\n                    'mb-14',\r\n                )}\r\n              >\r\n                <Trans {...filter.description} />\r\n              </div>\r\n            )}\r\n            <AddFilterDialogPanel filter={filter} />\r\n          </AccordionItem>\r\n        ))}\r\n      </Accordion>\r\n    </Form>\r\n  );\r\n}\r\n\r\ninterface ActiveFilterPanelProps {\r\n  filter: BackendFilter;\r\n}\r\nexport function AddFilterDialogPanel({filter}: ActiveFilterPanelProps) {\r\n  switch (filter.control.type) {\r\n    case FilterControlType.Select:\r\n      return (\r\n        <SelectFilterPanel\r\n          filter={filter as BackendFilter<FilterSelectControl>}\r\n        />\r\n      );\r\n    case FilterControlType.ChipField:\r\n      return (\r\n        <ChipFieldFilterPanel\r\n          filter={filter as BackendFilter<FilterChipFieldControl>}\r\n        />\r\n      );\r\n    case FilterControlType.DateRangePicker:\r\n      return (\r\n        <DateRangeFilterPanel\r\n          filter={filter as BackendFilter<DatePickerFilterControl>}\r\n        />\r\n      );\r\n    case FilterControlType.SelectModel:\r\n      return (\r\n        <NormalizedModelFilterPanel\r\n          filter={filter as BackendFilter<FilterSelectModelControl>}\r\n        />\r\n      );\r\n    case FilterControlType.Input:\r\n      return (\r\n        <InputFilterPanel\r\n          filter={filter as BackendFilter<FilterTextInputControl>}\r\n        />\r\n      );\r\n    case FilterControlType.BooleanToggle:\r\n      return (\r\n        <BooleanFilterPanel\r\n          filter={filter as BackendFilter<FilterBooleanToggleControl>}\r\n        />\r\n      );\r\n    case 'custom':\r\n      const CustomComponent = filter.control.panel;\r\n      return (\r\n        <CustomComponent\r\n          filter={filter as BackendFilter<CustomFilterControl>}\r\n        />\r\n      );\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n","import {Button, ButtonProps} from '../../ui/buttons/button';\r\nimport {BackendFilter} from './backend-filter';\r\nimport {FilterAltIcon} from '../../icons/material/FilterAlt';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {useIsMobileMediaQuery} from '../../utils/hooks/is-mobile-media-query';\r\nimport {IconButton} from '../../ui/buttons/icon-button';\r\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\r\nimport {AddFilterDialog} from './add-filter-dialog';\r\nimport {ReactElement} from 'react';\r\n\r\ninterface AddFilterButtonProps {\r\n  filters: BackendFilter[];\r\n  icon?: ReactElement;\r\n  color?: ButtonProps['color'];\r\n  variant?: ButtonProps['variant'];\r\n  disabled?: boolean;\r\n  size?: ButtonProps['size'];\r\n  className?: string;\r\n}\r\nexport function AddFilterButton({\r\n  filters,\r\n  icon = <FilterAltIcon />,\r\n  color = 'primary',\r\n  variant = 'outline',\r\n  size = 'sm',\r\n  disabled,\r\n  className,\r\n}: AddFilterButtonProps) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n\r\n  const desktopButton = (\r\n    <Button\r\n      variant={variant}\r\n      color={color}\r\n      startIcon={icon}\r\n      disabled={disabled}\r\n      size={size}\r\n      className={className}\r\n    >\r\n      <Trans message=\"Filter\" />\r\n    </Button>\r\n  );\r\n\r\n  const mobileButton = (\r\n    <IconButton\r\n      color={color}\r\n      size=\"sm\"\r\n      variant={variant}\r\n      disabled={disabled}\r\n      className={className}\r\n    >\r\n      {icon}\r\n    </IconButton>\r\n  );\r\n\r\n  return (\r\n    <DialogTrigger type=\"popover\">\r\n      {isMobile ? mobileButton : desktopButton}\r\n      <AddFilterDialog filters={filters} />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n","import React, {ComponentPropsWithoutRef, ReactNode} from 'react';\r\nimport {BackendFilter} from './filters/backend-filter';\r\nimport {useTrans} from '../i18n/use-trans';\r\nimport {TextField} from '../ui/forms/input-field/text-field/text-field';\r\nimport {SearchIcon} from '../icons/material/Search';\r\nimport {AddFilterButton} from './filters/add-filter-button';\r\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\r\nimport {message} from '@common/i18n/message';\r\n\r\ninterface Props {\r\n  actions?: ReactNode;\r\n  filters?: BackendFilter[];\r\n  filtersLoading?: boolean;\r\n  searchPlaceholder?: MessageDescriptor;\r\n  searchValue?: string;\r\n  onSearchChange: (value: string) => void;\r\n}\r\nexport function DataTableHeader({\r\n  actions,\r\n  filters,\r\n  filtersLoading,\r\n  searchPlaceholder = message('Type to search...'),\r\n  searchValue = '',\r\n  onSearchChange,\r\n}: Props) {\r\n  const {trans} = useTrans();\r\n  return (\r\n    <HeaderLayout>\r\n      <TextField\r\n        size=\"sm\"\r\n        className=\"mr-auto min-w-180 max-w-440 flex-auto\"\r\n        inputWrapperClassName=\"mr-24 md:mr-0\"\r\n        placeholder={trans(searchPlaceholder)}\r\n        startAdornment={<SearchIcon size=\"sm\" />}\r\n        value={searchValue}\r\n        onChange={e => {\r\n          onSearchChange(e.target.value);\r\n        }}\r\n      />\r\n      {filters && (\r\n        <AddFilterButton filters={filters} disabled={filtersLoading} />\r\n      )}\r\n      {actions}\r\n    </HeaderLayout>\r\n  );\r\n}\r\n\r\ninterface AnimatedHeaderProps extends ComponentPropsWithoutRef<'div'> {\r\n  children: ReactNode;\r\n}\r\nexport function HeaderLayout({children, ...domProps}: AnimatedHeaderProps) {\r\n  return (\r\n    <div\r\n      className=\"hidden-scrollbar relative mb-24 flex h-42 items-center gap-8 overflow-x-auto text-muted md:gap-12\"\r\n      {...domProps}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import {Trans} from '@common/i18n/trans';\r\nimport React, {ReactNode} from 'react';\r\nimport {HeaderLayout} from '@common/datatable/data-table-header';\r\n\r\ninterface Props {\r\n  actions?: ReactNode;\r\n  selectedItemsCount: number;\r\n}\r\nexport function SelectedStateDatatableHeader({\r\n  actions,\r\n  selectedItemsCount,\r\n}: Props) {\r\n  return (\r\n    <HeaderLayout data-testid=\"datatable-selected-header\">\r\n      <div className=\"mr-auto\">\r\n        <Trans\r\n          message=\"[one 1 item|other :count items] selected\"\r\n          values={{count: selectedItemsCount}}\r\n        />\r\n      </div>\r\n      {actions}\r\n    </HeaderLayout>\r\n  );\r\n}\r\n","import {m} from 'framer-motion';\r\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\r\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\r\nimport React from 'react';\r\n\r\nexport function FilterListSkeleton() {\r\n  return (\r\n    <m.div\r\n      className=\"flex items-center gap-6 h-30\"\r\n      key=\"filter-list-skeleton\"\r\n      {...opacityAnimation}\r\n    >\r\n      <Skeleton variant=\"rect\" size=\"h-full w-144\" radius=\"rounded-md\" />\r\n      <Skeleton variant=\"rect\" size=\"h-full w-112\" radius=\"rounded-md\" />\r\n      <Skeleton variant=\"rect\" size=\"h-full w-172\" radius=\"rounded-md\" />\r\n    </m.div>\r\n  );\r\n}\r\n","import React, {\r\n  cloneElement,\r\n  ComponentProps,\r\n  ReactElement,\r\n  ReactNode,\r\n  useState,\r\n} from 'react';\r\nimport {TableDataItem} from '../ui/tables/types/table-data-item';\r\nimport {BackendFilter} from './filters/backend-filter';\r\nimport {MessageDescriptor} from '../i18n/message-descriptor';\r\nimport {ColumnConfig} from './column-config';\r\nimport {useTrans} from '../i18n/use-trans';\r\nimport {useBackendFilterUrlParams} from './filters/backend-filter-url-params';\r\nimport {\r\n  GetDatatableDataParams,\r\n  useDatatableData,\r\n} from './requests/paginated-resources';\r\nimport {DataTableContext} from './page/data-table-context';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {ProgressBar} from '../ui/progress/progress-bar';\r\nimport {Table, TableProps} from '../ui/tables/table';\r\nimport {DataTablePaginationFooter} from './data-table-pagination-footer';\r\nimport {DataTableHeader} from './data-table-header';\r\nimport {FilterList} from './filters/filter-list/filter-list';\r\nimport {SelectedStateDatatableHeader} from '@common/datatable/selected-state-datatable-header';\r\nimport clsx from 'clsx';\r\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\r\nimport {BackendFiltersUrlKey} from '@common/datatable/filters/backend-filters-url-key';\r\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\r\nimport {FilterListSkeleton} from '@common/datatable/filters/filter-list/filter-list-skeleton';\r\n\r\nexport interface DataTableProps<T extends TableDataItem> {\r\n  filters?: BackendFilter[];\r\n  filtersLoading?: boolean;\r\n  columns: ColumnConfig<T>[];\r\n  searchPlaceholder?: MessageDescriptor;\r\n  queryParams?: Record<string, string | number | undefined | null>;\r\n  endpoint: string;\r\n  resourceName?: ReactNode;\r\n  emptyStateMessage: ReactElement<{isFiltering: boolean}>;\r\n  actions?: ReactNode;\r\n  enableSelection?: boolean;\r\n  selectionStyle?: TableProps<T>['selectionStyle'];\r\n  selectedActions?: ReactNode;\r\n  onRowAction?: TableProps<T>['onAction'];\r\n  tableDomProps?: ComponentProps<'table'>;\r\n  children?: ReactNode;\r\n  collapseTableOnMobile?: boolean;\r\n  cellHeight?: string;\r\n}\r\nexport function DataTable<T extends TableDataItem>({\r\n  filters,\r\n  filtersLoading,\r\n  columns,\r\n  searchPlaceholder,\r\n  queryParams,\r\n  endpoint,\r\n  actions,\r\n  selectedActions,\r\n  emptyStateMessage,\r\n  tableDomProps,\r\n  onRowAction,\r\n  enableSelection = true,\r\n  selectionStyle = 'checkbox',\r\n  children,\r\n  cellHeight,\r\n  collapseTableOnMobile = true,\r\n}: DataTableProps<T>) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n  const {trans} = useTrans();\r\n  const {encodedFilters} = useBackendFilterUrlParams(filters);\r\n  const [params, setParams] = useState<GetDatatableDataParams>({perPage: 15});\r\n  const [selectedRows, setSelectedRows] = useState<(string | number)[]>([]);\r\n  const query = useDatatableData<T>(\r\n    endpoint,\r\n    {\r\n      ...params,\r\n      ...queryParams,\r\n      [BackendFiltersUrlKey]: encodedFilters,\r\n    },\r\n    undefined,\r\n    () => setSelectedRows([]),\r\n  );\r\n\r\n  const isFiltering = !!(params.query || params.filters || encodedFilters);\r\n  const pagination = query.data?.pagination;\r\n\r\n  return (\r\n    <DataTableContext.Provider\r\n      value={{\r\n        selectedRows,\r\n        setSelectedRows,\r\n        endpoint,\r\n        params,\r\n        setParams,\r\n        query,\r\n      }}\r\n    >\r\n      {children}\r\n      <AnimatePresence initial={false} mode=\"wait\">\r\n        {selectedRows.length ? (\r\n          <SelectedStateDatatableHeader\r\n            selectedItemsCount={selectedRows.length}\r\n            actions={selectedActions}\r\n            key=\"selected\"\r\n          />\r\n        ) : (\r\n          <DataTableHeader\r\n            searchPlaceholder={searchPlaceholder}\r\n            searchValue={params.query}\r\n            onSearchChange={query => setParams({...params, query})}\r\n            actions={actions}\r\n            filters={filters}\r\n            filtersLoading={filtersLoading}\r\n            key=\"default\"\r\n          />\r\n        )}\r\n      </AnimatePresence>\r\n\r\n      {filters && (\r\n        <div className=\"mb-14\">\r\n          <AnimatePresence initial={false} mode=\"wait\">\r\n            {filtersLoading && encodedFilters ? (\r\n              <FilterListSkeleton />\r\n            ) : (\r\n              <m.div key=\"filter-list\" {...opacityAnimation}>\r\n                <FilterList filters={filters} />\r\n              </m.div>\r\n            )}\r\n          </AnimatePresence>\r\n        </div>\r\n      )}\r\n\r\n      <div\r\n        className={clsx(\r\n          'relative rounded-panel',\r\n          (!isMobile || !collapseTableOnMobile) && 'border',\r\n        )}\r\n      >\r\n        {query.isFetching && (\r\n          <ProgressBar\r\n            isIndeterminate\r\n            className=\"absolute left-0 top-0 z-10 w-full\"\r\n            aria-label={trans({message: 'Loading'})}\r\n            size=\"xs\"\r\n          />\r\n        )}\r\n\r\n        <div className=\"relative overflow-x-auto md:overflow-hidden\">\r\n          <Table\r\n            {...tableDomProps}\r\n            columns={columns}\r\n            data={pagination?.data || []}\r\n            sortDescriptor={params}\r\n            onSortChange={descriptor => {\r\n              setParams({...params, ...descriptor});\r\n            }}\r\n            selectedRows={selectedRows}\r\n            enableSelection={enableSelection}\r\n            selectionStyle={selectionStyle}\r\n            onSelectionChange={setSelectedRows}\r\n            onAction={onRowAction}\r\n            collapseOnMobile={collapseTableOnMobile}\r\n            cellHeight={cellHeight}\r\n          />\r\n        </div>\r\n\r\n        {(query.isFetched || query.isPlaceholderData) &&\r\n        !pagination?.data.length ? (\r\n          <div className=\"pt-50\">\r\n            {cloneElement(emptyStateMessage, {\r\n              isFiltering,\r\n            })}\r\n          </div>\r\n        ) : undefined}\r\n\r\n        <DataTablePaginationFooter\r\n          query={query}\r\n          onPageChange={page => setParams({...params, page})}\r\n          onPerPageChange={perPage => setParams({...params, perPage})}\r\n        />\r\n      </div>\r\n    </DataTableContext.Provider>\r\n  );\r\n}\r\n","import React, {ReactElement, ReactNode, useId} from 'react';\r\nimport {TableDataItem} from '../../ui/tables/types/table-data-item';\r\nimport {DataTable, DataTableProps} from '../data-table';\r\nimport {TableProps} from '../../ui/tables/table';\r\nimport {StaticPageTitle} from '../../seo/static-page-title';\r\nimport {MessageDescriptor} from '../../i18n/message-descriptor';\r\nimport clsx from 'clsx';\r\n\r\ninterface Props<T extends TableDataItem> extends DataTableProps<T> {\r\n  title?: ReactElement<MessageDescriptor>;\r\n  headerContent?: ReactNode;\r\n  headerItemsAlign?: string;\r\n  enableSelection?: boolean;\r\n  onRowAction?: TableProps<T>['onAction'];\r\n  padding?: string;\r\n  className?: string;\r\n}\r\nexport function DataTablePage<T extends TableDataItem>({\r\n  title,\r\n  headerContent,\r\n  headerItemsAlign = 'items-end',\r\n  className,\r\n  padding,\r\n  ...dataTableProps\r\n}: Props<T>) {\r\n  const titleId = useId();\r\n\r\n  return (\r\n    <div className={clsx(padding ?? 'p-12 md:p-24', className)}>\r\n      {title && (\r\n        <div\r\n          className={clsx(\r\n            'mb-16',\r\n            headerContent && `flex ${headerItemsAlign} gap-4`,\r\n          )}\r\n        >\r\n          <StaticPageTitle>{title}</StaticPageTitle>\r\n          <h1 className=\"text-3xl font-light first:capitalize\" id={titleId}>\r\n            {title}\r\n          </h1>\r\n          {headerContent}\r\n        </div>\r\n      )}\r\n\r\n      <DataTable\r\n        {...dataTableProps}\r\n        tableDomProps={{\r\n          'aria-labelledby': title ? titleId : undefined,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '../../http/query-client';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {toast} from '../../ui/toast/toast';\r\nimport {DatatableDataQueryKey} from './paginated-resources';\r\nimport {useDataTable} from '../page/data-table-context';\r\nimport {message} from '../../i18n/message';\r\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\r\nimport {Key} from 'react';\r\n\r\ninterface Response extends BackendResponse {\r\n  //\r\n}\r\n\r\nexport function useDeleteSelectedRows() {\r\n  const {endpoint, selectedRows, setSelectedRows} = useDataTable();\r\n  return useMutation({\r\n    mutationFn: () => deleteSelectedRows(endpoint, selectedRows),\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey(endpoint),\r\n      });\r\n      toast(\r\n        message('Deleted [one 1 record|other :count records]', {\r\n          values: {count: selectedRows.length},\r\n        }),\r\n      );\r\n      setSelectedRows([]);\r\n    },\r\n    onError: err =>\r\n      showHttpErrorToast(err, message('Could not delete records')),\r\n  });\r\n}\r\n\r\nfunction deleteSelectedRows(endpoint: string, ids: Key[]): Promise<Response> {\r\n  return apiClient.delete(`${endpoint}/${ids.join(',')}`).then(r => r.data);\r\n}\r\n","import {Button} from '../../ui/buttons/button';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {ConfirmationDialog} from '../../ui/overlays/dialog/confirmation-dialog';\r\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\r\nimport React from 'react';\r\nimport {useDeleteSelectedRows} from '../requests/delete-selected-rows';\r\nimport {useDataTable} from './data-table-context';\r\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\r\n\r\nexport function DeleteSelectedItemsAction() {\r\n  return (\r\n    <DialogTrigger type=\"modal\">\r\n      <Button variant=\"flat\" color=\"danger\" className=\"ml-auto\">\r\n        <Trans message=\"Delete\" />\r\n      </Button>\r\n      <DeleteItemsDialog />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\nfunction DeleteItemsDialog() {\r\n  const deleteSelectedRows = useDeleteSelectedRows();\r\n  const {selectedRows} = useDataTable();\r\n  const {close} = useDialogContext();\r\n  return (\r\n    <ConfirmationDialog\r\n      isLoading={deleteSelectedRows.isPending}\r\n      title={\r\n        <Trans\r\n          message=\"Delete [one 1 item|other :count items]?\"\r\n          values={{count: selectedRows.length}}\r\n        />\r\n      }\r\n      body={\r\n        <Trans message=\"This will permanently remove the items and cannot be undone.\" />\r\n      }\r\n      confirm={<Trans message=\"Delete\" />}\r\n      isDanger\r\n      onConfirm={() => {\r\n        deleteSelectedRows.mutate(undefined, {onSuccess: () => close()});\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, {ReactNode} from 'react';\r\nimport {IllustratedMessage} from '../../ui/images/illustrated-message';\r\nimport {SvgImage} from '../../ui/images/svg-image/svg-image';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {useIsMobileMediaQuery} from '../../utils/hooks/is-mobile-media-query';\r\n\r\nexport interface DataTableEmptyStateMessageProps {\r\n  isFiltering?: boolean;\r\n  title: ReactNode;\r\n  filteringTitle?: ReactNode;\r\n  image: string;\r\n  size?: 'sm' | 'md';\r\n  className?: string;\r\n}\r\nexport function DataTableEmptyStateMessage({\r\n  isFiltering,\r\n  title,\r\n  filteringTitle,\r\n  image,\r\n  size,\r\n  className,\r\n}: DataTableEmptyStateMessageProps) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n  if (!size) {\r\n    size = isMobile ? 'sm' : 'md';\r\n  }\r\n\r\n  // allow user to disable filtering message variation by not passing in \"filteringTitle\"\r\n  return (\r\n    <IllustratedMessage\r\n      className={className}\r\n      size={size}\r\n      image={<SvgImage src={image} />}\r\n      title={isFiltering && filteringTitle ? filteringTitle : title}\r\n      description={\r\n        isFiltering && filteringTitle ? (\r\n          <Trans message=\"Try another search query or different filters\" />\r\n        ) : undefined\r\n      }\r\n    />\r\n  );\r\n}\r\n","export default \"__VITE_ASSET__d109d853__\"","import {AddIcon} from '../icons/material/Add';\r\nimport {Button} from '../ui/buttons/button';\r\nimport React, {ReactElement, ReactNode} from 'react';\r\nimport {useIsMobileMediaQuery} from '../utils/hooks/is-mobile-media-query';\r\nimport {IconButton} from '../ui/buttons/icon-button';\r\nimport {To} from 'react-router-dom';\r\nimport {ButtonBaseProps} from '../ui/buttons/button-base';\r\n\r\nexport interface DataTableAddItemButtonProps {\r\n  children: ReactNode;\r\n  to?: To;\r\n  href?: string;\r\n  download?: boolean | string;\r\n  elementType?: ButtonBaseProps['elementType'];\r\n  onClick?: ButtonBaseProps['onClick'];\r\n  icon?: ReactElement;\r\n  disabled?: boolean;\r\n}\r\nexport const DataTableAddItemButton = React.forwardRef<\r\n  HTMLButtonElement,\r\n  DataTableAddItemButtonProps\r\n>(\r\n  (\r\n    {children, to, elementType, onClick, href, download, icon, disabled},\r\n    ref,\r\n  ) => {\r\n    const isMobile = useIsMobileMediaQuery();\r\n\r\n    if (isMobile) {\r\n      return (\r\n        <IconButton\r\n          ref={ref}\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          className=\"flex-shrink-0\"\r\n          size=\"sm\"\r\n          to={to}\r\n          href={href}\r\n          download={download}\r\n          elementType={elementType}\r\n          onClick={onClick}\r\n          disabled={disabled}\r\n        >\r\n          {icon || <AddIcon />}\r\n        </IconButton>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Button\r\n        ref={ref}\r\n        startIcon={icon || <AddIcon />}\r\n        variant=\"flat\"\r\n        color=\"primary\"\r\n        size=\"sm\"\r\n        to={to}\r\n        href={href}\r\n        download={download}\r\n        elementType={elementType}\r\n        onClick={onClick}\r\n        disabled={disabled}\r\n      >\r\n        {children}\r\n      </Button>\r\n    );\r\n  },\r\n);\r\n","import {apiClient} from '../../http/query-client';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {useMutation} from '@tanstack/react-query';\r\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {\r\n  downloadPath?: string;\r\n  result?: 'jobQueued';\r\n}\r\n\r\nexport type ExportCsvPayload = Record<string, string | number | undefined>;\r\n\r\nexport function useExportCsv(endpoint: string) {\r\n  return useMutation({\r\n    mutationFn: (payload?: ExportCsvPayload) => exportCsv(endpoint, payload),\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction exportCsv(\r\n  endpoint: string,\r\n  payload: ExportCsvPayload | undefined,\r\n): Promise<Response> {\r\n  return apiClient.post(endpoint, payload).then(r => r.data);\r\n}\r\n","import {DialogBody} from '../../ui/overlays/dialog/dialog-body';\r\nimport {DialogFooter} from '../../ui/overlays/dialog/dialog-footer';\r\nimport {DialogHeader} from '../../ui/overlays/dialog/dialog-header';\r\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\r\nimport {Dialog} from '../../ui/overlays/dialog/dialog';\r\nimport {Button} from '../../ui/buttons/button';\r\nimport {Trans} from '../../i18n/trans';\r\n\r\nexport function CsvExportInfoDialog() {\r\n  const {close} = useDialogContext();\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Csv export\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Trans\r\n          message=\"Your request is being processed. We'll email you when the report is ready to download. In\r\n            certain cases, it might take a little longer, depending on the number of items beings\r\n            exported and the volume of activity.\"\r\n        />\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button variant=\"flat\" color=\"primary\" onClick={close}>\r\n          <Trans message=\"Got it\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {IconButton} from '../../ui/buttons/icon-button';\r\nimport {FileDownloadIcon} from '../../icons/material/FileDownload';\r\nimport React, {Fragment, useState} from 'react';\r\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\r\nimport {ExportCsvPayload, useExportCsv} from '../requests/use-export-csv';\r\nimport {downloadFileFromUrl} from '../../uploads/utils/download-file-from-url';\r\nimport {CsvExportInfoDialog} from './csv-export-info-dialog';\r\n\r\ninterface DataTableExportCsvButtonProps {\r\n  endpoint: string;\r\n  payload?: ExportCsvPayload;\r\n}\r\nexport function DataTableExportCsvButton({\r\n  endpoint,\r\n  payload,\r\n}: DataTableExportCsvButtonProps) {\r\n  const [dialogIsOpen, setDialogIsOpen] = useState(false);\r\n  const exportCsv = useExportCsv(endpoint);\r\n\r\n  return (\r\n    <Fragment>\r\n      <IconButton\r\n        variant=\"outline\"\r\n        color=\"primary\"\r\n        size=\"sm\"\r\n        className=\"flex-shrink-0\"\r\n        disabled={exportCsv.isPending}\r\n        onClick={() => {\r\n          exportCsv.mutate(payload, {\r\n            onSuccess: response => {\r\n              if (response.downloadPath) {\r\n                downloadFileFromUrl(response.downloadPath);\r\n              } else {\r\n                setDialogIsOpen(true);\r\n              }\r\n            },\r\n          });\r\n        }}\r\n      >\r\n        <FileDownloadIcon />\r\n      </IconButton>\r\n      <DialogTrigger\r\n        type=\"modal\"\r\n        isOpen={dialogIsOpen}\r\n        onOpenChange={setDialogIsOpen}\r\n      >\r\n        <CsvExportInfoDialog />\r\n      </DialogTrigger>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, {ReactNode} from 'react';\r\nimport {Avatar, AvatarProps} from '../../ui/images/avatar';\r\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\r\nimport clsx from 'clsx';\r\n\r\ninterface Props {\r\n  image?: string;\r\n  label: ReactNode;\r\n  description?: ReactNode;\r\n  labelClassName?: string;\r\n  avatarSize?: AvatarProps['size'];\r\n}\r\nexport function NameWithAvatar({\r\n  image,\r\n  label,\r\n  description,\r\n  labelClassName,\r\n  avatarSize = 'md',\r\n}: Props) {\r\n  return (\r\n    <div className=\"flex items-center gap-12\">\r\n      {image && (\r\n        <Avatar size={avatarSize} className=\"flex-shrink-0\" src={image} />\r\n      )}\r\n      <div className=\"min-w-0 overflow-hidden\">\r\n        <div\r\n          className={clsx(labelClassName, 'overflow-hidden overflow-ellipsis')}\r\n        >\r\n          {label}\r\n        </div>\r\n        {description && (\r\n          <div className=\"overflow-hidden overflow-ellipsis text-xs text-muted\">\r\n            {description}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function NameWithAvatarPlaceholder({\r\n  labelClassName,\r\n  showDescription,\r\n}: Partial<Props> & {\r\n  showDescription?: boolean;\r\n}) {\r\n  return (\r\n    <div className=\"flex w-full max-w-4/5 items-center gap-12\">\r\n      <Skeleton size=\"w-40 h-40 md:w-32 md:h-32\" variant=\"rect\" />\r\n      <div className=\"flex-auto\">\r\n        <div className={clsx(labelClassName, 'leading-3')}>\r\n          <Skeleton />\r\n        </div>\r\n        {showDescription && (\r\n          <div className=\"mt-4 leading-3 text-muted\">{<Skeleton />}</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const PersonOffIcon = createSvgIcon(\r\n  <path d=\"m20 17.17-3.37-3.38c.64.22 1.23.48 1.77.76.97.51 1.58 1.52 1.6 2.62zm1.19 4.02-1.41 1.41-2.61-2.6H4v-2.78c0-1.12.61-2.15 1.61-2.66 1.29-.66 2.87-1.22 4.67-1.45L1.39 4.22 2.8 2.81l18.39 18.38zM15.17 18l-3-3H12c-2.37 0-4.29.73-5.48 1.34-.32.16-.52.5-.52.88V18h9.17zM12 6c1.1 0 2 .9 2 2 0 .86-.54 1.59-1.3 1.87l1.48 1.48C15.28 10.64 16 9.4 16 8c0-2.21-1.79-4-4-4-1.4 0-2.64.72-3.35 1.82l1.48 1.48C10.41 6.54 11.14 6 12 6z\" />\r\n, 'PersonOffOutlined');\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {User} from '@common/auth/user';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\nimport {message} from '@common/i18n/message';\r\n\r\ninterface Response extends BackendResponse {\r\n  user: User;\r\n}\r\n\r\nexport interface BanUserPayload {\r\n  ban_until?: string;\r\n  permanent?: boolean;\r\n  comment?: string;\r\n}\r\n\r\nexport function useBanUser(\r\n  form: UseFormReturn<BanUserPayload>,\r\n  userId: number,\r\n) {\r\n  return useMutation({\r\n    mutationFn: (payload: BanUserPayload) => banUser(userId, payload),\r\n    onSuccess: async () => {\r\n      toast(message('User suspended'));\r\n      await queryClient.invalidateQueries({queryKey: ['users']});\r\n    },\r\n    onError: r => onFormQueryError(r, form),\r\n  });\r\n}\r\n\r\nfunction banUser(userId: number, payload: BanUserPayload): Promise<Response> {\r\n  return apiClient.post(`users/${userId}/ban`, payload).then(r => r.data);\r\n}\r\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\r\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\r\nimport {Form} from '@common/ui/forms/form';\r\nimport {useForm} from 'react-hook-form';\r\nimport {\r\n  BanUserPayload,\r\n  useBanUser,\r\n} from '@common/admin/users/requests/use-ban-user';\r\nimport {FormDatePicker} from '@common/ui/forms/input-field/date/date-picker/date-picker';\r\nimport {User} from '@common/auth/user';\r\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {message} from '@common/i18n/message';\r\nimport {FormSwitch} from '@common/ui/forms/toggle/switch';\r\n\r\ninterface Props {\r\n  user: User;\r\n}\r\nexport function BanUserDialog({user}: Props) {\r\n  const {trans} = useTrans();\r\n  const {close, formId} = useDialogContext();\r\n  const form = useForm<BanUserPayload>({\r\n    defaultValues: {\r\n      permanent: true,\r\n    },\r\n  });\r\n  const isPermanent = form.watch('permanent');\r\n  const banUser = useBanUser(form, user.id);\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Suspend “:name“\" values={{name: user.display_name}} />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Form\r\n          id={formId}\r\n          form={form}\r\n          onSubmit={values =>\r\n            banUser.mutate(values, {onSuccess: () => close()})\r\n          }\r\n        >\r\n          <FormDatePicker\r\n            name=\"ban_until\"\r\n            label={<Trans message=\"Suspend until\" />}\r\n            disabled={isPermanent}\r\n          />\r\n          <FormSwitch name=\"permanent\" className=\"mt-12\">\r\n            <Trans message=\"Permanent\" />\r\n          </FormSwitch>\r\n          <FormTextField\r\n            className=\"mt-24\"\r\n            name=\"comment\"\r\n            inputElementType=\"textarea\"\r\n            maxLength={250}\r\n            label={<Trans message=\"Reason\" />}\r\n            placeholder={trans(message('Optional'))}\r\n          />\r\n        </Form>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button onClick={() => close()}>\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          form={formId}\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          disabled={banUser.isPending}\r\n        >\r\n          <Trans message=\"Suspend\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {message} from '@common/i18n/message';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\nexport function useUnbanUser(userId: number) {\r\n  return useMutation({\r\n    mutationFn: () => unbanUser(userId),\r\n    onSuccess: () => {\r\n      toast(message('User unsuspended'));\r\n      queryClient.invalidateQueries({queryKey: ['users']});\r\n    },\r\n    onError: r => showHttpErrorToast(r),\r\n  });\r\n}\r\n\r\nfunction unbanUser(userId: number): Promise<Response> {\r\n  return apiClient.delete(`users/${userId}/unban`).then(r => r.data);\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {message} from '@common/i18n/message';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {User} from '@common/auth/user';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {\r\n  user: User;\r\n}\r\n\r\ninterface Payload {\r\n  userId: string | number;\r\n}\r\n\r\nexport function useImpersonateUser() {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => impersonateUser(payload),\r\n    onSuccess: async response => {\r\n      toast(message(`Impersonating User \"${response.user.display_name}\"`));\r\n      window.location.href = '/';\r\n    },\r\n    onError: r => showHttpErrorToast(r),\r\n  });\r\n}\r\n\r\nfunction impersonateUser(payload: Payload) {\r\n  return apiClient\r\n    .post<Response>(`admin/users/impersonate/${payload.userId}`, payload)\r\n    .then(r => r.data);\r\n}\r\n","import {ColumnConfig} from '@common/datatable/column-config';\r\nimport {User} from '@common/auth/user';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\r\nimport {CheckIcon} from '@common/icons/material/Check';\r\nimport {CloseIcon} from '@common/icons/material/Close';\r\nimport {ChipList} from '@common/ui/forms/input-field/chip-field/chip-list';\r\nimport {Chip} from '@common/ui/forms/input-field/chip-field/chip';\r\nimport {Link} from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport {FormattedDate} from '@common/i18n/formatted-date';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {EditIcon} from '@common/icons/material/Edit';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {PersonOffIcon} from '@common/icons/material/PersonOff';\r\nimport {BanUserDialog} from '@common/admin/users/ban-user-dialog';\r\nimport React from 'react';\r\nimport {useUnbanUser} from '@common/admin/users/requests/use-unban-user';\r\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\r\nimport {useImpersonateUser} from '@common/admin/users/requests/use-impersonate-user';\r\nimport {LoginIcon} from '@common/icons/material/Login';\r\n\r\nexport const userDatatableColumns: ColumnConfig<User>[] = [\r\n  {\r\n    key: 'name',\r\n    allowsSorting: true,\r\n    sortingKey: 'email',\r\n    width: 'flex-3 min-w-200',\r\n    visibleInMode: 'all',\r\n    header: () => <Trans message=\"User\" />,\r\n    body: user => (\r\n      <NameWithAvatar\r\n        image={user.avatar}\r\n        label={user.display_name}\r\n        description={user.email}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    key: 'subscribed',\r\n    header: () => <Trans message=\"Subscribed\" />,\r\n    width: 'w-96',\r\n    body: user =>\r\n      user.subscriptions?.length ? (\r\n        <CheckIcon className=\"text-positive icon-md\" />\r\n      ) : (\r\n        <CloseIcon className=\"text-danger icon-md\" />\r\n      ),\r\n  },\r\n  {\r\n    key: 'roles',\r\n    header: () => <Trans message=\"Roles\" />,\r\n    body: user => (\r\n      <ChipList radius=\"rounded\" size=\"xs\">\r\n        {user?.roles?.map(role => (\r\n          <Chip key={role.id} selectable>\r\n            <Link\r\n              className={clsx('capitalize')}\r\n              target=\"_blank\"\r\n              to={`/admin/roles/${role.id}/edit`}\r\n            >\r\n              <Trans message={role.name} />\r\n            </Link>\r\n          </Chip>\r\n        ))}\r\n      </ChipList>\r\n    ),\r\n  },\r\n  {\r\n    key: 'firstName',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"First name\" />,\r\n    body: user => user.first_name,\r\n  },\r\n  {\r\n    key: 'lastName',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Last name\" />,\r\n    body: user => user.last_name,\r\n  },\r\n  {\r\n    key: 'createdAt',\r\n    allowsSorting: true,\r\n    width: 'w-96',\r\n    header: () => <Trans message=\"Created at\" />,\r\n    body: user => (\r\n      <time>\r\n        <FormattedDate date={user.created_at} />\r\n      </time>\r\n    ),\r\n  },\r\n  {\r\n    key: 'actions',\r\n    header: () => <Trans message=\"Actions\" />,\r\n    width: 'w-128 flex-shrink-0',\r\n    hideHeader: true,\r\n    align: 'end',\r\n    visibleInMode: 'all',\r\n    body: user => (\r\n      <div className=\"text-muted\">\r\n        <Link to={`${user.id}/edit`}>\r\n          <Tooltip label={<Trans message=\"Edit user\" />}>\r\n            <IconButton size=\"md\">\r\n              <EditIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Link>\r\n        {user.banned_at ? (\r\n          <UnbanButton user={user} />\r\n        ) : (\r\n          <DialogTrigger type=\"modal\">\r\n            <Tooltip label={<Trans message=\"Suspend user\" />}>\r\n              <IconButton size=\"md\">\r\n                <PersonOffIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <BanUserDialog user={user} />\r\n          </DialogTrigger>\r\n        )}\r\n        <ImpersonateButton user={user} />\r\n      </div>\r\n    ),\r\n  },\r\n];\r\n\r\ninterface UnbanButtonProps {\r\n  user: User;\r\n}\r\nfunction UnbanButton({user}: UnbanButtonProps) {\r\n  const unban = useUnbanUser(user.id);\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={confirmed => {\r\n        if (confirmed) {\r\n          unban.mutate();\r\n        }\r\n      }}\r\n    >\r\n      <Tooltip label={<Trans message=\"Remove suspension\" />}>\r\n        <IconButton size=\"md\" color=\"danger\">\r\n          <PersonOffIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <ConfirmationDialog\r\n        isDanger\r\n        title={\r\n          <Trans message=\"Suspend “:name“\" values={{name: user.display_name}} />\r\n        }\r\n        body={\r\n          <Trans message=\"Are you sure you want to remove suspension from this user?\" />\r\n        }\r\n        confirm={<Trans message=\"Unsuspend\" />}\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\ninterface ImpersonateButtonProps {\r\n  user: User;\r\n}\r\nfunction ImpersonateButton({user}: ImpersonateButtonProps) {\r\n  const impersonate = useImpersonateUser();\r\n  return (\r\n    <DialogTrigger type=\"modal\">\r\n      <Tooltip label={<Trans message=\"Login as user\" />}>\r\n        <IconButton size=\"md\">\r\n          <LoginIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <ConfirmationDialog\r\n        title={\r\n          <Trans\r\n            message=\"Login as “:name“\"\r\n            values={{name: user.display_name}}\r\n          />\r\n        }\r\n        isLoading={impersonate.isPending}\r\n        body={<Trans message=\"Are you sure you want to login as this user?\" />}\r\n        confirm={<Trans message=\"Login\" />}\r\n        onConfirm={() => {\r\n          impersonate.mutate({userId: user.id});\r\n        }}\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n","import React, {Fragment} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {UserDatatableFilters} from './user-datatable-filters';\r\nimport {DataTablePage} from '../../datatable/page/data-table-page';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\r\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\r\nimport teamSvg from '../roles/team.svg';\r\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\r\nimport {DataTableExportCsvButton} from '../../datatable/csv-export/data-table-export-csv-button';\r\nimport {useSettings} from '../../core/settings/use-settings';\r\nimport {userDatatableColumns} from '@common/admin/users/user-datatable-columns';\r\n\r\nexport function UserDatatable() {\r\n  const {billing} = useSettings();\r\n\r\n  const filteredColumns = !billing.enable\r\n    ? userDatatableColumns.filter(c => c.key !== 'subscribed')\r\n    : userDatatableColumns;\r\n\r\n  return (\r\n    <Fragment>\r\n      <DataTablePage\r\n        endpoint=\"users\"\r\n        title={<Trans message=\"Users\" />}\r\n        filters={UserDatatableFilters}\r\n        columns={filteredColumns}\r\n        actions={<Actions />}\r\n        queryParams={{with: 'subscriptions,bans'}}\r\n        selectedActions={<DeleteSelectedItemsAction />}\r\n        emptyStateMessage={\r\n          <DataTableEmptyStateMessage\r\n            image={teamSvg}\r\n            title={<Trans message=\"No users have been created yet\" />}\r\n            filteringTitle={<Trans message=\"No matching users\" />}\r\n          />\r\n        }\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction Actions() {\r\n  return (\r\n    <Fragment>\r\n      <DataTableExportCsvButton endpoint=\"users/csv/export\" />\r\n      <DataTableAddItemButton elementType={Link} to=\"new\">\r\n        <Trans message=\"Add new user\" />\r\n      </DataTableAddItemButton>\r\n    </Fragment>\r\n  );\r\n}\r\n","export function chunkArray<T>(array: T[], chunkSize: number): T[][] {\r\n  return array.reduce<any>((resultArray, item, index) => {\r\n    const chunkIndex = Math.floor(index / chunkSize);\r\n\r\n    if (!resultArray[chunkIndex]) {\r\n      resultArray[chunkIndex] = [];\r\n    }\r\n\r\n    resultArray[chunkIndex].push(item);\r\n\r\n    return resultArray;\r\n  }, []);\r\n}\r\n","import {\r\n  IAppearanceConfig,\r\n  MenuSectionConfig,\r\n} from '@common/admin/appearance/types/appearance-editor-config';\r\nimport {message} from '@common/i18n/message';\r\nimport {chunkArray} from '@common/utils/array/chunk-array';\r\nimport {AppearanceEditorBreadcrumbItem} from '@common/admin/appearance/types/appearance-editor-section';\r\n\r\nexport const DefaultAppearanceConfig: IAppearanceConfig = {\r\n  preview: {\r\n    defaultRoute: '/',\r\n    navigationRoutes: [],\r\n  },\r\n  sections: {\r\n    general: {\r\n      label: message('General'),\r\n      position: 1,\r\n      buildBreadcrumb: () => [\r\n        {\r\n          label: message('General'),\r\n          location: `general`,\r\n        },\r\n      ],\r\n    },\r\n    themes: {\r\n      label: message('Themes'),\r\n      position: 2,\r\n      buildBreadcrumb: (pathname, formValue) => {\r\n        const parts = pathname.split('/').filter(p => !!p);\r\n        const [, , , themeIndex] = parts;\r\n        const breadcrumb: AppearanceEditorBreadcrumbItem[] = [\r\n          {\r\n            label: message('Themes'),\r\n            location: `themes`,\r\n          },\r\n        ];\r\n        if (themeIndex != null) {\r\n          breadcrumb.push({\r\n            label: formValue.appearance.themes.all[+themeIndex]?.name,\r\n            location: `themes/${themeIndex}`,\r\n          });\r\n        }\r\n        if (parts.at(-1) === 'font') {\r\n          breadcrumb.push({\r\n            label: message('Font'),\r\n            location: `themes/${themeIndex}/font`,\r\n          });\r\n        }\r\n        if (parts.at(-1) === 'radius') {\r\n          breadcrumb.push({\r\n            label: message('Rounding'),\r\n            location: `themes/${themeIndex}/radius`,\r\n          });\r\n        }\r\n        return breadcrumb;\r\n      },\r\n    },\r\n    menus: {\r\n      label: message('Menus'),\r\n      position: 3,\r\n      buildBreadcrumb: (pathname, formValue) => {\r\n        // /admin/appearance/menus/0/items/1\r\n        const parts = pathname.split('/').filter(p => !!p);\r\n        const [, , ...rest] = parts;\r\n        // admin/appearance\r\n        const breadcrumb: AppearanceEditorBreadcrumbItem[] = [\r\n          {\r\n            label: message('Menus'),\r\n            location: 'menus',\r\n          },\r\n        ];\r\n        // chunk every two items: [form group, item index]\r\n        const chunked = chunkArray(rest, 2);\r\n        chunked.forEach(([sectionName, sectionIndex], chunkIndex) => {\r\n          // menu\r\n          if (sectionName === 'menus' && sectionIndex != null) {\r\n            breadcrumb.push({\r\n              label: formValue.settings.menus[+sectionIndex]?.name,\r\n              location: `menus/${sectionIndex}`,\r\n            });\r\n            // menu item\r\n          } else if (sectionName === 'items' && sectionIndex != null) {\r\n            const [, menuIndex] = chunked[chunkIndex - 1];\r\n            breadcrumb.push({\r\n              label:\r\n                formValue.settings.menus[+menuIndex].items[+sectionIndex]\r\n                  ?.label,\r\n              location: `menus/${menuIndex}/${sectionIndex}`,\r\n            });\r\n          }\r\n        });\r\n        return breadcrumb;\r\n      },\r\n      config: {\r\n        availableRoutes: [\r\n          '/',\r\n          '/login',\r\n          '/register',\r\n          '/contact',\r\n          '/pricing',\r\n          '/account-settings',\r\n          '/admin',\r\n          '/admin/appearance',\r\n          '/admin/settings',\r\n          '/admin/plans',\r\n          '/admin/subscriptions',\r\n          '/admin/users',\r\n          '/admin/roles',\r\n          '/admin/pages',\r\n          '/admin/tags',\r\n          '/admin/files',\r\n          '/admin/localizations',\r\n          '/admin/ads',\r\n          '/admin/settings/authentication',\r\n          '/admin/settings/branding',\r\n          '/admin/settings/cache',\r\n          '/admin/settings/providers',\r\n          '/api-docs',\r\n        ],\r\n        positions: [\r\n          'admin-navbar',\r\n          'admin-sidebar',\r\n          'custom-page-navbar',\r\n          'auth-page-footer',\r\n          'auth-dropdown',\r\n          'account-settings-page',\r\n          'billing-page',\r\n          'checkout-page-navbar',\r\n          'checkout-page-footer',\r\n          'pricing-table-page',\r\n          'contact-us-page',\r\n          'notifications-page',\r\n          'footer',\r\n          'footer-secondary',\r\n        ],\r\n      } as MenuSectionConfig,\r\n    },\r\n    'custom-code': {\r\n      label: message('Custom Code'),\r\n      position: 4,\r\n      buildBreadcrumb: () => [\r\n        {\r\n          label: message('Custom code'),\r\n          location: `custom-code`,\r\n        },\r\n      ],\r\n    },\r\n    'seo-settings': {\r\n      label: message('SEO Settings'),\r\n      position: 5,\r\n      buildBreadcrumb: () => [\r\n        {\r\n          label: message('SEO'),\r\n          location: `seo`,\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\n","import React, {ReactNode} from 'react';\r\nimport clsx from 'clsx';\r\nimport {getInputFieldClassNames} from '../input-field/get-input-field-class-names';\r\nimport {UseSliderProps, UseSliderReturn} from './use-slider';\r\n\r\nexport interface BaseSliderProps extends UseSliderProps {\r\n  slider: UseSliderReturn;\r\n  children: ReactNode;\r\n}\r\n\r\nexport function BaseSlider(props: BaseSliderProps) {\r\n  const {\r\n    size = 'md',\r\n    inline,\r\n    label,\r\n    showValueLabel = !!label,\r\n    className,\r\n    width = 'w-full',\r\n    slider,\r\n    children,\r\n    trackColor = 'primary',\r\n    fillColor = 'primary',\r\n  } = props;\r\n\r\n  const {\r\n    domProps,\r\n    trackRef,\r\n    getThumbPercent,\r\n    getThumbValueLabel,\r\n    labelId,\r\n    groupId,\r\n    thumbIds,\r\n    isDisabled,\r\n    numberFormatter,\r\n    minValue,\r\n    maxValue,\r\n    step,\r\n    values,\r\n    getValueLabel,\r\n  } = slider;\r\n\r\n  let outputValue = '';\r\n  let maxLabelLength = Math.max(\r\n    [...numberFormatter.format(minValue)].length,\r\n    [...numberFormatter.format(maxValue)].length,\r\n    [...numberFormatter.format(step)].length,\r\n  );\r\n\r\n  if (getValueLabel) {\r\n    outputValue = getValueLabel(values[0]);\r\n  } else if (values.length === 1) {\r\n    outputValue = getThumbValueLabel(0);\r\n  } else if (values.length === 2) {\r\n    // This should really use the NumberFormat#formatRange proposal...\r\n    // https://github.com/tc39/ecma402/issues/393\r\n    // https://github.com/tc39/proposal-intl-numberformat-v3#formatrange-ecma-402-393\r\n    outputValue = `${getThumbValueLabel(0)} – ${getThumbValueLabel(1)}`;\r\n    maxLabelLength =\r\n      3 +\r\n      2 *\r\n        Math.max(\r\n          maxLabelLength,\r\n          [...numberFormatter.format(minValue)].length,\r\n          [...numberFormatter.format(maxValue)].length,\r\n        );\r\n  }\r\n  const style = getInputFieldClassNames({\r\n    size,\r\n    disabled: isDisabled,\r\n    labelDisplay: 'flex',\r\n  });\r\n\r\n  const wrapperClassname = clsx('touch-none', className, width, {\r\n    'flex items-center': inline,\r\n  });\r\n\r\n  return (\r\n    <div className={wrapperClassname} role=\"group\" id={groupId}>\r\n      {(label || showValueLabel) && (\r\n        <div className={clsx(style.label, 'select-none')}>\r\n          {label && (\r\n            <label\r\n              onClick={() => {\r\n                // Safari does not focus <input type=\"range\"> elements when clicking on an associated <label>,\r\n                // so do it manually. In addition, make sure we show the focus ring.\r\n                document.getElementById(thumbIds[0])?.focus();\r\n              }}\r\n              id={labelId}\r\n              htmlFor={groupId}\r\n            >\r\n              {label}\r\n            </label>\r\n          )}\r\n          {showValueLabel && (\r\n            <output\r\n              htmlFor={thumbIds[0]}\r\n              className=\"ml-auto text-right\"\r\n              aria-live=\"off\"\r\n              style={\r\n                !maxLabelLength\r\n                  ? undefined\r\n                  : {\r\n                      width: `${maxLabelLength}ch`,\r\n                      minWidth: `${maxLabelLength}ch`,\r\n                    }\r\n              }\r\n            >\r\n              {outputValue}\r\n            </output>\r\n          )}\r\n        </div>\r\n      )}\r\n      <div\r\n        ref={trackRef}\r\n        className={clsx('relative', getWrapperHeight(props))}\r\n        {...domProps}\r\n        role=\"presentation\"\r\n      >\r\n        <div\r\n          className={clsx(\r\n            'absolute inset-0 m-auto rounded',\r\n            getTrackColor(trackColor, isDisabled),\r\n            getTrackHeight(size),\r\n          )}\r\n        />\r\n        <div\r\n          className={clsx(\r\n            'absolute inset-0 my-auto rounded',\r\n            getFillColor(fillColor, isDisabled),\r\n            getTrackHeight(size),\r\n          )}\r\n          style={{width: `${Math.max(getThumbPercent(0) * 100, 0)}%`}}\r\n        />\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getWrapperHeight({size, wrapperHeight}: UseSliderProps): string {\r\n  if (wrapperHeight) return wrapperHeight;\r\n  switch (size) {\r\n    case 'xs':\r\n      return 'h-14';\r\n    case 'sm':\r\n      return 'h-20';\r\n    default:\r\n      return 'h-30';\r\n  }\r\n}\r\n\r\nfunction getTrackHeight(size: UseSliderProps['size']): string {\r\n  switch (size) {\r\n    case 'xs':\r\n      return 'h-2';\r\n    case 'sm':\r\n      return 'h-3';\r\n    default:\r\n      return 'h-4';\r\n  }\r\n}\r\n\r\nfunction getTrackColor(color: string, isDisabled: boolean): string {\r\n  if (isDisabled) {\r\n    color = 'disabled';\r\n  }\r\n  switch (color) {\r\n    case 'disabled':\r\n      return 'bg-slider-disabled/60';\r\n    case 'primary':\r\n      return 'bg-primary-light';\r\n    case 'neutral':\r\n      return 'bg-divider';\r\n    default:\r\n      return color;\r\n  }\r\n}\r\n\r\nfunction getFillColor(color: string, isDisabled: boolean): string {\r\n  if (isDisabled) {\r\n    color = 'disabled';\r\n  }\r\n  switch (color) {\r\n    case 'disabled':\r\n      return 'bg-slider-disabled';\r\n    case 'primary':\r\n      return 'bg-primary';\r\n    default:\r\n      return color;\r\n  }\r\n}\r\n","import {\r\n  mergeProps,\r\n  snapValueToStep,\r\n  useGlobalListeners,\r\n} from '@react-aria/utils';\r\nimport {useControlledState} from '@react-stately/utils';\r\nimport React, {\r\n  HTMLAttributes,\r\n  ReactNode,\r\n  RefObject,\r\n  useId,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport {clamp} from '@common/utils/number/clamp';\r\nimport {usePointerEvents} from '../../interactions/use-pointer-events';\r\nimport {useNumberFormatter} from '@common/i18n/use-number-formatter';\r\nimport type {NumberFormatOptions} from '@internationalized/number';\r\n\r\nexport interface UseSliderProps<T = number[]> {\r\n  formatOptions?: NumberFormatOptions;\r\n  onPointerDown?: () => void;\r\n  onPointerMove?: (e: React.PointerEvent) => void;\r\n  onChange?: (value: T) => void;\r\n  onChangeEnd?: (value: T) => void;\r\n  value?: T;\r\n  defaultValue?: T;\r\n  getValueLabel?: (value: number) => string;\r\n  minValue?: number;\r\n  maxValue?: number;\r\n  step?: number;\r\n  isDisabled?: boolean;\r\n  size?: 'xs' | 'sm' | 'md';\r\n  label?: ReactNode;\r\n  inline?: boolean;\r\n  className?: string;\r\n  width?: string;\r\n  showValueLabel?: boolean;\r\n  fillColor?: 'primary' | string;\r\n  trackColor?: 'primary' | 'neutral' | string;\r\n  showThumbOnHoverOnly?: boolean;\r\n  thumbSize?: string;\r\n  wrapperHeight?: string;\r\n}\r\n\r\nexport interface UseSliderReturn {\r\n  domProps: HTMLAttributes<HTMLElement>;\r\n  trackRef: RefObject<HTMLDivElement>;\r\n  isPointerOver: boolean;\r\n  showThumbOnHoverOnly?: boolean;\r\n  thumbSize?: string;\r\n  step: number;\r\n  isDisabled: boolean;\r\n  values: number[];\r\n  minValue: number;\r\n  maxValue: number;\r\n  focusedThumb: number | undefined;\r\n  labelId: string | undefined;\r\n  groupId: string;\r\n  thumbIds: string[];\r\n  numberFormatter: Intl.NumberFormat;\r\n  getThumbPercent: (index: number) => number;\r\n  getThumbMinValue: (index: number) => number;\r\n  getThumbMaxValue: (index: number) => number;\r\n  getThumbValueLabel: (index: number) => string;\r\n  setThumbValue: (index: number, value: number) => void;\r\n  updateDraggedThumbs: (index: number, dragging: boolean) => void;\r\n  isThumbDragging: (index: number) => boolean;\r\n  setThumbEditable: (index: number, editable: boolean) => void;\r\n  setFocusedThumb: (index: number | undefined) => void;\r\n  getValueLabel?: (value: number) => string;\r\n}\r\n\r\nexport function useSlider({\r\n  minValue = 0,\r\n  maxValue = 100,\r\n  isDisabled = false,\r\n  step = 1,\r\n  formatOptions,\r\n  onChangeEnd,\r\n  onPointerDown,\r\n  label,\r\n  getValueLabel,\r\n  showThumbOnHoverOnly,\r\n  thumbSize,\r\n  onPointerMove,\r\n  ...props\r\n}: UseSliderProps): UseSliderReturn {\r\n  const [isPointerOver, setIsPointerOver] = useState(false);\r\n  const numberFormatter = useNumberFormatter(formatOptions);\r\n  const {addGlobalListener, removeGlobalListener} = useGlobalListeners();\r\n  const trackRef = useRef<HTMLDivElement>(null);\r\n\r\n  // values will be stored in internal state as an array for both slider and range slider\r\n  const [values, setValues] = useControlledState<number[]>(\r\n    props.value ? props.value : undefined,\r\n    props.defaultValue ?? ([minValue] as any),\r\n    props.onChange as any,\r\n  );\r\n  // need to also store values in ref, because state value would\r\n  // lag behind by one between pointer down and move callbacks\r\n  const valuesRef = useRef<number[] | null>(null);\r\n  valuesRef.current = values;\r\n\r\n  // indices of thumbs that are being dragged currently (state and ref for same reasons as above)\r\n  const [draggedThumbs, setDraggedThumbs] = useState<boolean[]>(\r\n    new Array(values.length).fill(false),\r\n  );\r\n  const draggedThumbsRef = useRef<boolean[] | null>(null);\r\n  draggedThumbsRef.current = draggedThumbs;\r\n\r\n  // formatted value for <output> and thumb aria labels\r\n  function getFormattedValue(value: number) {\r\n    return numberFormatter.format(value);\r\n  }\r\n\r\n  const isThumbDragging = (index: number) => {\r\n    return draggedThumbsRef.current?.[index] || false;\r\n  };\r\n\r\n  const getThumbValueLabel = (index: number) =>\r\n    getFormattedValue(values[index]);\r\n\r\n  const getThumbMinValue = (index: number) =>\r\n    index === 0 ? minValue : values[index - 1];\r\n  const getThumbMaxValue = (index: number) =>\r\n    index === values.length - 1 ? maxValue : values[index + 1];\r\n\r\n  const setThumbValue = (index: number, value: number) => {\r\n    if (isDisabled || !isThumbEditable(index) || !valuesRef.current) {\r\n      return;\r\n    }\r\n    const thisMin = getThumbMinValue(index);\r\n    const thisMax = getThumbMaxValue(index);\r\n\r\n    // Round value to multiple of step, clamp value between min and max\r\n    value = snapValueToStep(value, thisMin, thisMax, step);\r\n    valuesRef.current = replaceIndex(valuesRef.current, index, value);\r\n    setValues(valuesRef.current);\r\n  };\r\n\r\n  // update \"dragging\" status of specified thumb\r\n  const updateDraggedThumbs = (index: number, dragging: boolean) => {\r\n    if (isDisabled || !isThumbEditable(index)) {\r\n      return;\r\n    }\r\n\r\n    const wasDragging = draggedThumbsRef.current?.[index];\r\n    draggedThumbsRef.current = replaceIndex(\r\n      draggedThumbsRef.current || [],\r\n      index,\r\n      dragging,\r\n    );\r\n    setDraggedThumbs(draggedThumbsRef.current);\r\n\r\n    // Call onChangeEnd if no handles are dragging.\r\n    if (onChangeEnd && wasDragging && !draggedThumbsRef.current.some(Boolean)) {\r\n      onChangeEnd(valuesRef.current || []);\r\n    }\r\n  };\r\n\r\n  const [focusedThumb, setFocusedThumb] = useState<number | undefined>(\r\n    undefined,\r\n  );\r\n\r\n  const getValuePercent = (value: number) => {\r\n    const x = Math.min(1, (value - minValue) / (maxValue - minValue));\r\n    if (isNaN(x)) {\r\n      return 0;\r\n    }\r\n    return x;\r\n  };\r\n\r\n  const getThumbPercent = (index: number) =>\r\n    getValuePercent(valuesRef.current![index]);\r\n\r\n  const setThumbPercent = (index: number, percent: number) => {\r\n    setThumbValue(index, getPercentValue(percent));\r\n  };\r\n\r\n  const getRoundedValue = (value: number) =>\r\n    Math.round((value - minValue) / step) * step + minValue;\r\n\r\n  const getPercentValue = (percent: number) => {\r\n    const val = percent * (maxValue - minValue) + minValue;\r\n    return clamp(getRoundedValue(val), minValue, maxValue);\r\n  };\r\n\r\n  // allows disabling individual thumbs in range slider, instead of disable the whole slider\r\n  const editableThumbsRef = useRef<boolean[]>(\r\n    new Array(values.length).fill(true),\r\n  );\r\n  const isThumbEditable = (index: number) => editableThumbsRef.current[index];\r\n  const setThumbEditable = (index: number, editable: boolean) => {\r\n    editableThumbsRef.current[index] = editable;\r\n  };\r\n\r\n  // When the user clicks or drags the track, we want the motion to set and drag the\r\n  // closest thumb. Hence, we also need to install useMove() on the track element.\r\n  // Here, we keep track of which index is the \"closest\" to the drag start point.\r\n  // It is set onMouseDown/onTouchDown; see trackProps below.\r\n  const realTimeTrackDraggingIndex = useRef<number | null>(null);\r\n\r\n  const currentPointer = useRef<number | null | undefined>(undefined);\r\n  const handlePointerDown = (e: React.PointerEvent) => {\r\n    if (\r\n      e.pointerType === 'mouse' &&\r\n      (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    onPointerDown?.();\r\n\r\n    // We only trigger track-dragging if the user clicks on the track itself and nothing is currently being dragged.\r\n    if (\r\n      trackRef.current &&\r\n      !isDisabled &&\r\n      values.every((_, i) => !draggedThumbs[i])\r\n    ) {\r\n      const size = trackRef.current.offsetWidth;\r\n      // Find the closest thumb\r\n      const trackPosition = trackRef.current.getBoundingClientRect().left;\r\n      const offset = e.clientX - trackPosition;\r\n      const percent = offset / size;\r\n      const value = getPercentValue(percent);\r\n\r\n      // to find the closet thumb we split the array based on the first thumb position to the \"right/end\" of the click.\r\n      let closestThumb;\r\n      const split = values.findIndex(v => value - v < 0);\r\n      if (split === 0) {\r\n        // If the index is zero then the closest thumb is the first one\r\n        closestThumb = split;\r\n      } else if (split === -1) {\r\n        // If no index is found they've clicked past all the thumbs\r\n        closestThumb = values.length - 1;\r\n      } else {\r\n        const lastLeft = values[split - 1];\r\n        const firstRight = values[split];\r\n        // Pick the last left/start thumb, unless they are stacked on top of each other, then pick the right/end one\r\n        if (Math.abs(lastLeft - value) < Math.abs(firstRight - value)) {\r\n          closestThumb = split - 1;\r\n        } else {\r\n          closestThumb = split;\r\n        }\r\n      }\r\n\r\n      // Confirm that the found closest thumb is editable, not disabled, and move it\r\n      if (closestThumb >= 0 && isThumbEditable(closestThumb)) {\r\n        // Don't un-focus anything\r\n        e.preventDefault();\r\n\r\n        realTimeTrackDraggingIndex.current = closestThumb;\r\n        setFocusedThumb(closestThumb);\r\n        currentPointer.current = e.pointerId;\r\n\r\n        updateDraggedThumbs(realTimeTrackDraggingIndex.current, true);\r\n        setThumbValue(closestThumb, value);\r\n\r\n        addGlobalListener(window, 'pointerup', onUpTrack, false);\r\n      } else {\r\n        realTimeTrackDraggingIndex.current = null;\r\n      }\r\n    }\r\n  };\r\n\r\n  const currentPosition = useRef<number | null>(null);\r\n  const {domProps: moveDomProps} = usePointerEvents({\r\n    onPointerDown: handlePointerDown,\r\n    onMoveStart() {\r\n      currentPosition.current = null;\r\n    },\r\n    onMove(e, deltaX) {\r\n      const size = trackRef.current?.offsetWidth || 0;\r\n\r\n      if (currentPosition.current == null) {\r\n        currentPosition.current =\r\n          getThumbPercent(realTimeTrackDraggingIndex.current || 0) * size;\r\n      }\r\n\r\n      currentPosition.current += deltaX;\r\n\r\n      if (realTimeTrackDraggingIndex.current != null && trackRef.current) {\r\n        const percent = clamp(currentPosition.current / size, 0, 1);\r\n        setThumbPercent(realTimeTrackDraggingIndex.current, percent);\r\n      }\r\n    },\r\n    onMoveEnd() {\r\n      if (realTimeTrackDraggingIndex.current != null) {\r\n        updateDraggedThumbs(realTimeTrackDraggingIndex.current, false);\r\n        realTimeTrackDraggingIndex.current = null;\r\n      }\r\n    },\r\n  });\r\n\r\n  const domProps = mergeProps(moveDomProps, {\r\n    onPointerEnter: () => {\r\n      setIsPointerOver(true);\r\n    },\r\n    onPointerLeave: () => {\r\n      setIsPointerOver(false);\r\n    },\r\n    onPointerMove: (e: React.PointerEvent) => {\r\n      onPointerMove?.(e);\r\n    },\r\n  });\r\n\r\n  const onUpTrack = (e: PointerEvent) => {\r\n    const id = e.pointerId;\r\n    if (id === currentPointer.current) {\r\n      if (realTimeTrackDraggingIndex.current != null) {\r\n        updateDraggedThumbs(realTimeTrackDraggingIndex.current, false);\r\n        realTimeTrackDraggingIndex.current = null;\r\n      }\r\n\r\n      removeGlobalListener(window, 'pointerup', onUpTrack, false);\r\n    }\r\n  };\r\n\r\n  const id = useId();\r\n  const labelId = label ? `${id}-label` : undefined;\r\n  const groupId = `${id}-group`;\r\n  const thumbIds = [...Array(values.length)].map((v, i) => {\r\n    return `${id}-thumb-${i}`;\r\n  });\r\n\r\n  return {\r\n    domProps,\r\n    trackRef,\r\n    isDisabled,\r\n    step,\r\n    values,\r\n    minValue,\r\n    maxValue,\r\n    focusedThumb,\r\n    labelId,\r\n    groupId,\r\n    thumbIds,\r\n    numberFormatter,\r\n    getThumbPercent,\r\n    getThumbMinValue,\r\n    getThumbMaxValue,\r\n    getThumbValueLabel,\r\n    isThumbDragging,\r\n    setThumbValue,\r\n    updateDraggedThumbs,\r\n    setThumbEditable,\r\n    setFocusedThumb,\r\n    getValueLabel,\r\n    isPointerOver,\r\n    showThumbOnHoverOnly,\r\n    thumbSize,\r\n  };\r\n}\r\n\r\nfunction replaceIndex<T>(array: T[], index: number, value: T) {\r\n  if (array[index] === value) {\r\n    return array;\r\n  }\r\n\r\n  return [...array.slice(0, index), value, ...array.slice(index + 1)];\r\n}\r\n","import React, {Ref, useCallback, useEffect, useRef} from 'react';\r\nimport clsx from 'clsx';\r\nimport {UseSliderReturn} from './use-slider';\r\nimport {useGlobalListeners, useObjectRef} from '@react-aria/utils';\r\nimport {createEventHandler} from '@common/utils/dom/create-event-handler';\r\nimport {BaseSliderProps} from '@common/ui/forms/slider/base-slider';\r\n\r\ninterface SliderThumb {\r\n  index: number;\r\n  slider: UseSliderReturn;\r\n  isDisabled?: boolean;\r\n  ariaLabel?: string;\r\n  inputRef?: Ref<HTMLInputElement>;\r\n  onBlur?: React.FocusEventHandler;\r\n  fillColor?: BaseSliderProps['fillColor'];\r\n}\r\n\r\nexport function SliderThumb({\r\n  index,\r\n  slider,\r\n  isDisabled: isThumbDisabled,\r\n  ariaLabel,\r\n  inputRef,\r\n  onBlur,\r\n  fillColor = 'primary',\r\n}: SliderThumb) {\r\n  const inputObjRef = useObjectRef(inputRef);\r\n  const {addGlobalListener, removeGlobalListener} = useGlobalListeners();\r\n\r\n  const {\r\n    step,\r\n    values,\r\n    focusedThumb,\r\n    labelId,\r\n    thumbIds,\r\n    isDisabled: isSliderDisabled,\r\n    getThumbPercent,\r\n    getThumbMinValue,\r\n    getThumbMaxValue,\r\n    getThumbValueLabel,\r\n    setThumbValue,\r\n    updateDraggedThumbs,\r\n    isThumbDragging,\r\n    setThumbEditable,\r\n    setFocusedThumb,\r\n    isPointerOver,\r\n    showThumbOnHoverOnly,\r\n    thumbSize = 'w-18 h-18',\r\n  } = slider;\r\n\r\n  const isDragging = isThumbDragging(index);\r\n  const value = values[index];\r\n\r\n  // Immediately register editability with the state\r\n  setThumbEditable(index, !isThumbDisabled);\r\n  const isDisabled = isThumbDisabled || isSliderDisabled;\r\n\r\n  const focusInput = useCallback(() => {\r\n    if (inputObjRef.current) {\r\n      inputObjRef.current.focus({preventScroll: true});\r\n    }\r\n  }, [inputObjRef]);\r\n\r\n  // we will focus the native range input when slider is clicked or thumb is\r\n  // focused in some other way, and let browser handle keyboard interactions\r\n  const isFocused = focusedThumb === index;\r\n  useEffect(() => {\r\n    if (isFocused) {\r\n      focusInput();\r\n    }\r\n  }, [isFocused, focusInput]);\r\n\r\n  const currentPointer = useRef<number | undefined>(undefined);\r\n  const handlePointerUp = (e: PointerEvent) => {\r\n    if (e.pointerId === currentPointer.current) {\r\n      focusInput();\r\n      updateDraggedThumbs(index, false);\r\n      removeGlobalListener(window, 'pointerup', handlePointerUp, false);\r\n    }\r\n  };\r\n\r\n  const className = clsx(\r\n    'outline-none rounded-full top-1/2 -translate-y-1/2 -translate-x-1/2 absolute inset-0 transition-button duration-200',\r\n    thumbSize,\r\n    !isDisabled && 'shadow-md',\r\n    thumbColor({fillColor, isDisabled, isDragging: isDragging}),\r\n    // show thumb on hover and while dragging, otherwise \"blur\" event will fire on thumb and dragging will stop\r\n    !showThumbOnHoverOnly ||\r\n      (showThumbOnHoverOnly && isDragging) ||\r\n      isPointerOver\r\n      ? 'visible'\r\n      : 'invisible',\r\n  );\r\n\r\n  return (\r\n    <div\r\n      role=\"presentation\"\r\n      className={className}\r\n      style={{\r\n        left: `${Math.max(getThumbPercent(index) * 100, 0)}%`,\r\n      }}\r\n      onPointerDown={e => {\r\n        if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) {\r\n          return;\r\n        }\r\n        focusInput();\r\n        currentPointer.current = e.pointerId;\r\n        updateDraggedThumbs(index, true);\r\n\r\n        addGlobalListener(window, 'pointerup', handlePointerUp, false);\r\n      }}\r\n    >\r\n      <input\r\n        id={thumbIds[index]}\r\n        onKeyDown={createEventHandler(() => {\r\n          updateDraggedThumbs(index, true);\r\n        })}\r\n        onKeyUp={createEventHandler(() => {\r\n          // make sure \"onChangeEnd\" is fired on keyboard navigation\r\n          updateDraggedThumbs(index, false);\r\n        })}\r\n        ref={inputObjRef}\r\n        tabIndex={!isDisabled ? 0 : undefined}\r\n        min={getThumbMinValue(index)}\r\n        max={getThumbMaxValue(index)}\r\n        step={step}\r\n        value={value}\r\n        disabled={isDisabled}\r\n        aria-label={ariaLabel}\r\n        aria-labelledby={labelId}\r\n        aria-orientation=\"horizontal\"\r\n        aria-valuetext={getThumbValueLabel(index)}\r\n        onFocus={() => {\r\n          setFocusedThumb(index);\r\n        }}\r\n        onBlur={e => {\r\n          setFocusedThumb(undefined);\r\n          updateDraggedThumbs(index, false);\r\n          onBlur?.(e);\r\n        }}\r\n        onChange={e => {\r\n          setThumbValue(index, parseFloat(e.target.value));\r\n        }}\r\n        type=\"range\"\r\n        className=\"sr-only\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface SliderThumbColorProps {\r\n  isDisabled?: boolean;\r\n  isDragging: boolean;\r\n  fillColor?: BaseSliderProps['fillColor'];\r\n}\r\n\r\nfunction thumbColor({\r\n  isDisabled,\r\n  isDragging,\r\n  fillColor,\r\n}: SliderThumbColorProps): string {\r\n  if (isDisabled) {\r\n    return 'bg-slider-disabled cursor-default';\r\n  }\r\n\r\n  if (fillColor && fillColor !== 'primary') {\r\n    return fillColor;\r\n  }\r\n\r\n  return clsx(\r\n    'hover:bg-primary-dark',\r\n    isDragging ? 'bg-primary-dark' : 'bg-primary',\r\n  );\r\n}\r\n","import {BaseSlider} from './base-slider';\r\nimport {useSlider, UseSliderProps} from './use-slider';\r\nimport React, {Ref} from 'react';\r\nimport {SliderThumb} from './slider-thumb';\r\nimport {useController} from 'react-hook-form';\r\nimport {mergeProps} from '@react-aria/utils';\r\n\r\ninterface SliderProps extends UseSliderProps<number> {\r\n  inputRef?: Ref<HTMLInputElement>;\r\n  onBlur?: React.FocusEventHandler;\r\n}\r\nexport function Slider({inputRef, onBlur, ...props}: SliderProps) {\r\n  const {onChange, onChangeEnd, value, defaultValue, ...otherProps} = props;\r\n\r\n  const baseProps: UseSliderProps = {\r\n    ...otherProps,\r\n    // Normalize `value: number[]` to `value: number`\r\n    value: value != null ? [value] : undefined,\r\n    defaultValue: defaultValue != null ? [defaultValue] : undefined,\r\n    onChange: (v: number[]): void => {\r\n      onChange?.(v[0]);\r\n    },\r\n    onChangeEnd: (v: number[]): void => {\r\n      onChangeEnd?.(v[0]);\r\n    },\r\n  };\r\n\r\n  const slider = useSlider(baseProps);\r\n\r\n  return (\r\n    <BaseSlider {...baseProps} slider={slider}>\r\n      <SliderThumb\r\n        fillColor={props.fillColor}\r\n        index={0}\r\n        slider={slider}\r\n        inputRef={inputRef}\r\n        onBlur={onBlur}\r\n      />\r\n    </BaseSlider>\r\n  );\r\n}\r\n\r\nexport interface FormSliderProps extends SliderProps {\r\n  name: string;\r\n}\r\n\r\nexport function FormSlider({name, ...props}: FormSliderProps) {\r\n  const {\r\n    field: {onChange, onBlur, value = '', ref},\r\n  } = useController({\r\n    name,\r\n  });\r\n\r\n  const formProps: SliderProps = {\r\n    onChange,\r\n    onBlur,\r\n    value: value || '', // avoid issues with \"null\" value when setting form defaults from backend model\r\n  };\r\n\r\n  return <Slider inputRef={ref} {...mergeProps(formProps, props)} />;\r\n}\r\n","import clsx from 'clsx';\r\nimport {forwardRef, ReactNode} from 'react';\r\nimport {KeyboardArrowRightIcon} from '../../icons/material/KeyboardArrowRight';\r\nimport {ButtonBase, ButtonBaseProps} from '../../ui/buttons/button-base';\r\n\r\ninterface Props extends ButtonBaseProps {\r\n  startIcon?: ReactNode;\r\n  description?: ReactNode;\r\n}\r\nexport const AppearanceButton = forwardRef<HTMLButtonElement, Props>(\r\n  ({startIcon, children, className, description, ...other}, ref) => {\r\n    return (\r\n      <ButtonBase\r\n        ref={ref}\r\n        display=\"flex\"\r\n        className={clsx(\r\n          'relative mb-10 h-54 w-full items-center gap-10 rounded-input border bg px-14 text-sm hover:bg-hover',\r\n          className,\r\n        )}\r\n        variant={null}\r\n        {...other}\r\n      >\r\n        {startIcon}\r\n        <span className=\"block min-w-0\">\r\n          <span className=\"block\">{children}</span>\r\n          {description && (\r\n            <span className=\"block overflow-hidden overflow-ellipsis whitespace-nowrap text-xs text-muted\">\r\n              {description}\r\n            </span>\r\n          )}\r\n        </span>\r\n        <KeyboardArrowRightIcon\r\n          aria-hidden\r\n          className=\"ml-auto text-muted icon-sm\"\r\n        />\r\n      </ButtonBase>\r\n    );\r\n  },\r\n);\r\n","import {createSvgIcon} from '../../../../icons/create-svg-icon';\r\n\r\nexport const ColorIcon = createSvgIcon(\r\n  <path\r\n    stroke=\"#E0E0E0\"\r\n    d=\"M24,44c-7.168,0-13-5.816-13-12.971C11,24,24,4,24,4s13,20,13,27.029C37,38.184,31.168,44,24,44z\"\r\n  />\r\n);\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {ButtonBase} from '../buttons/button-base';\r\n\r\ntype Props = {\r\n  onChange?: (e: string) => void;\r\n  value?: string;\r\n  colors: string[];\r\n};\r\nexport function ColorSwatch({onChange, value, colors}: Props) {\r\n  const presetButtons = colors.map(color => {\r\n    const isSelected = value === color;\r\n    return (\r\n      <ButtonBase\r\n        key={color}\r\n        onClick={() => {\r\n          onChange?.(color);\r\n        }}\r\n        className={clsx(\r\n          'relative block flex-shrink-0 w-26 h-26 border rounded',\r\n          isSelected && 'shadow-md'\r\n        )}\r\n        style={{backgroundColor: color}}\r\n      >\r\n        {isSelected && (\r\n          <span className=\"absolute inset-0 m-auto rounded-full w-8 h-8 bg-white\" />\r\n        )}\r\n      </ButtonBase>\r\n    );\r\n  });\r\n\r\n  return <div className=\"flex flex-wrap gap-6\">{presetButtons}</div>;\r\n}\r\n","import {message} from '@common/i18n/message';\r\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\r\n\r\nexport const ColorPresets: {\r\n  color: string;\r\n  name: MessageDescriptor;\r\n  foreground?: string;\r\n}[] = [\r\n  {\r\n    color: 'rgb(255, 255, 255)',\r\n    name: message('White'),\r\n  },\r\n  {\r\n    color: 'rgb(239,245,245)',\r\n    name: message('Solitude'),\r\n  },\r\n  {\r\n    color: 'rgb(245,213,174)',\r\n    name: message('Wheat'),\r\n  },\r\n  {\r\n    color: 'rgb(253,227,167)',\r\n    name: message('Cape Honey'),\r\n  },\r\n  {\r\n    color: 'rgb(242,222,186)',\r\n    name: message('Milk punch'),\r\n  },\r\n  {\r\n    color: 'rgb(97,118,75)',\r\n    name: message('Dingy'),\r\n    foreground: 'rgb(255, 255, 255)',\r\n  },\r\n  {\r\n    color: 'rgb(4, 147, 114)',\r\n    name: message('Aquamarine'),\r\n    foreground: 'rgb(255, 255, 255)',\r\n  },\r\n  {\r\n    color: 'rgb(222,245,229)',\r\n    name: message('Cosmic Latte'),\r\n  },\r\n  {\r\n    color: 'rgb(233,119,119)',\r\n    name: message('Geraldine'),\r\n    foreground: 'rgb(90,14,14)',\r\n  },\r\n  {\r\n    color: 'rgb(247,164,164)',\r\n    name: message('Sundown'),\r\n  },\r\n  {\r\n    color: 'rgb(30,139,195)',\r\n    name: message('Pelorous'),\r\n    foreground: 'rgb(255, 255, 255)',\r\n  },\r\n  {\r\n    color: 'rgb(142,68,173)',\r\n    name: message('Deep Lilac'),\r\n    foreground: 'rgb(255, 255, 255)',\r\n  },\r\n  {\r\n    color: 'rgb(108,74,182)',\r\n    name: message('Blue marguerite'),\r\n    foreground: 'rgb(255, 255, 255)',\r\n  },\r\n  {\r\n    color: 'rgb(139,126,116)',\r\n    name: message('Americano'),\r\n    foreground: 'rgb(255, 255, 255)',\r\n  },\r\n  {\r\n    color: 'rgb(0,0,0)',\r\n    name: message('Black'),\r\n    foreground: 'rgb(255, 255, 255)',\r\n  },\r\n  {\r\n    color: 'rgb(64,66,88)',\r\n    name: message('Blue zodiac'),\r\n    foreground: 'rgb(255, 255, 255)',\r\n  },\r\n  {\r\n    color: 'rgb(101,100,124)',\r\n    name: message('Comet'),\r\n    foreground: 'rgb(255, 255, 255)',\r\n  },\r\n];\r\n","import {HexColorInput, HexColorPicker} from 'react-colorful';\r\nimport React, {useState} from 'react';\r\nimport {parseColor} from '@react-stately/color';\r\nimport {ColorSwatch} from './color-swatch';\r\nimport {getInputFieldClassNames} from '../forms/input-field/get-input-field-class-names';\r\nimport {ColorPresets} from '@common/ui/color-picker/color-presets';\r\n\r\nconst DefaultPresets = ColorPresets.map(({color}) => color).slice(0, 14);\r\n\r\ntype Props = {\r\n  defaultValue?: string;\r\n  onChange?: (e: string) => void;\r\n  colorPresets?: string[];\r\n  showInput?: boolean;\r\n};\r\nexport function ColorPicker({\r\n  defaultValue,\r\n  onChange,\r\n  colorPresets,\r\n  showInput,\r\n}: Props) {\r\n  const [color, setColor] = useState<string | undefined>(defaultValue);\r\n\r\n  const presets: string[] = colorPresets || DefaultPresets;\r\n\r\n  const style = getInputFieldClassNames({size: 'sm'});\r\n\r\n  return (\r\n    <div>\r\n      <HexColorPicker\r\n        className=\"!w-auto\"\r\n        color={color}\r\n        onChange={newColor => {\r\n          onChange?.(newColor);\r\n          setColor(newColor);\r\n        }}\r\n      />\r\n      <div className=\"py-20 px-12\">\r\n        {presets && (\r\n          <ColorSwatch\r\n            colors={presets}\r\n            onChange={newColor => {\r\n              if (newColor) {\r\n                const hex = parseColor(newColor).toString('hex');\r\n                onChange?.(hex);\r\n                setColor(hex);\r\n              }\r\n            }}\r\n            value={color}\r\n          />\r\n        )}\r\n        {showInput && (\r\n          <div className=\"pt-20\">\r\n            <HexColorInput\r\n              autoComplete=\"off\"\r\n              role=\"textbox\"\r\n              autoCorrect=\"off\"\r\n              spellCheck=\"false\"\r\n              required\r\n              aria-label=\"Hex color\"\r\n              prefixed\r\n              className={style.input}\r\n              color={color}\r\n              onChange={newColor => {\r\n                onChange?.(newColor);\r\n                setColor(newColor);\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {ColorPicker} from './color-picker';\r\nimport {DialogFooter} from '../overlays/dialog/dialog-footer';\r\nimport {Button} from '../buttons/button';\r\nimport {useDialogContext} from '../overlays/dialog/dialog-context';\r\nimport {Dialog} from '../overlays/dialog/dialog';\r\nimport {Trans} from '../../i18n/trans';\r\n\r\ninterface ColorPickerDialogProps {\r\n  hideFooter?: boolean;\r\n  showInput?: boolean;\r\n}\r\nexport function ColorPickerDialog({\r\n  hideFooter = false,\r\n  showInput = true,\r\n}: ColorPickerDialogProps) {\r\n  const {close, value, setValue, initialValue} = useDialogContext<\r\n    string | null\r\n  >();\r\n  // todo: remove this once pixie and bedrive are refactored to use dialogTrigger currentValue (use \"currentValue\" for defaultValue as well)\r\n  //const initialValue = useRef(defaultValue);\r\n\r\n  return (\r\n    <Dialog size=\"2xs\">\r\n      <ColorPicker\r\n        showInput={showInput}\r\n        defaultValue={initialValue ? initialValue : ''}\r\n        onChange={newValue => setValue(newValue)}\r\n      />\r\n      {!hideFooter && (\r\n        <DialogFooter dividerTop>\r\n          <Button variant=\"text\" size=\"xs\" onClick={() => close()}>\r\n            <Trans message=\"Cancel\" />\r\n          </Button>\r\n          <Button\r\n            variant=\"flat\"\r\n            color=\"primary\"\r\n            size=\"xs\"\r\n            onClick={() => close(value)}\r\n          >\r\n            <Trans message=\"Apply\" />\r\n          </Button>\r\n        </DialogFooter>\r\n      )}\r\n    </Dialog>\r\n  );\r\n}\r\n","import {LandingPageContent} from '@app/landing/landing-page-content';\r\nimport {useFormContext} from 'react-hook-form';\r\nimport {\r\n  appearanceState,\r\n  AppearanceValues,\r\n  useAppearanceStore,\r\n} from '@common/admin/appearance/appearance-store';\r\nimport {Fragment, ReactNode} from 'react';\r\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {FormSlider} from '@common/ui/forms/slider/slider';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {AppearanceButton} from '@common/admin/appearance/appearance-button';\r\nimport {ColorIcon} from '@common/admin/appearance/sections/themes/color-icon';\r\nimport {ColorPickerDialog} from '@common/ui/color-picker/color-picker-dialog';\r\nimport {Link} from 'react-router-dom';\r\nimport {FormImageSelector} from '@common/ui/images/image-selector';\r\n\r\nexport function LandingPageSectionGeneral() {\r\n  return (\r\n    <Fragment>\r\n      <HeaderSection />\r\n      <div className=\"my-24 border-y py-24\">\r\n        <AppearanceButton\r\n          to=\"action-buttons\"\r\n          elementType={Link}\r\n          className=\"mb-20\"\r\n        >\r\n          <Trans message=\"Action buttons\" />\r\n        </AppearanceButton>\r\n        <AppearanceButton to=\"primary-features\" elementType={Link}>\r\n          <Trans message=\"Primary features\" />\r\n        </AppearanceButton>\r\n        <AppearanceButton to=\"secondary-features\" elementType={Link}>\r\n          <Trans message=\"Secondary features\" />\r\n        </AppearanceButton>\r\n      </div>\r\n      <FooterSection />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction HeaderSection() {\r\n  const defaultImage = useAppearanceStore(\r\n    s =>\r\n      (s.defaults?.settings.homepage.appearance as LandingPageContent)\r\n        ?.headerImage,\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <FormTextField\r\n        label={<Trans message=\"Header title\" />}\r\n        className=\"mb-20\"\r\n        name=\"settings.homepage.appearance.headerTitle\"\r\n        onFocus={() => {\r\n          appearanceState().preview.setHighlight('[data-testid=\"headerTitle\"]');\r\n        }}\r\n      />\r\n      <FormTextField\r\n        label={<Trans message=\"Header subtitle\" />}\r\n        className=\"mb-30\"\r\n        inputElementType=\"textarea\"\r\n        rows={4}\r\n        name=\"settings.homepage.appearance.headerSubtitle\"\r\n        onFocus={() => {\r\n          appearanceState().preview.setHighlight(\r\n            '[data-testid=\"headerSubtitle\"]',\r\n          );\r\n        }}\r\n      />\r\n      <FormImageSelector\r\n        name=\"settings.homepage.appearance.headerImage\"\r\n        className=\"mb-30\"\r\n        label={<Trans message=\"Header image\" />}\r\n        defaultValue={defaultImage}\r\n        diskPrefix=\"homepage\"\r\n      />\r\n      <FormSlider\r\n        name=\"settings.homepage.appearance.headerImageOpacity\"\r\n        label={<Trans message=\"Header image opacity\" />}\r\n        minValue={0}\r\n        step={0.1}\r\n        maxValue={1}\r\n        formatOptions={{style: 'percent'}}\r\n      />\r\n      <div className=\"mb-20 text-xs text-muted\">\r\n        <Trans message=\"In order for overlay colors to appear, header image opacity will need to be less then 100%\" />\r\n      </div>\r\n      <ColorPickerTrigger\r\n        formKey=\"settings.homepage.appearance.headerOverlayColor1\"\r\n        label={<Trans message=\"Header overlay color 1\" />}\r\n      />\r\n      <ColorPickerTrigger\r\n        formKey=\"settings.homepage.appearance.headerOverlayColor2\"\r\n        label={<Trans message=\"Header overlay color 2\" />}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction FooterSection() {\r\n  const defaultImage = useAppearanceStore(\r\n    s =>\r\n      (s.defaults?.settings.homepage.appearance as LandingPageContent)\r\n        ?.footerImage,\r\n  );\r\n  return (\r\n    <Fragment>\r\n      <FormTextField\r\n        label={<Trans message=\"Footer title\" />}\r\n        className=\"mb-20\"\r\n        name=\"settings.homepage.appearance.footerTitle\"\r\n        onFocus={() => {\r\n          appearanceState().preview.setHighlight('[data-testid=\"footerTitle\"]');\r\n        }}\r\n      />\r\n      <FormTextField\r\n        label={<Trans message=\"Footer subtitle\" />}\r\n        className=\"mb-20\"\r\n        name=\"settings.homepage.appearance.footerSubtitle\"\r\n        onFocus={() => {\r\n          appearanceState().preview.setHighlight(\r\n            '[data-testid=\"footerSubtitle\"]',\r\n          );\r\n        }}\r\n      />\r\n      <FormImageSelector\r\n        name=\"settings.homepage.appearance.footerImage\"\r\n        className=\"mb-30\"\r\n        label={<Trans message=\"Footer background image\" />}\r\n        defaultValue={defaultImage}\r\n        diskPrefix=\"homepage\"\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface ColorPickerTriggerProps {\r\n  formKey: string;\r\n  label: ReactNode;\r\n}\r\nfunction ColorPickerTrigger({label, formKey}: ColorPickerTriggerProps) {\r\n  const key = formKey as 'settings.homepage.appearance.headerOverlayColor1';\r\n  const {watch, setValue} = useFormContext<AppearanceValues>();\r\n\r\n  const formValue = watch(key);\r\n\r\n  const setColor = (value: string | null) => {\r\n    setValue(formKey as any, value, {\r\n      shouldDirty: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <DialogTrigger\r\n      type=\"popover\"\r\n      value={formValue}\r\n      alwaysReturnCurrentValueOnClose\r\n      onValueChange={newValue => setColor(newValue)}\r\n      onClose={value => setColor(value)}\r\n    >\r\n      <AppearanceButton\r\n        className=\"capitalize\"\r\n        startIcon={\r\n          <ColorIcon\r\n            viewBox=\"0 0 48 48\"\r\n            className=\"icon-lg\"\r\n            style={{fill: formValue}}\r\n          />\r\n        }\r\n      >\r\n        {label}\r\n      </AppearanceButton>\r\n      <ColorPickerDialog />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n","export function ucFirst<T extends string>(string: T): T {\r\n  if (!string) return string;\r\n  return (string.charAt(0).toUpperCase() + string.slice(1)) as T;\r\n}\r\n","import {useControlledState} from '@react-stately/utils';\r\nimport React, {Fragment, useState} from 'react';\r\nimport {useController} from 'react-hook-form';\r\nimport {mergeProps} from '@react-aria/utils';\r\nimport clsx from 'clsx';\r\nimport {produce} from 'immer';\r\nimport {Permission, PermissionRestriction} from '../permission';\r\nimport {useValueLists} from '../../http/value-lists';\r\nimport {ucFirst} from '../../utils/string/uc-first';\r\nimport {Accordion, AccordionItem} from '../../ui/accordion/accordion';\r\nimport {List, ListItem} from '../../ui/list/list';\r\nimport {Switch} from '../../ui/forms/toggle/switch';\r\nimport {TextField} from '../../ui/forms/input-field/text-field/text-field';\r\nimport {DoneAllIcon} from '../../icons/material/DoneAll';\r\nimport {Trans} from '../../i18n/trans';\r\n\r\ninterface PermissionSelectorProps {\r\n  value?: Permission[];\r\n  onChange?: (value: Permission[]) => void;\r\n  valueListKey?: 'permissions' | 'workspacePermissions';\r\n}\r\nexport const PermissionSelector = React.forwardRef<\r\n  HTMLDivElement,\r\n  PermissionSelectorProps\r\n>(({valueListKey = 'permissions', ...props}, ref) => {\r\n  const {data} = useValueLists([valueListKey]);\r\n  const permissions = data?.permissions || data?.workspacePermissions;\r\n\r\n  const [value, setValue] = useControlledState(props.value, [], props.onChange);\r\n  const [showAdvanced, setShowAdvanced] = useState(false);\r\n\r\n  if (!permissions) return null;\r\n\r\n  const groupedPermissions = buildPermissionList(\r\n    permissions,\r\n    value,\r\n    showAdvanced\r\n  );\r\n\r\n  const onRestrictionChange = (newPermission: Permission) => {\r\n    const newValue = [...value];\r\n    const index = newValue.findIndex(p => p.id === newPermission.id);\r\n    if (index > -1) {\r\n      newValue.splice(index, 1, newPermission);\r\n    }\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Accordion variant=\"outline\" ref={ref}>\r\n        {groupedPermissions.map(({groupName, items, anyChecked}) => (\r\n          <AccordionItem\r\n            label={<Trans message={prettyName(groupName)} />}\r\n            key={groupName}\r\n            startIcon={anyChecked ? <DoneAllIcon size=\"sm\" /> : undefined}\r\n          >\r\n            <List>\r\n              {items.map(permission => {\r\n                const index = value.findIndex(v => v.id === permission.id);\r\n                const isChecked = index > -1;\r\n\r\n                return (\r\n                  <div key={permission.id}>\r\n                    <ListItem\r\n                      onSelected={() => {\r\n                        if (isChecked) {\r\n                          const newValue = [...value];\r\n                          newValue.splice(index, 1);\r\n                          setValue(newValue);\r\n                        } else {\r\n                          setValue([...value, permission]);\r\n                        }\r\n                      }}\r\n                      endSection={\r\n                        <Switch\r\n                          tabIndex={-1}\r\n                          checked={isChecked}\r\n                          onChange={() => {}}\r\n                        />\r\n                      }\r\n                      description={<Trans message={permission.description} />}\r\n                    >\r\n                      <Trans\r\n                        message={permission.display_name || permission.name}\r\n                      />\r\n                    </ListItem>\r\n                    {isChecked && (\r\n                      <Restrictions\r\n                        permission={permission}\r\n                        onChange={onRestrictionChange}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n            </List>\r\n          </AccordionItem>\r\n        ))}\r\n      </Accordion>\r\n      <Switch\r\n        className=\"mt-30\"\r\n        checked={showAdvanced}\r\n        onChange={e => {\r\n          setShowAdvanced(e.target.checked);\r\n        }}\r\n      >\r\n        <Trans message=\"Show advanced permissions\" />\r\n      </Switch>\r\n    </Fragment>\r\n  );\r\n});\r\n\r\ninterface RestrictionsProps {\r\n  permission: Permission;\r\n  onChange?: (newPermission: Permission) => void;\r\n}\r\nfunction Restrictions({permission, onChange}: RestrictionsProps) {\r\n  if (!permission?.restrictions?.length) return null;\r\n\r\n  const setRestrictionValue = (\r\n    name: string,\r\n    value: PermissionRestriction['value']\r\n  ) => {\r\n    const nextState = produce(permission, draftState => {\r\n      const restriction = draftState.restrictions.find(r => r.name === name);\r\n      if (restriction) {\r\n        restriction.value = value;\r\n      }\r\n    });\r\n    onChange?.(nextState);\r\n  };\r\n\r\n  return (\r\n    <div className=\"px-40 py-20\">\r\n      {permission.restrictions.map((restriction, index) => {\r\n        const isLast = index === permission.restrictions.length - 1;\r\n\r\n        const name = <Trans message={prettyName(restriction.name)} />;\r\n        const description = restriction.description ? (\r\n          <Trans message={restriction.description} />\r\n        ) : undefined;\r\n\r\n        if (restriction.type === 'bool') {\r\n          return (\r\n            <Switch\r\n              description={description}\r\n              key={restriction.name}\r\n              className={clsx(!isLast && 'mb-30')}\r\n              checked={Boolean(restriction.value)}\r\n              onChange={e => {\r\n                setRestrictionValue(restriction.name, e.target.checked);\r\n              }}\r\n            >\r\n              {name}\r\n            </Switch>\r\n          );\r\n        }\r\n\r\n        return (\r\n          <TextField\r\n            size=\"sm\"\r\n            label={name}\r\n            description={description}\r\n            type=\"number\"\r\n            key={restriction.name}\r\n            className={clsx(!isLast && 'mb-30')}\r\n            value={(restriction.value as string) || ''}\r\n            onChange={e => {\r\n              setRestrictionValue(\r\n                restriction.name,\r\n                e.target.value === '' ? undefined : parseInt(e.target.value)\r\n              );\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport type FormChipFieldProps = PermissionSelectorProps & {\r\n  name: string;\r\n};\r\nexport function FormPermissionSelector(props: FormChipFieldProps) {\r\n  const {\r\n    field: {onChange, value = [], ref},\r\n  } = useController({\r\n    name: props.name,\r\n  });\r\n\r\n  const formProps: Partial<PermissionSelectorProps> = {\r\n    onChange,\r\n    value,\r\n  };\r\n\r\n  return <PermissionSelector ref={ref} {...mergeProps(formProps, props)} />;\r\n}\r\n\r\nexport const prettyName = (name: string) => {\r\n  return ucFirst(name.replace('_', ' '));\r\n};\r\n\r\ninterface PermissionGroup {\r\n  groupName: string;\r\n  anyChecked: boolean;\r\n  items: Permission[];\r\n}\r\n\r\n// merge \"restrictions\" from selected value into all permissions to make\r\n// it easier to bind restriction values to form inputs\r\nexport function buildPermissionList(\r\n  allPermissions: Permission[],\r\n  selectedPermissions: Permission[],\r\n  showAdvanced: boolean\r\n) {\r\n  const groupedPermissions: PermissionGroup[] = [];\r\n\r\n  allPermissions.forEach(permission => {\r\n    const index = selectedPermissions.findIndex(p => p.id === permission.id);\r\n    if (!showAdvanced && permission.advanced) return;\r\n\r\n    let group: PermissionGroup | undefined = groupedPermissions.find(\r\n      g => g.groupName === permission.group\r\n    );\r\n    if (!group) {\r\n      group = {groupName: permission.group, anyChecked: false, items: []};\r\n      groupedPermissions.push(group);\r\n    }\r\n\r\n    if (index > -1) {\r\n      const mergedPermission = {\r\n        ...permission,\r\n        restrictions: mergeRestrictions(\r\n          permission.restrictions,\r\n          selectedPermissions[index].restrictions\r\n        ),\r\n      };\r\n      group.anyChecked = true;\r\n      group.items.push(mergedPermission);\r\n    } else {\r\n      group.items.push(permission);\r\n    }\r\n  });\r\n\r\n  return groupedPermissions;\r\n}\r\n\r\nfunction mergeRestrictions(\r\n  allRestrictions: PermissionRestriction[],\r\n  selectedRestrictions: PermissionRestriction[]\r\n): PermissionRestriction[] {\r\n  return allRestrictions?.map(restriction => {\r\n    const selected = selectedRestrictions.find(\r\n      r => r.name === restriction.name\r\n    );\r\n    if (selected) {\r\n      return {...restriction, value: selected.value};\r\n    } else {\r\n      return restriction;\r\n    }\r\n  });\r\n}\r\n","import {MenuSectionConfig} from '../../../types/appearance-editor-config';\r\nimport {MenuItemConfig} from '../../../../../core/settings/settings';\r\nimport mergedAppearanceConfig from '../../../config/merged-appearance-config';\r\n\r\nexport function useAvailableRoutes(): Partial<MenuItemConfig>[] {\r\n  const menuConfig = mergedAppearanceConfig.sections.menus.config;\r\n\r\n  if (!menuConfig) return [];\r\n\r\n  return (menuConfig as MenuSectionConfig).availableRoutes.map(route => {\r\n    return {\r\n      id: route,\r\n      label: route,\r\n      action: route,\r\n      type: 'route',\r\n      target: '_self',\r\n    };\r\n  });\r\n}\r\n","export const iconGridStyle = {\r\n  grid: 'flex flex-wrap gap-24',\r\n  button:\r\n    'flex flex-col items-center rounded hover:bg-hover h-90 aspect-square',\r\n};\r\n","import React, {Suspense} from 'react';\r\nimport {IconTree} from '../../icons/create-svg-icon';\r\nimport {iconGridStyle} from './icon-grid-style';\r\nimport {TextField} from '../forms/input-field/text-field/text-field';\r\nimport {Skeleton} from '../skeleton/skeleton';\r\nimport {useTrans} from '../../i18n/use-trans';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {opacityAnimation} from '../animation/opacity-animation';\r\n\r\nconst skeletons = [...Array(60).keys()];\r\n\r\nconst IconList = React.lazy(() => import('./icon-list'));\r\n\r\ninterface IconListProps {\r\n  onIconSelected: (icon: IconTree[] | null) => void;\r\n}\r\nexport default function IconPicker({onIconSelected}: IconListProps) {\r\n  const {trans} = useTrans();\r\n  const [value, setValue] = React.useState('');\r\n\r\n  return (\r\n    <div className=\"py-4\">\r\n      <TextField\r\n        className=\"mb-20\"\r\n        value={value}\r\n        onChange={e => {\r\n          setValue(e.target.value);\r\n        }}\r\n        placeholder={trans({message: 'Search icons...'})}\r\n      />\r\n      <AnimatePresence mode=\"wait\">\r\n        <Suspense\r\n          fallback={\r\n            <m.div {...opacityAnimation} className={iconGridStyle.grid}>\r\n              {skeletons.map((_, index) => (\r\n                <div className={iconGridStyle.button} key={index}>\r\n                  <Skeleton variant=\"rect\" />\r\n                </div>\r\n              ))}\r\n            </m.div>\r\n          }\r\n        >\r\n          <m.div {...opacityAnimation} className={iconGridStyle.grid}>\r\n            <IconList searchQuery={value} onIconSelected={onIconSelected} />\r\n          </m.div>\r\n        </Suspense>\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport IconPicker from './icon-picker';\r\nimport {useDialogContext} from '../overlays/dialog/dialog-context';\r\nimport {Dialog} from '../overlays/dialog/dialog';\r\nimport {DialogHeader} from '../overlays/dialog/dialog-header';\r\nimport {DialogBody} from '../overlays/dialog/dialog-body';\r\nimport {Trans} from '../../i18n/trans';\r\n\r\nexport function IconPickerDialog() {\r\n  return (\r\n    <Dialog size=\"w-850\" className=\"min-h-dialog\">\r\n      <DialogHeader>\r\n        <Trans message=\"Select icon\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <IconPickerWrapper />\r\n      </DialogBody>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nfunction IconPickerWrapper() {\r\n  const {close} = useDialogContext();\r\n  return (\r\n    <IconPicker\r\n      onIconSelected={value => {\r\n        close(value);\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import {useEffect, useRef} from 'react';\r\n\r\nexport function usePrevious<T>(value: T) {\r\n  const ref = useRef<T>();\r\n  // Store current value in ref\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]); // Only re-run if value changes\r\n  // Return previous value (happens before update in useEffect above)\r\n  return ref.current;\r\n}\r\n","import {FormTextField} from '../../ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {useValueLists} from '../../http/value-lists';\r\nimport {useTrans} from '../../i18n/use-trans';\r\nimport {FormChipField} from '../../ui/forms/input-field/chip-field/form-chip-field';\r\nimport {Item} from '../../ui/forms/listbox/item';\r\nimport {Fragment, useEffect, useMemo} from 'react';\r\nimport {\r\n  buildPermissionList,\r\n  prettyName,\r\n} from '../../auth/ui/permission-selector';\r\nimport {Section} from '../../ui/forms/listbox/section';\r\nimport {useFormContext} from 'react-hook-form';\r\nimport {MenuItemConfig} from '../../core/settings/settings';\r\nimport {FormSelect, Option} from '../../ui/forms/select/select';\r\nimport {useAvailableRoutes} from '../appearance/sections/menus/hooks/available-routes';\r\nimport {ButtonBaseProps} from '../../ui/buttons/button-base';\r\nimport {createSvgIconFromTree, IconTree} from '../../icons/create-svg-icon';\r\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\r\nimport {IconButton} from '../../ui/buttons/icon-button';\r\nimport {EditIcon} from '../../icons/material/Edit';\r\nimport {IconPickerDialog} from '../../ui/icon-picker/icon-picker-dialog';\r\nimport {message} from '../../i18n/message';\r\nimport {usePrevious} from '../../utils/hooks/use-previous';\r\n\r\ninterface NameProps {\r\n  prefixName: (name: string) => string;\r\n}\r\n\r\ninterface MenuItemFormProps {\r\n  formPathPrefix?: string;\r\n  hideRoleAndPermissionFields?: boolean;\r\n}\r\nexport function MenuItemForm({\r\n  formPathPrefix,\r\n  hideRoleAndPermissionFields,\r\n}: MenuItemFormProps) {\r\n  const {trans} = useTrans();\r\n  const prefixName = (name: string): string => {\r\n    return formPathPrefix ? `${formPathPrefix}.${name}` : name;\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <FormTextField\r\n        className=\"mb-20\"\r\n        name={prefixName('label')}\r\n        label={<Trans message=\"Label\" />}\r\n        placeholder={trans(message('No label...'))}\r\n        startAppend={<IconDialogTrigger prefixName={prefixName} />}\r\n      />\r\n      <DestinationSelector prefixName={prefixName} />\r\n      {!hideRoleAndPermissionFields && (\r\n        <Fragment>\r\n          <RoleSelector prefixName={prefixName} />\r\n          <PermissionSelector prefixName={prefixName} />\r\n        </Fragment>\r\n      )}\r\n      <TargetSelect prefixName={prefixName} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface IconDialogTriggerProps extends ButtonBaseProps, NameProps {}\r\nfunction IconDialogTrigger({\r\n  prefixName,\r\n  ...buttonProps\r\n}: IconDialogTriggerProps) {\r\n  const {watch, setValue} = useFormContext<MenuItemConfig>();\r\n  const fieldName = prefixName('icon') as 'icon';\r\n  const watchedItemIcon = watch(fieldName);\r\n  const Icon = watchedItemIcon && createSvgIconFromTree(watchedItemIcon);\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={(iconTree?: IconTree[] | null) => {\r\n        // null will be set explicitly if icon is cleared via icon picker\r\n        if (iconTree || iconTree === null) {\r\n          setValue(fieldName, iconTree, {\r\n            shouldDirty: true,\r\n          });\r\n        }\r\n      }}\r\n    >\r\n      <IconButton\r\n        className=\"text-muted icon-sm\"\r\n        variant=\"outline\"\r\n        size=\"md\"\r\n        {...buttonProps}\r\n      >\r\n        {Icon ? <Icon /> : <EditIcon />}\r\n      </IconButton>\r\n      <IconPickerDialog />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\nfunction DestinationSelector({prefixName}: NameProps) {\r\n  const form = useFormContext<MenuItemConfig>();\r\n  const currentType = form.watch(prefixName('type') as 'type');\r\n  const previousType = usePrevious(currentType);\r\n  const {data} = useValueLists(['menuItemCategories']);\r\n  const categories = data?.menuItemCategories || [];\r\n  const selectedCategory = categories.find(c => c.type === currentType);\r\n  const {trans} = useTrans();\r\n  const routeItems = useAvailableRoutes();\r\n\r\n  // clear \"action\" field when \"type\" field changes\r\n  useEffect(() => {\r\n    if (previousType && previousType !== currentType) {\r\n      form.setValue(prefixName('action') as 'action', '');\r\n    }\r\n  }, [currentType, previousType, form, prefixName]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <FormSelect\r\n        className=\"mb-20\"\r\n        name={prefixName('type')}\r\n        selectionMode=\"single\"\r\n        label={<Trans message=\"Type\" />}\r\n      >\r\n        <Option value=\"link\">\r\n          <Trans message=\"Custom link\" />\r\n        </Option>\r\n        <Option value=\"route\">\r\n          <Trans message=\"Site page\" />\r\n        </Option>\r\n        {categories.map(category => (\r\n          <Option key={category.type} value={category.type}>\r\n            {category.name}\r\n          </Option>\r\n        ))}\r\n      </FormSelect>\r\n      {currentType === 'link' && (\r\n        <FormTextField\r\n          className=\"mb-20\"\r\n          required\r\n          type=\"url\"\r\n          name={prefixName('action')}\r\n          placeholder={trans({message: 'Enter a url...'})}\r\n          label={<Trans message=\"Url\" />}\r\n        />\r\n      )}\r\n      {currentType === 'route' && (\r\n        <FormSelect\r\n          className=\"mb-20\"\r\n          required\r\n          items={routeItems}\r\n          name={prefixName('action')}\r\n          label={<Trans message=\"Page\" />}\r\n          searchPlaceholder={trans(message('Search pages'))}\r\n          showSearchField\r\n          selectionMode=\"single\"\r\n        >\r\n          {item => (\r\n            <Item value={item.id} key={item.id}>\r\n              {item.label}\r\n            </Item>\r\n          )}\r\n        </FormSelect>\r\n      )}\r\n      {selectedCategory && (\r\n        <FormSelect\r\n          className=\"mb-20\"\r\n          required\r\n          items={selectedCategory.items}\r\n          name={prefixName('action')}\r\n          showSearchField\r\n          searchPlaceholder={trans(message('Search...'))}\r\n          selectionMode=\"single\"\r\n          label={<Trans message={selectedCategory.name} />}\r\n        >\r\n          {item => (\r\n            <Item value={item.action}>\r\n              <Trans message={item.label} />\r\n            </Item>\r\n          )}\r\n        </FormSelect>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction RoleSelector({prefixName}: NameProps) {\r\n  const {data} = useValueLists(['roles', 'permissions']);\r\n  const roles = data?.roles || [];\r\n  const {trans} = useTrans();\r\n\r\n  return (\r\n    <FormChipField\r\n      className=\"mb-20\"\r\n      placeholder={trans({message: 'Add role...'})}\r\n      label={<Trans message=\"Only show if user has role\" />}\r\n      name={prefixName('roles')}\r\n      chipSize=\"sm\"\r\n      suggestions={roles}\r\n      valueKey=\"id\"\r\n      displayWith={c => roles.find(r => r.id === c.id)?.name}\r\n    >\r\n      {role => (\r\n        <Item value={role.id} key={role.id} capitalizeFirst>\r\n          <Trans message={role.name} />\r\n        </Item>\r\n      )}\r\n    </FormChipField>\r\n  );\r\n}\r\n\r\nfunction PermissionSelector({prefixName}: NameProps) {\r\n  const {data} = useValueLists(['roles', 'permissions']);\r\n  const {trans} = useTrans();\r\n\r\n  const groupedPermissions = useMemo(() => {\r\n    return buildPermissionList(data?.permissions || [], [], false);\r\n  }, [data?.permissions]);\r\n\r\n  return (\r\n    <FormChipField\r\n      label={<Trans message=\"Only show if user has permissions\" />}\r\n      placeholder={trans({message: 'Add permission...'})}\r\n      chipSize=\"sm\"\r\n      suggestions={groupedPermissions}\r\n      name={prefixName('permissions')}\r\n      valueKey=\"name\"\r\n    >\r\n      {({groupName, items}) => (\r\n        <Section label={prettyName(groupName)} key={groupName}>\r\n          {items.map(permission => (\r\n            <Item\r\n              key={permission.name}\r\n              value={permission.name}\r\n              description={<Trans message={permission.description} />}\r\n            >\r\n              <Trans message={permission.display_name || permission.name} />\r\n            </Item>\r\n          ))}\r\n        </Section>\r\n      )}\r\n    </FormChipField>\r\n  );\r\n}\r\n\r\nfunction TargetSelect({prefixName}: NameProps) {\r\n  return (\r\n    <FormSelect\r\n      className=\"mt-20\"\r\n      selectionMode=\"single\"\r\n      name={prefixName('target')}\r\n      label={<Trans message=\"Open link in\" />}\r\n    >\r\n      <Option value=\"_self\">\r\n        <Trans message=\"Same window\" />\r\n      </Option>\r\n      <Option value=\"_blank\">\r\n        <Trans message=\"New window\" />\r\n      </Option>\r\n    </FormSelect>\r\n  );\r\n}\r\n","import {MenuItemForm} from '@common/admin/menus/menu-item-form';\r\nimport {Accordion, AccordionItem} from '@common/ui/accordion/accordion';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {appearanceState} from '@common/admin/appearance/appearance-store';\r\nimport {useState} from 'react';\r\n\r\nexport function LandingPageSectionActionButtons() {\r\n  const [expandedValues, setExpandedValues] = useState(['cta1']);\r\n  return (\r\n    <Accordion\r\n      variant=\"outline\"\r\n      expandedValues={expandedValues}\r\n      onExpandedChange={values => {\r\n        setExpandedValues(values as string[]);\r\n        if (values.length) {\r\n          appearanceState().preview.setHighlight(\r\n            `[data-testid=\"${values[0]}\"]`\r\n          );\r\n        }\r\n      }}\r\n    >\r\n      <AccordionItem value=\"cta1\" label={<Trans message=\"Header button 1\" />}>\r\n        <MenuItemForm formPathPrefix=\"settings.homepage.appearance.actions.cta1\" />\r\n      </AccordionItem>\r\n      <AccordionItem value=\"ct2\" label={<Trans message=\"Header button 2\" />}>\r\n        <MenuItemForm formPathPrefix=\"settings.homepage.appearance.actions.cta2\" />\r\n      </AccordionItem>\r\n      <AccordionItem value=\"cta3\" label={<Trans message=\"Footer button\" />}>\r\n        <MenuItemForm formPathPrefix=\"settings.homepage.appearance.actions.cta3\" />\r\n      </AccordionItem>\r\n    </Accordion>\r\n  );\r\n}\r\n","import {Accordion, AccordionItem} from '@common/ui/accordion/accordion';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {\r\n  appearanceState,\r\n  useAppearanceStore,\r\n} from '@common/admin/appearance/appearance-store';\r\nimport {useFieldArray} from 'react-hook-form';\r\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {LandingPageContent} from '@app/landing/landing-page-content';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {AddIcon} from '@common/icons/material/Add';\r\nimport {useState} from 'react';\r\nimport {FormImageSelector} from '@common/ui/images/image-selector';\r\n\r\nexport function LandingPageSectionPrimaryFeatures() {\r\n  const {fields, remove, append} = useFieldArray({\r\n    name: 'settings.homepage.appearance.primaryFeatures',\r\n  });\r\n  const [expandedValues, setExpandedValues] = useState([0]);\r\n  return (\r\n    <div>\r\n      <Accordion\r\n        variant=\"outline\"\r\n        expandedValues={expandedValues}\r\n        onExpandedChange={values => {\r\n          setExpandedValues(values as number[]);\r\n          if (values.length) {\r\n            appearanceState().preview.setHighlight(\r\n              `[data-testid=\"primary-root-${values[0]}\"]`\r\n            );\r\n          }\r\n        }}\r\n      >\r\n        {fields.map((field, index) => {\r\n          return (\r\n            <AccordionItem\r\n              key={field.id}\r\n              value={index}\r\n              label={<Trans message={`Primary feature ${index + 1}`} />}\r\n            >\r\n              <FeatureForm index={index} />\r\n              <div className=\"text-right\">\r\n                <Button\r\n                  size=\"xs\"\r\n                  variant=\"outline\"\r\n                  color=\"danger\"\r\n                  onClick={() => {\r\n                    remove(index);\r\n                  }}\r\n                >\r\n                  <Trans message=\"Remove\" />\r\n                </Button>\r\n              </div>\r\n            </AccordionItem>\r\n          );\r\n        })}\r\n      </Accordion>\r\n      <div className=\"mt-20 text-right\">\r\n        <Button\r\n          size=\"xs\"\r\n          variant=\"outline\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          onClick={() => {\r\n            append({});\r\n            setExpandedValues([fields.length]);\r\n          }}\r\n        >\r\n          <Trans message=\"Add feature\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface FeatureFormProps {\r\n  index: number;\r\n}\r\nfunction FeatureForm({index}: FeatureFormProps) {\r\n  const defaultImage = useAppearanceStore(\r\n    s =>\r\n      (s.defaults?.settings.homepage.appearance as LandingPageContent)\r\n        ?.primaryFeatures[index]?.image\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <FormImageSelector\r\n        name={`settings.homepage.appearance.primaryFeatures.${index}.image`}\r\n        className=\"mb-30\"\r\n        label={<Trans message=\"Image\" />}\r\n        defaultValue={defaultImage}\r\n        diskPrefix=\"homepage\"\r\n      />\r\n      <FormTextField\r\n        name={`settings.homepage.appearance.primaryFeatures.${index}.title`}\r\n        label={<Trans message=\"Title\" />}\r\n        className=\"mb-20\"\r\n        onFocus={() => {\r\n          appearanceState().preview.setHighlight(\r\n            `[data-testid=\"primary-title-${index}\"]`\r\n          );\r\n        }}\r\n      />\r\n      <FormTextField\r\n        name={`settings.homepage.appearance.primaryFeatures.${index}.subtitle`}\r\n        label={<Trans message=\"Subtitle\" />}\r\n        className=\"mb-20\"\r\n        inputElementType=\"textarea\"\r\n        rows={4}\r\n        onFocus={() => {\r\n          appearanceState().preview.setHighlight(\r\n            `[data-testid=\"primary-subtitle-${index}\"]`\r\n          );\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import {Accordion, AccordionItem} from '@common/ui/accordion/accordion';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {appearanceState} from '@common/admin/appearance/appearance-store';\r\nimport {useFieldArray} from 'react-hook-form';\r\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {LandingPageContent} from '@app/landing/landing-page-content';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {AddIcon} from '@common/icons/material/Add';\r\nimport {useState} from 'react';\r\nimport {FormImageSelector} from '@common/ui/images/image-selector';\r\n\r\nexport function LandingPageSecondaryFeatures() {\r\n  const {fields, remove, append} = useFieldArray({\r\n    name: 'settings.homepage.appearance.secondaryFeatures',\r\n  });\r\n  const [expandedValues, setExpandedValues] = useState([0]);\r\n  return (\r\n    <div>\r\n      <Accordion\r\n        variant=\"outline\"\r\n        expandedValues={expandedValues}\r\n        onExpandedChange={values => {\r\n          setExpandedValues(values as number[]);\r\n          if (values.length) {\r\n            appearanceState().preview.setHighlight(\r\n              `[data-testid=\"secondary-root-${values[0]}\"]`\r\n            );\r\n          }\r\n        }}\r\n      >\r\n        {fields.map((field, index) => {\r\n          return (\r\n            <AccordionItem\r\n              key={field.id}\r\n              value={index}\r\n              label={<Trans message={`Secondary feature ${index + 1}`} />}\r\n            >\r\n              <FeatureForm index={index} />\r\n              <div className=\"text-right\">\r\n                <Button\r\n                  size=\"xs\"\r\n                  variant=\"outline\"\r\n                  color=\"danger\"\r\n                  onClick={() => {\r\n                    remove(index);\r\n                  }}\r\n                >\r\n                  <Trans message=\"Remove\" />\r\n                </Button>\r\n              </div>\r\n            </AccordionItem>\r\n          );\r\n        })}\r\n      </Accordion>\r\n      <div className=\"mt-20 text-right\">\r\n        <Button\r\n          size=\"xs\"\r\n          variant=\"outline\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          onClick={() => {\r\n            append({});\r\n            setExpandedValues([fields.length]);\r\n          }}\r\n        >\r\n          <Trans message=\"Add feature\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface FeatureFormProps {\r\n  index: number;\r\n}\r\nfunction FeatureForm({index}: FeatureFormProps) {\r\n  return (\r\n    <>\r\n      <FormImageSelector\r\n        name={`settings.homepage.appearance.secondaryFeatures.${index}.image`}\r\n        className=\"mb-30\"\r\n        label={<Trans message=\"Image\" />}\r\n        defaultValue={getDefaultImage(index)}\r\n        diskPrefix=\"homepage\"\r\n      />\r\n      <FormTextField\r\n        name={`settings.homepage.appearance.secondaryFeatures.${index}.title`}\r\n        label={<Trans message=\"Title\" />}\r\n        className=\"mb-20\"\r\n        onFocus={() => {\r\n          appearanceState().preview.setHighlight(\r\n            `[data-testid=\"secondary-title-${index}\"]`\r\n          );\r\n        }}\r\n      />\r\n      <FormTextField\r\n        name={`settings.homepage.appearance.secondaryFeatures.${index}.subtitle`}\r\n        label={<Trans message=\"Subtitle\" />}\r\n        className=\"mb-20\"\r\n        inputElementType=\"textarea\"\r\n        rows={4}\r\n        onFocus={() => {\r\n          appearanceState().preview.setHighlight(\r\n            `[data-testid=\"secondary-subtitle-${index}\"]`\r\n          );\r\n        }}\r\n      />\r\n      <FormTextField\r\n        name={`settings.homepage.appearance.secondaryFeatures.${index}.description`}\r\n        label={<Trans message=\"Description\" />}\r\n        className=\"mb-20\"\r\n        inputElementType=\"textarea\"\r\n        rows={4}\r\n        onFocus={() => {\r\n          appearanceState().preview.setHighlight(\r\n            `[data-testid=\"secondary-description-${index}\"]`\r\n          );\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction getDefaultImage(index: number): string | undefined {\r\n  return (\r\n    appearanceState().defaults?.settings.homepage\r\n      .appearance as LandingPageContent\r\n  ).secondaryFeatures[index]?.image;\r\n}\r\n","import {\r\n  IAppearanceConfig,\r\n  MenuSectionConfig,\r\n  SeoSettingsSectionConfig,\r\n} from '@common/admin/appearance/types/appearance-editor-config';\r\nimport {message} from '@common/i18n/message';\r\nimport {LandingPageSectionGeneral} from '@app/admin/appearance/sections/landing-page-section/landing-page-section-general';\r\nimport {LandingPageSectionActionButtons} from '@app/admin/appearance/sections/landing-page-section/landing-page-section-action-buttons';\r\nimport {LandingPageSectionPrimaryFeatures} from '@app/admin/appearance/sections/landing-page-section/landing-page-section-primary-features';\r\nimport {LandingPageSecondaryFeatures} from '@app/admin/appearance/sections/landing-page-section/landing-page-section-secondary-features';\r\nimport {AppearanceEditorBreadcrumbItem} from '@common/admin/appearance/types/appearance-editor-section';\r\n\r\nexport const AppAppearanceConfig: IAppearanceConfig = {\r\n  preview: {\r\n    defaultRoute: 'drive',\r\n    navigationRoutes: ['s', 'drive'],\r\n  },\r\n  sections: {\r\n    'landing-page': {\r\n      label: message('Landing Page'),\r\n      position: 1,\r\n      previewRoute: '/',\r\n      routes: [\r\n        {path: 'landing-page', element: <LandingPageSectionGeneral />},\r\n        {\r\n          path: 'landing-page/action-buttons',\r\n          element: <LandingPageSectionActionButtons />,\r\n        },\r\n        {\r\n          path: 'landing-page/primary-features',\r\n          element: <LandingPageSectionPrimaryFeatures />,\r\n        },\r\n        {\r\n          path: 'landing-page/secondary-features',\r\n          element: <LandingPageSecondaryFeatures />,\r\n        },\r\n      ],\r\n      buildBreadcrumb: (pathname, formValue) => {\r\n        const parts = pathname.split('/').filter(p => !!p);\r\n        const sectionName = parts.pop();\r\n        // admin/appearance\r\n        const breadcrumb: AppearanceEditorBreadcrumbItem[] = [\r\n          {\r\n            label: message('Landing page'),\r\n            location: 'landing-page',\r\n          },\r\n        ];\r\n        if (sectionName === 'action-buttons') {\r\n          breadcrumb.push({\r\n            label: message('Action buttons'),\r\n            location: 'landing-page/action-buttons',\r\n          });\r\n        }\r\n\r\n        if (sectionName === 'primary-features') {\r\n          breadcrumb.push({\r\n            label: message('Primary features'),\r\n            location: 'landing-page/primary-features',\r\n          });\r\n        }\r\n\r\n        if (sectionName === 'secondary-features') {\r\n          breadcrumb.push({\r\n            label: message('Secondary features'),\r\n            location: 'landing-page/secondary-features',\r\n          });\r\n        }\r\n\r\n        return breadcrumb;\r\n      },\r\n    },\r\n    // missing label will get added by deepMerge from default config\r\n    // @ts-ignore\r\n    menus: {\r\n      config: {\r\n        positions: [\r\n          'drive-navbar',\r\n          'drive-sidebar',\r\n          'homepage-navbar',\r\n          'shareable-link-page',\r\n          'footer',\r\n          'footer-secondary',\r\n        ],\r\n        availableRoutes: [\r\n          '/drive',\r\n          '/drive/shares',\r\n          '/drive/recent',\r\n          '/drive/starred',\r\n          '/drive/trash',\r\n        ],\r\n      } as MenuSectionConfig,\r\n    },\r\n    // @ts-ignore\r\n    'seo-settings': {\r\n      config: {\r\n        pages: [\r\n          {\r\n            key: 'landing-page',\r\n            label: message('Landing page'),\r\n          },\r\n          {\r\n            key: 'shareable-link-page',\r\n            label: message('Shareable link page'),\r\n          },\r\n        ],\r\n      } as SeoSettingsSectionConfig,\r\n    },\r\n  },\r\n};\r\n","import deepMerge from 'deepmerge';\r\nimport {DefaultAppearanceConfig} from '@common/admin/appearance/config/default-appearance-config';\r\nimport {AppAppearanceConfig} from '@app/admin/appearance/app-appearance-config';\r\nimport {IAppearanceConfig} from '@common/admin/appearance/types/appearance-editor-config';\r\n\r\nconst mergedAppearanceConfig = deepMerge.all([\r\n  DefaultAppearanceConfig,\r\n  AppAppearanceConfig,\r\n]);\r\n\r\nexport default mergedAppearanceConfig as IAppearanceConfig;\r\n","import {create} from 'zustand';\r\nimport {subscribeWithSelector} from 'zustand/middleware';\r\nimport {immer} from 'zustand/middleware/immer';\r\nimport {Settings} from '../../core/settings/settings';\r\nimport type {IAppearanceConfig} from './types/appearance-editor-config';\r\nimport {AllCommands} from './commands/commands';\r\nimport mergedAppearanceConfig from './config/merged-appearance-config';\r\nimport {BootstrapData} from '../../core/bootstrap-data/bootstrap-data';\r\nimport {FontConfig} from '@common/http/value-lists';\r\n\r\nexport interface AppearanceValues {\r\n  appearance: {\r\n    env: {app_name: string; app_url: string};\r\n    seo: {\r\n      key: string;\r\n      name: string;\r\n      value: string;\r\n      defaultValue: string;\r\n    }[];\r\n    themes: BootstrapData['themes'];\r\n    custom_code: {\r\n      css?: string;\r\n      html?: string;\r\n    };\r\n  };\r\n  settings: Settings;\r\n}\r\n\r\nexport interface AppearanceDefaults {\r\n  appearance: {\r\n    themes: {\r\n      light: Record<string, string>;\r\n      dark: Record<string, string>;\r\n    };\r\n  };\r\n  settings: Settings;\r\n}\r\n\r\ninterface AppearanceStore {\r\n  defaults: AppearanceDefaults | null;\r\n  iframeWindow: Window | null;\r\n  config: IAppearanceConfig | null;\r\n  setDefaults: (value: AppearanceDefaults) => void;\r\n  setIframeWindow: (value: Window) => void;\r\n  preview: {\r\n    navigate: (sectionName: string) => void;\r\n    setValues: (settings: AppearanceValues) => void;\r\n    setThemeFont: (font: FontConfig | null) => void;\r\n    setThemeValue: (name: string, value: string) => void;\r\n    setActiveTheme: (themeId: number | string) => void;\r\n    setHighlight: (selector: string | null | undefined) => void;\r\n    setCustomCode: (mode: 'css' | 'html', value?: string) => void;\r\n  };\r\n}\r\n\r\nexport const useAppearanceStore = create<AppearanceStore>()(\r\n  subscribeWithSelector(\r\n    immer((set, get) => ({\r\n      defaults: null,\r\n      iframeWindow: null,\r\n      config: mergedAppearanceConfig,\r\n      setDefaults: value => {\r\n        set(state => {\r\n          state.defaults = {...value};\r\n        });\r\n      },\r\n      setIframeWindow: value => {\r\n        set(() => {\r\n          return {iframeWindow: value};\r\n        });\r\n      },\r\n\r\n      preview: {\r\n        navigate: sectionName => {\r\n          const section = get().config?.sections[sectionName];\r\n          const route = section?.previewRoute || '/';\r\n          const preview = get().iframeWindow;\r\n          if (route) {\r\n            postMessage(preview, {type: 'navigate', to: route});\r\n          }\r\n        },\r\n        setValues: values => {\r\n          const preview = get().iframeWindow;\r\n          postMessage(preview, {type: 'setValues', values});\r\n        },\r\n        setThemeFont: font => {\r\n          const preview = get().iframeWindow;\r\n          postMessage(preview, {type: 'setThemeFont', value: font});\r\n        },\r\n        setThemeValue: (name, value) => {\r\n          const preview = get().iframeWindow;\r\n          postMessage(preview, {type: 'setThemeValue', name, value});\r\n        },\r\n        setActiveTheme: themeId => {\r\n          const preview = get().iframeWindow;\r\n          postMessage(preview, {type: 'setActiveTheme', themeId});\r\n        },\r\n        setCustomCode: (mode, value) => {\r\n          const preview = get().iframeWindow;\r\n          postMessage(preview, {type: 'setCustomCode', mode, value});\r\n        },\r\n        setHighlight: selector => {\r\n          set(() => {\r\n            let node: HTMLElement | null = null;\r\n            const document = get().iframeWindow?.document;\r\n            if (document && selector) {\r\n              node = document.querySelector(selector);\r\n            }\r\n            if (node) {\r\n              requestAnimationFrame(() => {\r\n                if (!node) return;\r\n                node.scrollIntoView({\r\n                  behavior: 'smooth',\r\n                  block: 'center',\r\n                  inline: 'center',\r\n                });\r\n              });\r\n            }\r\n          });\r\n        },\r\n      },\r\n    })),\r\n  ),\r\n);\r\n\r\nfunction postMessage(window: Window | null, command: AllCommands) {\r\n  if (window) {\r\n    window.postMessage({source: 'be-appearance-editor', ...command}, '*');\r\n  }\r\n}\r\n\r\nexport function appearanceState() {\r\n  return useAppearanceStore.getState();\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {AppearanceValues} from '@common/admin/appearance/appearance-store';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\nimport {message} from '@common/i18n/message';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\nexport function useSaveAppearanceChanges() {\r\n  return useMutation({\r\n    mutationFn: (values: Partial<AppearanceValues>) =>\r\n      saveAppearanceChanges(values),\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({\r\n        queryKey: ['admin/appearance/values'],\r\n      });\r\n      toast(message('Changes saved'));\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction saveAppearanceChanges(\r\n  changes: Partial<AppearanceValues>,\r\n): Promise<Response> {\r\n  return apiClient.post(`admin/appearance`, {changes}).then(r => r.data);\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {AppearanceDefaults, AppearanceValues} from '../appearance-store';\r\n\r\nexport interface FetchAppearanceValuesResponse extends BackendResponse {\r\n  values: AppearanceValues;\r\n  defaults: AppearanceDefaults;\r\n}\r\n\r\nexport function useAppearanceValues() {\r\n  return useQuery({\r\n    queryKey: ['admin/appearance/values'],\r\n    queryFn: () => fetchAppearanceValues(),\r\n    staleTime: Infinity,\r\n  });\r\n}\r\n\r\nfunction fetchAppearanceValues(): Promise<FetchAppearanceValuesResponse> {\r\n  return apiClient\r\n    .get('admin/appearance/values')\r\n    .then(response => response.data);\r\n}\r\n","import {Link, useLocation} from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport {Fragment, useEffect, useState} from 'react';\r\nimport {IconButton} from '../../ui/buttons/icon-button';\r\nimport {KeyboardArrowLeftIcon} from '../../icons/material/KeyboardArrowLeft';\r\nimport {KeyboardArrowRightIcon} from '../../icons/material/KeyboardArrowRight';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {MixedText} from '../../i18n/mixed-text';\r\nimport {useFormContext} from 'react-hook-form';\r\nimport {appearanceState, AppearanceValues} from './appearance-store';\r\nimport {AppearanceEditorBreadcrumbItem} from './types/appearance-editor-section';\r\nimport {message} from '../../i18n/message';\r\n\r\nexport function SectionHeader() {\r\n  const {pathname} = useLocation();\r\n  const {getValues} = useFormContext<AppearanceValues>();\r\n  const [breadcrumb, setBreadcrumb] = useState<\r\n    AppearanceEditorBreadcrumbItem[] | null\r\n  >(null);\r\n\r\n  useEffect(() => {\r\n    const [, , sectionName] = pathname.split('/').filter(p => !!p);\r\n    if (sectionName) {\r\n      const section = appearanceState().config?.sections[sectionName];\r\n      if (section) {\r\n        setBreadcrumb([\r\n          {\r\n            label: message('Appearance'),\r\n            location: '',\r\n          },\r\n          ...section.buildBreadcrumb(pathname, getValues()),\r\n        ]);\r\n        // bail, so breadcrumb is not cleared below\r\n        return;\r\n      }\r\n    }\r\n    setBreadcrumb(null);\r\n  }, [pathname, getValues]);\r\n\r\n  // not need to show section header if already at root\r\n  if (!breadcrumb || breadcrumb.length < 2) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex items-center border-b h-60 flex-shrink-0\">\r\n      <IconButton\r\n        iconSize=\"md\"\r\n        radius=\"rounded-none\"\r\n        className=\"text-muted h-full w-50 flex-shrink-0\"\r\n        elementType={Link}\r\n        to={`/admin/appearance/${breadcrumb[breadcrumb.length - 2].location}`}\r\n      >\r\n        <KeyboardArrowLeftIcon />\r\n      </IconButton>\r\n      <div className=\"border-l p-10 min-w-0\">\r\n        <div className=\"text-xs text-muted\">\r\n          <Trans message=\"Customizing\" />\r\n        </div>\r\n        <div className=\"flex items-center gap-4 text-sm mt-2\">\r\n          {breadcrumb.map((item, index) => {\r\n            const isLast = breadcrumb.length - 1 === index;\r\n            const isFirst = index === 0;\r\n            const label = <MixedText value={item.label} />;\r\n\r\n            if (isFirst) {\r\n              return null;\r\n            }\r\n\r\n            return (\r\n              <Fragment key={index}>\r\n                <div\r\n                  className={clsx(\r\n                    'whitespace-nowrap overflow-hidden overflow-ellipsis min-w-0',\r\n                    isLast && 'text-primary',\r\n                    // don't overflow ellipses last item\r\n                    isLast ? 'flex-shrink-0' : 'flex-auto'\r\n                  )}\r\n                >\r\n                  {label}\r\n                </div>\r\n                {!isLast && (\r\n                  <KeyboardArrowRightIcon className=\"icon-sm text-muted flex-shrink-0\" />\r\n                )}\r\n              </Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {Link, Navigate, Outlet, useLocation} from 'react-router-dom';\r\nimport {useEffect, useRef} from 'react';\r\nimport {IconButton} from '../../ui/buttons/icon-button';\r\nimport {CloseIcon} from '../../icons/material/Close';\r\nimport {Button} from '../../ui/buttons/button';\r\nimport {appearanceState, AppearanceValues} from './appearance-store';\r\nimport {useSaveAppearanceChanges} from './requests/save-appearance-changes';\r\nimport {useAppearanceValues} from './requests/appearance-values';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {useForm, useFormContext} from 'react-hook-form';\r\nimport {Form} from '../../ui/forms/form';\r\nimport {ProgressCircle} from '../../ui/progress/progress-circle';\r\nimport {SectionHeader} from './section-header';\r\nimport {FileUploadProvider} from '../../uploads/uploader/file-upload-provider';\r\nimport {useAppearanceEditorMode} from './commands/use-appearance-editor-mode';\r\nimport {StaticPageTitle} from '../../seo/static-page-title';\r\nimport {useSettings} from '../../core/settings/use-settings';\r\n\r\nexport function AppearanceLayout() {\r\n  const {isAppearanceEditorActive} = useAppearanceEditorMode();\r\n  const {data} = useAppearanceValues();\r\n  const {base_url} = useSettings();\r\n  const iframeRef = useRef<HTMLIFrameElement>(null);\r\n  const {pathname} = useLocation();\r\n\r\n  useEffect(() => {\r\n    // only set defaults snapshot once on route init\r\n    if (data?.defaults && !appearanceState().defaults) {\r\n      appearanceState().setDefaults(data.defaults);\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    if (iframeRef.current) {\r\n      appearanceState().setIframeWindow(iframeRef.current.contentWindow!);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const sectionName = pathname.split('/')[3];\r\n    appearanceState().preview.navigate(sectionName);\r\n  }, [pathname]);\r\n\r\n  // make sure appearance editor iframe can't be nested\r\n  if (isAppearanceEditorActive) {\r\n    return <Navigate to=\"/admin\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"h-screen items-center md:flex\">\r\n      <StaticPageTitle>\r\n        <Trans message=\"Appearance\" />\r\n      </StaticPageTitle>\r\n      <Sidebar values={data?.values} />\r\n      <div className=\"relative h-full flex-auto\">\r\n        <iframe\r\n          ref={iframeRef}\r\n          className=\"h-full w-full max-md:hidden\"\r\n          src={`${base_url}?appearanceEditor=true`}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface SidebarProps {\r\n  values: AppearanceValues | undefined;\r\n}\r\nfunction Sidebar({values}: SidebarProps) {\r\n  const spinner = (\r\n    <div className=\"flex h-full flex-auto items-center justify-center\">\r\n      <ProgressCircle isIndeterminate aria-label=\"Loading editor\" />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"relative z-10 h-full w-full border-r bg shadow-lg @container md:w-320\">\r\n      {values ? <AppearanceForm defaultValues={values} /> : spinner}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface AppearanceFormProps {\r\n  defaultValues: AppearanceValues;\r\n}\r\n\r\nfunction AppearanceForm({defaultValues}: AppearanceFormProps) {\r\n  const form = useForm<AppearanceValues>({defaultValues});\r\n  const {watch, reset} = form;\r\n  const saveChanges = useSaveAppearanceChanges();\r\n\r\n  useEffect(() => {\r\n    const subscription = watch(value => {\r\n      appearanceState().preview.setValues(value as AppearanceValues);\r\n    });\r\n    return () => subscription.unsubscribe();\r\n  }, [watch]);\r\n\r\n  return (\r\n    <Form\r\n      className=\"flex h-full flex-col\"\r\n      form={form}\r\n      onSubmit={values => {\r\n        saveChanges.mutate(values, {\r\n          onSuccess: () => reset(values),\r\n        });\r\n      }}\r\n    >\r\n      <Header isLoading={saveChanges.isPending} />\r\n      <SectionHeader />\r\n      <div className=\"flex-auto overflow-y-auto px-14 py-20\">\r\n        <FileUploadProvider>\r\n          <Outlet />\r\n        </FileUploadProvider>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n\r\ninterface HeaderProps {\r\n  isLoading: boolean;\r\n}\r\nfunction Header({isLoading}: HeaderProps) {\r\n  const {\r\n    formState: {dirtyFields},\r\n  } = useFormContext<AppearanceValues>();\r\n  const isDirty = Object.keys(dirtyFields).length;\r\n  return (\r\n    <div className=\"flex h-50 flex-shrink-0 items-center border-b pr-10\">\r\n      <IconButton\r\n        border=\"border-r\"\r\n        className=\"text-muted\"\r\n        elementType={Link}\r\n        to=\"..\"\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n      <div className=\"pl-10\">\r\n        <Trans message=\"Appearance editor\" />\r\n      </div>\r\n      <Button\r\n        variant=\"flat\"\r\n        color=\"primary\"\r\n        className=\"ml-auto block\"\r\n        disabled={!isDirty || isLoading}\r\n        type=\"submit\"\r\n      >\r\n        {isDirty ? <Trans message=\"Save\" /> : <Trans message=\"Saved\" />}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import {Link, useNavigate} from 'react-router-dom';\r\nimport {AppearanceValues} from '../../appearance-store';\r\nimport {Button} from '../../../../ui/buttons/button';\r\nimport {AddIcon} from '../../../../icons/material/Add';\r\nimport {Trans} from '../../../../i18n/trans';\r\nimport {useFieldArray} from 'react-hook-form';\r\nimport {AppearanceButton} from '../../appearance-button';\r\nimport {nanoid} from 'nanoid';\r\nimport {useTrans} from '../../../../i18n/use-trans';\r\nimport {message} from '../../../../i18n/message';\r\nimport {Fragment} from 'react';\r\n\r\nexport function MenuList() {\r\n  const navigate = useNavigate();\r\n  const {trans} = useTrans();\r\n  const {fields, append} = useFieldArray<\r\n    AppearanceValues,\r\n    'settings.menus',\r\n    'key'\r\n  >({\r\n    name: 'settings.menus',\r\n    keyName: 'key',\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        {fields.map((field, index) => (\r\n          <AppearanceButton to={`${index}`} key={field.key} elementType={Link}>\r\n            {field.name}\r\n          </AppearanceButton>\r\n        ))}\r\n      </div>\r\n      <div className=\"text-right\">\r\n        <Button\r\n          variant=\"outline\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          size=\"xs\"\r\n          onClick={() => {\r\n            const id = nanoid(10);\r\n            append({\r\n              name: trans(\r\n                message('New menu :number', {\r\n                  values: {number: fields.length + 1},\r\n                })\r\n              ),\r\n              id,\r\n              positions: [],\r\n              items: [],\r\n            });\r\n            navigate(`${fields.length}`);\r\n          }}\r\n        >\r\n          <Trans message=\"Create menu\" />\r\n        </Button>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport {Accordion, AccordionItem} from '@common/ui/accordion/accordion';\r\nimport {Form} from '@common/ui/forms/form';\r\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {MenuItemConfig} from '@common/core/settings/settings';\r\nimport {AddIcon} from '@common/icons/material/Add';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {useAvailableRoutes} from '@common/admin/appearance/sections/menus/hooks/available-routes';\r\nimport {ucFirst} from '@common/utils/string/uc-first';\r\nimport {List, ListItem} from '@common/ui/list/list';\r\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\r\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {useValueLists} from '@common/http/value-lists';\r\nimport {ReactNode} from 'react';\r\nimport {nanoid} from 'nanoid';\r\n\r\ninterface AddMenuItemDialogProps {\r\n  title?: ReactNode;\r\n}\r\nexport function AddMenuItemDialog({\r\n  title = <Trans message=\"Add menu item\" />,\r\n}: AddMenuItemDialogProps) {\r\n  const {data} = useValueLists(['menuItemCategories']);\r\n  const categories = data?.menuItemCategories || [];\r\n  const routeItems = useAvailableRoutes();\r\n\r\n  return (\r\n    <Dialog size=\"sm\">\r\n      <DialogHeader>{title}</DialogHeader>\r\n      <DialogBody>\r\n        <Accordion variant=\"outline\">\r\n          <AccordionItem\r\n            label={<Trans message=\"Link\" />}\r\n            bodyClassName=\"max-h-240 overflow-y-auto\"\r\n          >\r\n            <AddCustomLink />\r\n          </AccordionItem>\r\n          <AccordionItem\r\n            label={<Trans message=\"Route\" />}\r\n            bodyClassName=\"max-h-240 overflow-y-auto\"\r\n          >\r\n            <AddRoute items={routeItems} />\r\n          </AccordionItem>\r\n          {categories.map(category => (\r\n            <AccordionItem\r\n              key={category.name}\r\n              label={<Trans message={category.name} />}\r\n            >\r\n              <AddRoute items={category.items} />\r\n            </AccordionItem>\r\n          ))}\r\n        </Accordion>\r\n      </DialogBody>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nfunction AddCustomLink() {\r\n  const form = useForm<MenuItemConfig>({\r\n    defaultValues: {\r\n      id: nanoid(6),\r\n      type: 'link',\r\n      target: '_blank',\r\n    },\r\n  });\r\n  const {close} = useDialogContext();\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      onSubmit={value => {\r\n        close(value);\r\n      }}\r\n    >\r\n      <FormTextField\r\n        required\r\n        name=\"label\"\r\n        label={<Trans message=\"Label\" />}\r\n        className=\"mb-20\"\r\n      />\r\n      <FormTextField\r\n        required\r\n        type=\"url\"\r\n        name=\"action\"\r\n        placeholder=\"https://\"\r\n        label={<Trans message=\"Url\" />}\r\n        className=\"mb-20\"\r\n      />\r\n      <div className=\"text-right\">\r\n        <Button type=\"submit\" variant=\"flat\" color=\"primary\" size=\"xs\">\r\n          <Trans message=\"Add to menu\" />\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n\r\ninterface AddRouteProps {\r\n  items: Partial<MenuItemConfig>[];\r\n}\r\nfunction AddRoute({items}: AddRouteProps) {\r\n  const {close} = useDialogContext();\r\n\r\n  return (\r\n    <List>\r\n      {items.map(item => {\r\n        return (\r\n          <ListItem\r\n            key={item.id}\r\n            startIcon={<AddIcon size=\"sm\" />}\r\n            onSelected={() => {\r\n              if (item.label) {\r\n                const last = item.label.split('/').pop();\r\n                item.label = last ? ucFirst(last) : item.label;\r\n                item.id = nanoid(6);\r\n              }\r\n              close(item);\r\n            }}\r\n          >\r\n            {item.label}\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const DragIndicatorIcon = createSvgIcon(\r\n  <path d=\"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\r\n, 'DragIndicatorOutlined');\r\n","export default \"__VITE_ASSET__abcb02f6__\"","import {\r\n  DropPosition,\r\n  SortSession,\r\n} from '@common/ui/interactions/dnd/sortable/use-sortable';\r\nimport {SortableStrategy} from '@common/ui/interactions/dnd/sortable/sortable-strategy';\r\nimport {droppables} from '@common/ui/interactions/dnd/drag-state';\r\n\r\nexport const sortableLineStrategy: SortableStrategy = {\r\n  onDragStart: () => {},\r\n  onDragEnter: () => {},\r\n  onDragOver: ({e, ref, item, sortSession, onDropPositionChange}) => {\r\n    const previousPosition = sortSession.dropPosition;\r\n    let newPosition: DropPosition = null;\r\n\r\n    const rect = droppables.get(item)?.rect;\r\n    if (rect) {\r\n      const midY = rect.top + rect.height / 2;\r\n      if (e.clientY <= midY) {\r\n        newPosition = 'before';\r\n      } else if (e.clientY >= midY) {\r\n        newPosition = 'after';\r\n      }\r\n    }\r\n\r\n    if (newPosition !== previousPosition) {\r\n      const overIndex = sortSession.sortables.indexOf(item);\r\n      sortSession.dropPosition = newPosition;\r\n      onDropPositionChange?.(sortSession.dropPosition);\r\n\r\n      clearLinePreview(sortSession);\r\n      if (ref.current) {\r\n        if (sortSession.dropPosition === 'after') {\r\n          addLinePreview(ref.current, 'bottom', sortSession);\r\n        } else {\r\n          // if it's the first row, add preview to the top border, as there's no previous element\r\n          if (overIndex === 0) {\r\n            addLinePreview(ref.current, 'top', sortSession);\r\n            // otherwise add preview to the bottom border of the previous row\r\n          } else {\r\n            const droppableId = sortSession.sortables[overIndex - 1];\r\n            const droppable = droppables.get(droppableId);\r\n            if (droppable?.ref.current) {\r\n              addLinePreview(droppable.ref.current, 'bottom', sortSession);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      const itemIndex = sortSession.sortables.indexOf(item);\r\n\r\n      // don't move item at all if hovering over itself\r\n      if (sortSession.activeIndex === itemIndex) {\r\n        sortSession.finalIndex = sortSession.activeIndex;\r\n        return;\r\n      }\r\n\r\n      // adjust final drop index based on whether we're dropping drag target after or before it's original index\r\n      // this is needed, so we get the same index if target is dropped after current item or before next item\r\n      const dragDirection =\r\n        overIndex > sortSession.activeIndex ? 'after' : 'before';\r\n      if (dragDirection === 'after') {\r\n        sortSession.finalIndex =\r\n          sortSession.dropPosition === 'before' ? itemIndex - 1 : itemIndex;\r\n      } else {\r\n        sortSession.finalIndex =\r\n          sortSession.dropPosition === 'after' ? itemIndex + 1 : itemIndex;\r\n      }\r\n    }\r\n  },\r\n  onDragEnd: sortSession => {\r\n    clearLinePreview(sortSession);\r\n  },\r\n};\r\n\r\nfunction clearLinePreview(sortSession: SortSession) {\r\n  if (sortSession?.linePreviewEl) {\r\n    sortSession.linePreviewEl.style.borderBottomColor = '';\r\n    sortSession.linePreviewEl.style.borderTopColor = '';\r\n    sortSession.linePreviewEl = undefined;\r\n  }\r\n}\r\n\r\nfunction addLinePreview(\r\n  el: HTMLElement,\r\n  side: 'top' | 'bottom',\r\n  sortSession: SortSession,\r\n) {\r\n  const color = 'rgb(var(--be-primary))';\r\n  if (side === 'top') {\r\n    el.style.borderTopColor = color;\r\n  } else {\r\n    el.style.borderBottomColor = color;\r\n  }\r\n  if (sortSession) {\r\n    sortSession.linePreviewEl = el;\r\n  }\r\n}\r\n","import {clamp} from '../number/clamp';\r\n\r\nexport function moveItemInArray<T = any>(\r\n  array: T[],\r\n  fromIndex: number,\r\n  toIndex: number\r\n): T[] {\r\n  const from = clamp(fromIndex, 0, array.length - 1);\r\n  const to = clamp(toIndex, 0, array.length - 1);\r\n\r\n  if (from === to) {\r\n    return array;\r\n  }\r\n\r\n  const target = array[from];\r\n  const delta = to < from ? -1 : 1;\r\n\r\n  for (let i = from; i !== to; i += delta) {\r\n    array[i] = array[i + delta];\r\n  }\r\n\r\n  array[to] = target;\r\n\r\n  return array;\r\n}\r\n","export function moveItemInNewArray<T>(\r\n  array: T[],\r\n  from: number,\r\n  to: number\r\n): T[] {\r\n  const newArray = array.slice();\r\n  newArray.splice(\r\n    to < 0 ? newArray.length + to : to,\r\n    0,\r\n    newArray.splice(from, 1)[0]\r\n  );\r\n\r\n  return newArray;\r\n}\r\n","import {moveItemInArray} from '@common/utils/array/move-item-in-array';\r\nimport {droppables} from '@common/ui/interactions/dnd/drag-state';\r\nimport {moveItemInNewArray} from '@common/utils/array/move-item-in-new-array';\r\nimport type {SortSession} from '@common/ui/interactions/dnd/sortable/use-sortable';\r\nimport type {SortableStrategy} from '@common/ui/interactions/dnd/sortable/sortable-strategy';\r\n\r\nconst transition = 'transform 0.2s cubic-bezier(0.2, 0, 0, 1)';\r\n\r\nexport const sortableTransformStrategy: SortableStrategy = {\r\n  onDragStart: sortSession => {\r\n    sortSession.sortables.forEach((sortable, index) => {\r\n      const droppable = droppables.get(sortable);\r\n      if (!droppable?.ref.current) return;\r\n\r\n      droppable.ref.current.style.transition = transition;\r\n\r\n      if (sortSession?.activeIndex === index) {\r\n        droppable.ref.current.style.opacity = '0.4';\r\n      }\r\n    });\r\n  },\r\n  onDragEnter: (\r\n    sortSession: SortSession,\r\n    overIndex: number,\r\n    currentIndex: number,\r\n  ) => {\r\n    moveItemInArray(sortSession.sortables, currentIndex, overIndex);\r\n    const rects = sortSession.sortables.map(s => droppables.get(s)?.rect);\r\n\r\n    sortSession.sortables.forEach((sortable, index) => {\r\n      if (!sortSession) return;\r\n\r\n      const newRects = moveItemInNewArray(\r\n        rects,\r\n        overIndex,\r\n        sortSession.activeIndex,\r\n      );\r\n      const oldRect = rects[index];\r\n      const newRect = newRects[index];\r\n      const sortableTarget = droppables.get(sortable);\r\n\r\n      if (sortableTarget?.ref.current && newRect && oldRect) {\r\n        const x = newRect.left - oldRect.left;\r\n        const y = newRect.top - oldRect.top;\r\n        sortableTarget.ref.current.style.transform = `translate3d(${x}px, ${y}px, 0)`;\r\n      }\r\n    });\r\n\r\n    sortSession.finalIndex = overIndex;\r\n  },\r\n  onDragOver: () => {},\r\n  onDragEnd: sortSession => {\r\n    // clear any styles and transforms applied to sortables during sorting\r\n    sortSession.sortables.forEach(sortable => {\r\n      const droppable = droppables.get(sortable);\r\n      if (droppable?.ref.current) {\r\n        droppable.ref.current.style.transform = '';\r\n        droppable.ref.current.style.transition = '';\r\n        droppable.ref.current.style.opacity = '';\r\n        droppable.ref.current.style.zIndex = '';\r\n      }\r\n    });\r\n  },\r\n};\r\n","import {moveItemInArray} from '@common/utils/array/move-item-in-array';\r\nimport {droppables} from '@common/ui/interactions/dnd/drag-state';\r\nimport {SortableStrategy} from '@common/ui/interactions/dnd/sortable/sortable-strategy';\r\n\r\nexport const sortableMoveNodeStrategy: SortableStrategy = {\r\n  onDragStart: () => {},\r\n  onDragOver: () => {},\r\n  onDragEnter: (sortSession, overIndex: number, currentIndex: number) => {\r\n    const node = droppables.get(sortSession.sortables[currentIndex])?.ref\r\n      .current;\r\n    if (node) {\r\n      moveNode(node, currentIndex, overIndex);\r\n      moveItemInArray(sortSession.sortables, currentIndex, overIndex);\r\n      sortSession.finalIndex = overIndex;\r\n    }\r\n  },\r\n  onDragEnd: () => {},\r\n};\r\n\r\nfunction moveNode(el: HTMLElement, currentIndex: number, newIndex: number) {\r\n  const parentEl = el.parentElement!;\r\n  if (newIndex < 0) {\r\n    parentEl.prepend(el);\r\n  } else {\r\n    // if parent already contains this node, and we're changing\r\n    // node's index within parent, need to adjust index by one\r\n    if (currentIndex > -1 && currentIndex <= newIndex) {\r\n      newIndex++;\r\n    }\r\n    const ref = parentEl.children.item(newIndex);\r\n    if (ref) {\r\n      ref.before(el);\r\n    } else {\r\n      parentEl.append(el);\r\n    }\r\n  }\r\n}\r\n","import {DraggableId, DragPreviewRenderer, useDraggable} from '../use-draggable';\r\nimport {useDroppable} from '../use-droppable';\r\nimport {RefObject, useEffect} from 'react';\r\nimport {getScrollParent, mergeProps} from '@react-aria/utils';\r\nimport {droppables} from '../drag-state';\r\nimport {updateRects} from '@common/ui/interactions/dnd/update-rects';\r\nimport {sortableLineStrategy} from '@common/ui/interactions/dnd/sortable/sortable-line-strategy';\r\nimport {sortableTransformStrategy} from '@common/ui/interactions/dnd/sortable/sortable-transform-strategy';\r\nimport {sortableMoveNodeStrategy} from '@common/ui/interactions/dnd/sortable/sortable-move-node-strategy';\r\nimport {SortableStrategy} from '@common/ui/interactions/dnd/sortable/sortable-strategy';\r\n\r\nexport interface SortSession {\r\n  // items in this list will be moved when user is sorting\r\n  sortables: DraggableId[];\r\n\r\n  // sortable user started dragging to start this session\r\n  activeSortable: DraggableId;\r\n  activeIndex: number;\r\n\r\n  // final index sortable was dropped in and should be moved to\r\n  finalIndex: number;\r\n\r\n  // drop position for displaying line preview\r\n  dropPosition: DropPosition;\r\n  // element that currently has a line preview at the top or bottom\r\n  linePreviewEl?: HTMLElement;\r\n  scrollParent?: Element;\r\n  scrollListener: () => void;\r\n  ref: RefObject<HTMLElement>;\r\n}\r\n\r\nlet sortSession: null | SortSession = null;\r\n\r\nexport type DropPosition = 'before' | 'after' | null;\r\n\r\ntype StrategyName = 'line' | 'liveSort' | 'moveNode';\r\n\r\nconst strategies: Record<StrategyName, SortableStrategy> = {\r\n  line: sortableLineStrategy,\r\n  liveSort: sortableTransformStrategy,\r\n  moveNode: sortableMoveNodeStrategy,\r\n};\r\n\r\nexport interface UseSortableProps {\r\n  item: DraggableId;\r\n  items: DraggableId[];\r\n  onSortStart?: () => void;\r\n  onSortEnd?: (oldIndex: number, newIndex: number) => void;\r\n  onDragEnd?: () => void;\r\n  onDropPositionChange?: (dropPosition: DropPosition) => void;\r\n  ref: RefObject<HTMLElement>;\r\n  type: string;\r\n  preview?: RefObject<DragPreviewRenderer>;\r\n  strategy?: StrategyName;\r\n  disabled?: boolean;\r\n}\r\nexport function useSortable({\r\n  item,\r\n  items,\r\n  type,\r\n  ref,\r\n  onSortEnd,\r\n  onSortStart,\r\n  onDragEnd,\r\n  preview,\r\n  disabled,\r\n  onDropPositionChange,\r\n  strategy = 'liveSort',\r\n}: UseSortableProps) {\r\n  // todo: issue with sorting after scrolling menu editor item list\r\n\r\n  // update sortables and active index, in case we lazy load more items while sorting\r\n  useEffect(() => {\r\n    if (sortSession && sortSession.sortables.length !== items.length) {\r\n      sortSession.sortables = [...items];\r\n      sortSession.activeIndex = items.indexOf(item);\r\n    }\r\n  }, [items, item]);\r\n\r\n  const {draggableProps, dragHandleRef} = useDraggable({\r\n    id: item,\r\n    ref,\r\n    type,\r\n    preview,\r\n    disabled,\r\n    onDragStart: () => {\r\n      sortSession = {\r\n        sortables: [...items],\r\n        activeSortable: item,\r\n        activeIndex: items.indexOf(item),\r\n        finalIndex: items.indexOf(item),\r\n        dropPosition: null,\r\n        ref,\r\n        scrollParent: ref.current ? getScrollParent(ref.current) : undefined,\r\n        scrollListener: () => {\r\n          updateRects(droppables);\r\n        },\r\n      };\r\n      strategies[strategy].onDragStart(sortSession);\r\n\r\n      onSortStart?.();\r\n      sortSession.scrollParent?.addEventListener(\r\n        'scroll',\r\n        sortSession.scrollListener,\r\n      );\r\n    },\r\n    onDragEnd: () => {\r\n      if (!sortSession) return;\r\n\r\n      sortSession.dropPosition = null;\r\n      onDropPositionChange?.(sortSession.dropPosition);\r\n      if (sortSession.activeIndex !== sortSession.finalIndex) {\r\n        onSortEnd?.(sortSession.activeIndex, sortSession.finalIndex);\r\n      }\r\n      sortSession.scrollParent?.removeEventListener(\r\n        'scroll',\r\n        sortSession.scrollListener,\r\n      );\r\n      strategies[strategy].onDragEnd(sortSession);\r\n      // call \"onDragEnd\" after \"onSortEnd\", so listener has a chance to use sort session data\r\n      onDragEnd?.();\r\n      sortSession = null;\r\n    },\r\n    getData: () => {},\r\n  });\r\n\r\n  const {droppableProps} = useDroppable({\r\n    id: item,\r\n    ref,\r\n    types: [type],\r\n    disabled,\r\n    allowDragEventsFromItself: true,\r\n    onDragOver: (target, e) => {\r\n      if (!sortSession) return;\r\n      strategies[strategy].onDragOver({\r\n        e,\r\n        ref,\r\n        item,\r\n        sortSession,\r\n        onDropPositionChange,\r\n      });\r\n    },\r\n    onDragEnter: () => {\r\n      if (!sortSession) return;\r\n      const overIndex = sortSession.sortables.indexOf(item);\r\n      const oldIndex = sortSession.sortables.indexOf(\r\n        sortSession.activeSortable,\r\n      );\r\n      strategies[strategy].onDragEnter(sortSession, overIndex, oldIndex);\r\n    },\r\n    onDragLeave: () => {\r\n      if (!sortSession) return;\r\n      sortSession.dropPosition = null;\r\n      onDropPositionChange?.(sortSession.dropPosition);\r\n    },\r\n  });\r\n\r\n  return {\r\n    sortableProps: {...mergeProps(draggableProps, droppableProps)},\r\n    dragHandleRef,\r\n  };\r\n}\r\n","import {\r\n  FieldArrayWithId,\r\n  useFieldArray,\r\n  UseFieldArrayReturn,\r\n  useFormContext,\r\n} from 'react-hook-form';\r\nimport {Fragment, useEffect, useMemo, useRef} from 'react';\r\nimport {Link, useNavigate, useParams} from 'react-router-dom';\r\nimport {MenuSectionConfig} from '../../types/appearance-editor-config';\r\nimport {MenuItemConfig} from '@common/core/settings/settings';\r\nimport {\r\n  appearanceState,\r\n  AppearanceValues,\r\n  useAppearanceStore,\r\n} from '../../appearance-store';\r\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {AddMenuItemDialog} from '@common/admin/appearance/sections/menus/add-menu-item-dialog';\r\nimport {AppearanceButton} from '@common/admin/appearance/appearance-button';\r\nimport {AddIcon} from '@common/icons/material/Add';\r\nimport {DragIndicatorIcon} from '@common/icons/material/DragIndicator';\r\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\r\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\r\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\r\nimport {DeleteIcon} from '@common/icons/material/Delete';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {Option} from '../../../../ui/forms/select/select';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport dropdownMenu from './dropdown-menu.svg';\r\nimport {FormChipField} from '@common/ui/forms/input-field/chip-field/form-chip-field';\r\nimport {\r\n  useSortable,\r\n  UseSortableProps,\r\n} from '@common/ui/interactions/dnd/sortable/use-sortable';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {createSvgIconFromTree} from '@common/icons/create-svg-icon';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\n\r\nexport function MenuEditor() {\r\n  const {menuIndex} = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const {getValues} = useFormContext<AppearanceValues>();\r\n  const formPath = `settings.menus.${menuIndex!}` as 'settings.menus.0';\r\n  const menu = getValues(formPath);\r\n\r\n  useEffect(() => {\r\n    // go to menu list, if menu can't be found\r\n    if (!menu) {\r\n      navigate('/admin/appearance/menus');\r\n    } else {\r\n      appearanceState().preview.setHighlight(`[data-menu-id=\"${menu.id}\"]`);\r\n    }\r\n  }, [navigate, menu]);\r\n\r\n  if (!menu) {\r\n    return null;\r\n  }\r\n\r\n  return <MenuEditorSection formPath={formPath} />;\r\n}\r\n\r\ninterface MenuEditorFormProps {\r\n  formPath: 'settings.menus.0';\r\n}\r\nfunction MenuEditorSection({formPath}: MenuEditorFormProps) {\r\n  const {\r\n    site: {has_mobile_app},\r\n  } = useSettings();\r\n  const menuSectionConfig = useAppearanceStore(\r\n    s => s.config?.sections.menus.config,\r\n  ) as MenuSectionConfig;\r\n\r\n  const menuPositions = useMemo(() => {\r\n    const positions = [...menuSectionConfig?.positions];\r\n    if (has_mobile_app) {\r\n      positions.push('mobile-app-about');\r\n    }\r\n    return positions.map(position => ({\r\n      key: position,\r\n      name: position.replaceAll('-', ' '),\r\n    }));\r\n  }, [menuSectionConfig, has_mobile_app]);\r\n\r\n  const fieldArray = useFieldArray<\r\n    AppearanceValues,\r\n    `settings.menus.0.items`,\r\n    'key'\r\n  >({\r\n    name: `${formPath}.items`,\r\n    keyName: 'key',\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mb-30 border-b pb-30\">\r\n        <FormTextField\r\n          name={`${formPath}.name`}\r\n          label={<Trans message=\"Menu name\" />}\r\n          className=\"mb-20\"\r\n          autoFocus\r\n        />\r\n        <FormChipField\r\n          chipSize=\"sm\"\r\n          name={`${formPath}.positions`}\r\n          valueKey=\"id\"\r\n          label={<Trans message=\"Menu positions\" />}\r\n          description={\r\n            <Trans message=\"Where should this menu appear on the site\" />\r\n          }\r\n        >\r\n          {menuPositions.map(item => (\r\n            <Option key={item.key} value={item.key} capitalizeFirst>\r\n              {item.name}\r\n            </Option>\r\n          ))}\r\n        </FormChipField>\r\n      </div>\r\n      <MenuItemsManager fieldArray={fieldArray} />\r\n      <div className=\"text-right\">\r\n        <DeleteMenuTrigger />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface ItemListProps {\r\n  fieldArray: UseFieldArrayReturn<\r\n    AppearanceValues,\r\n    'settings.menus.0.items',\r\n    'key'\r\n  >;\r\n}\r\nfunction MenuItemsManager({fieldArray: {append, fields, move}}: ItemListProps) {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"flex flex-shrink-0 items-center justify-between gap-16\">\r\n        <Trans message=\"Menu items\" />\r\n        <DialogTrigger\r\n          type=\"popover\"\r\n          placement=\"right\"\r\n          offset={20}\r\n          onClose={(menuItemConfig?: MenuItemConfig) => {\r\n            if (menuItemConfig) {\r\n              append({...menuItemConfig});\r\n              navigate(`items/${fields.length}`);\r\n            }\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"outline\"\r\n            color=\"primary\"\r\n            size=\"xs\"\r\n            startIcon={<AddIcon />}\r\n          >\r\n            <Trans message=\"Add\" />\r\n          </Button>\r\n          <AddMenuItemDialog />\r\n        </DialogTrigger>\r\n      </div>\r\n      <div className=\"mt-20 flex-shrink-0\">\r\n        {fields.map((item, index) => (\r\n          <MenuListItem\r\n            key={item.key}\r\n            item={item}\r\n            items={fields}\r\n            index={index}\r\n            onSortEnd={(oldIndex, newIndex) => {\r\n              move(oldIndex, newIndex);\r\n            }}\r\n          />\r\n        ))}\r\n        {!fields.length ? (\r\n          <IllustratedMessage\r\n            size=\"xs\"\r\n            className=\"my-40\"\r\n            image={<SvgImage src={dropdownMenu} />}\r\n            title={<Trans message=\"No menu items yet\" />}\r\n            description={\r\n              <Trans message=\"Click “add“ button to start adding links, pages, routes and other items to this menu. \" />\r\n            }\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction DeleteMenuTrigger() {\r\n  const navigate = useNavigate();\r\n  const {menuIndex} = useParams();\r\n  const {fields, remove} = useFieldArray<\r\n    AppearanceValues,\r\n    'settings.menus',\r\n    'key'\r\n  >({\r\n    name: 'settings.menus',\r\n    keyName: 'key',\r\n  });\r\n  if (!menuIndex) return null;\r\n  const menu = fields[+menuIndex];\r\n\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={isConfirmed => {\r\n        if (isConfirmed) {\r\n          const index = fields.findIndex(m => m.id === menu.id);\r\n          remove(index);\r\n          navigate('/admin/appearance/menus');\r\n        }\r\n      }}\r\n    >\r\n      <Button\r\n        variant=\"outline\"\r\n        color=\"danger\"\r\n        size=\"xs\"\r\n        startIcon={<DeleteIcon />}\r\n      >\r\n        <Trans message=\"Delete menu\" />\r\n      </Button>\r\n      <ConfirmationDialog\r\n        isDanger\r\n        title={<Trans message=\"Delete menu\" />}\r\n        body={\r\n          <Trans\r\n            message=\"Are you sure you want to delete “:name“?\"\r\n            values={{name: menu.name}}\r\n          />\r\n        }\r\n        confirm={<Trans message=\"Delete\" />}\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\ninterface MenuListItemProps {\r\n  item: MenuItemConfig;\r\n  items: FieldArrayWithId[];\r\n  index: number;\r\n  onSortEnd: UseSortableProps['onSortEnd'];\r\n}\r\nfunction MenuListItem({item, items, index, onSortEnd}: MenuListItemProps) {\r\n  const ref = useRef<HTMLButtonElement>(null);\r\n  const {sortableProps, dragHandleRef} = useSortable({\r\n    item,\r\n    items,\r\n    type: 'menuEditorSortable',\r\n    ref,\r\n    onSortEnd,\r\n    strategy: 'liveSort',\r\n  });\r\n\r\n  const Icon = item.icon && createSvgIconFromTree(item.icon);\r\n  const iconOnlyLabel = (\r\n    <div className=\"flex items-center gap-4 text-xs text-muted\">\r\n      {Icon && <Icon size=\"sm\" />}\r\n      (<Trans message=\"No label...\" />)\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <AppearanceButton\r\n        elementType={Link}\r\n        to={`items/${index}`}\r\n        ref={ref}\r\n        {...sortableProps}\r\n      >\r\n        <div className=\"flex items-center gap-10\">\r\n          <IconButton ref={dragHandleRef} size=\"sm\">\r\n            <DragIndicatorIcon className=\"text-muted hover:cursor-move\" />\r\n          </IconButton>\r\n          <div>{item.label || iconOnlyLabel}</div>\r\n        </div>\r\n      </AppearanceButton>\r\n    </Fragment>\r\n  );\r\n}\r\n","import {useFieldArray, useFormContext} from 'react-hook-form';\r\nimport {Fragment, useEffect} from 'react';\r\nimport {appearanceState, AppearanceValues} from '../../appearance-store';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {DeleteIcon} from '../../../../icons/material/Delete';\r\nimport {ConfirmationDialog} from '../../../../ui/overlays/dialog/confirmation-dialog';\r\nimport {DialogTrigger} from '../../../../ui/overlays/dialog/dialog-trigger';\r\nimport {Trans} from '../../../../i18n/trans';\r\nimport {useNavigate} from '../../../../utils/hooks/use-navigate';\r\nimport {MenuItemForm} from '../../../menus/menu-item-form';\r\nimport {useParams} from 'react-router-dom';\r\nimport {MenuItemConfig} from '../../../../core/settings/settings';\r\n\r\nexport function MenuItemEditor() {\r\n  const {menuIndex, menuItemIndex} = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const {getValues} = useFormContext<AppearanceValues>();\r\n\r\n  const formPath = `settings.menus.${menuIndex}.items.${menuItemIndex}`;\r\n  const item = getValues(formPath as any);\r\n\r\n  // go to menu editor, if menu item can't be found\r\n  useEffect(() => {\r\n    if (!item) {\r\n      //navigate(`../`);\r\n    } else {\r\n      appearanceState().preview.setHighlight(\r\n        `[data-menu-item-id=\"${item.id}\"]`\r\n      );\r\n    }\r\n  }, [navigate, item]);\r\n\r\n  // only render form when menu and item are available to avoid issues with hook form default values\r\n  if (!item || menuItemIndex == null) {\r\n    return null;\r\n  }\r\n\r\n  return <MenuItemEditorSection formPath={formPath} />;\r\n}\r\n\r\ninterface MenuItemEditorSectionProps {\r\n  formPath: string;\r\n}\r\nfunction MenuItemEditorSection({formPath}: MenuItemEditorSectionProps) {\r\n  return (\r\n    <Fragment>\r\n      <MenuItemForm formPathPrefix={formPath} />\r\n      <div className=\"text-right mt-40\">\r\n        <DeleteItemTrigger />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction DeleteItemTrigger() {\r\n  const navigate = useNavigate();\r\n  const {menuIndex, menuItemIndex} = useParams();\r\n  const {fields, remove} = useFieldArray<AppearanceValues>({\r\n    name: `settings.menus.${+menuIndex!}.items`,\r\n  });\r\n\r\n  if (!menuItemIndex) return null;\r\n\r\n  const item = fields[+menuItemIndex] as MenuItemConfig;\r\n\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={isConfirmed => {\r\n        if (isConfirmed) {\r\n          if (menuItemIndex) {\r\n            remove(+menuItemIndex);\r\n            navigate(`/admin/appearance/menus/${menuIndex}`);\r\n          }\r\n        }\r\n      }}\r\n    >\r\n      <Button\r\n        variant=\"outline\"\r\n        color=\"danger\"\r\n        size=\"xs\"\r\n        startIcon={<DeleteIcon />}\r\n      >\r\n        <Trans message=\"Delete this item\" />\r\n      </Button>\r\n      <ConfirmationDialog\r\n        isDanger\r\n        title={<Trans message=\"Delete menu item\" />}\r\n        body={\r\n          <Trans\r\n            message=\"Are you sure you want to delete “:name“?\"\r\n            values={{name: item.label}}\r\n          />\r\n        }\r\n        confirm={<Trans message=\"Delete\" />}\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n","import {appearanceState, useAppearanceStore} from '../appearance-store';\r\nimport {FormImageSelector} from '@common/ui/images/image-selector';\r\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Fragment, ReactNode} from 'react';\r\nimport {Settings} from '../../../core/settings/settings';\r\n\r\nexport function GeneralSection() {\r\n  return (\r\n    <Fragment>\r\n      <BrandingImageSelector\r\n        label={<Trans message=\"Favicon\" />}\r\n        description={\r\n          <Trans message=\"This will generate different size favicons. Image should be at least 512x512 in size.\" />\r\n        }\r\n        type=\"favicon\"\r\n      />\r\n      <BrandingImageSelector\r\n        label={<Trans message=\"Light logo\" />}\r\n        description={<Trans message=\"Will be used on dark backgrounds.\" />}\r\n        type=\"logo_light\"\r\n      />\r\n      <BrandingImageSelector\r\n        label={<Trans message=\"Dark logo\" />}\r\n        description={\r\n          <Trans message=\"Will be used on light backgrounds. Will default to light logo if left empty.\" />\r\n        }\r\n        type=\"logo_dark\"\r\n      />\r\n      <BrandingImageSelector\r\n        label={<Trans message=\"Mobile light logo\" />}\r\n        description={\r\n          <Trans message=\"Will be used on light backgrounds on mobile. Will default to desktop logo if left empty.\" />\r\n        }\r\n        type=\"logo_light_mobile\"\r\n      />\r\n      <BrandingImageSelector\r\n        label={<Trans message=\"Mobile dark logo\" />}\r\n        description={\r\n          <Trans message=\"Will be used on dark backgrounds on mobile. Will default to desktop if left empty.\" />\r\n        }\r\n        type=\"logo_dark_mobile\"\r\n      />\r\n      <SiteNameTextField />\r\n      <SiteDescriptionTextArea />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface ImageSelectorProps {\r\n  label: ReactNode;\r\n  description: ReactNode;\r\n  type: keyof Settings['branding'];\r\n}\r\nfunction BrandingImageSelector({label, description, type}: ImageSelectorProps) {\r\n  const defaultValue = useAppearanceStore(\r\n    s => s.defaults?.settings.branding[type]\r\n  );\r\n  return (\r\n    <FormImageSelector\r\n      name={`settings.branding.${type}`}\r\n      className=\"border-b pb-30 mb-30\"\r\n      label={label}\r\n      description={description}\r\n      diskPrefix=\"branding_media\"\r\n      defaultValue={defaultValue}\r\n      onChange={() => {\r\n        appearanceState().preview.setHighlight('[data-logo=\"navbar\"]');\r\n      }}\r\n    />\r\n  );\r\n}\r\nfunction SiteNameTextField() {\r\n  return (\r\n    <FormTextField\r\n      name=\"appearance.env.app_name\"\r\n      required\r\n      className=\"mt-20\"\r\n      label={<Trans message=\"Site name\" />}\r\n    />\r\n  );\r\n}\r\n\r\nfunction SiteDescriptionTextArea() {\r\n  return (\r\n    <FormTextField\r\n      name=\"settings.branding.site_description\"\r\n      className=\"mt-20\"\r\n      inputElementType=\"textarea\"\r\n      rows={4}\r\n      label={<Trans message=\"Site description\" />}\r\n    />\r\n  );\r\n}\r\n","export function randomNumber(min: number = 1, max: number = 10000) {\r\n  const randomBuffer = new Uint32Array(1);\r\n\r\n  window.crypto.getRandomValues(randomBuffer);\r\n\r\n  const number = randomBuffer[0] / (0xffffffff + 1);\r\n\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(number * (max - min + 1)) + min;\r\n}\r\n","import {NavLink, useNavigate} from 'react-router-dom';\r\nimport {Fragment, useEffect} from 'react';\r\nimport {appearanceState, AppearanceValues} from '../../appearance-store';\r\nimport {AppearanceButton} from '../../appearance-button';\r\nimport {Button} from '../../../../ui/buttons/button';\r\nimport {AddIcon} from '../../../../icons/material/Add';\r\nimport {randomNumber} from '../../../../utils/string/random-number';\r\nimport {Trans} from '../../../../i18n/trans';\r\nimport {useFieldArray} from 'react-hook-form';\r\nimport {useTrans} from '../../../../i18n/use-trans';\r\nimport {message} from '../../../../i18n/message';\r\nimport {useBootstrapData} from '../../../../core/bootstrap-data/bootstrap-data-context';\r\n\r\nexport function ThemeList() {\r\n  const {trans} = useTrans();\r\n  const navigate = useNavigate();\r\n  const {\r\n    data: {themes},\r\n  } = useBootstrapData();\r\n  const {fields, append} = useFieldArray<\r\n    AppearanceValues,\r\n    'appearance.themes.all',\r\n    'key'\r\n  >({\r\n    name: 'appearance.themes.all',\r\n    keyName: 'key',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (themes.selectedThemeId) {\r\n      appearanceState().preview.setActiveTheme(themes.selectedThemeId);\r\n    }\r\n  }, [themes.selectedThemeId]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mb-20\">\r\n        <Button\r\n          size=\"xs\"\r\n          variant=\"outline\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          onClick={() => {\r\n            const lightThemeColors =\r\n              appearanceState().defaults?.appearance.themes.light!;\r\n            append({\r\n              id: randomNumber(),\r\n              name: trans(message('New theme')),\r\n              values: lightThemeColors,\r\n            });\r\n            navigate(`${fields.length + 1}`);\r\n          }}\r\n        >\r\n          <Trans message=\"New theme\" />\r\n        </Button>\r\n      </div>\r\n      {fields.map((field, index) => (\r\n        <AppearanceButton key={field.key} to={`${index}`} elementType={NavLink}>\r\n          {field.name}\r\n        </AppearanceButton>\r\n      ))}\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, {MutableRefObject, ReactNode, Suspense, useState} from 'react';\r\nimport {Dialog} from '../ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '../ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '../i18n/trans';\r\nimport {DialogBody} from '../ui/overlays/dialog/dialog-body';\r\nimport {ProgressCircle} from '../ui/progress/progress-circle';\r\nimport {useDialogContext} from '../ui/overlays/dialog/dialog-context';\r\nimport {DialogFooter} from '../ui/overlays/dialog/dialog-footer';\r\nimport {Button} from '../ui/buttons/button';\r\nimport type ReactAce from 'react-ace';\r\n\r\nconst AceEditor = React.lazy(() => import('./ace-editor'));\r\n\r\ninterface TextEditorSourcecodeDialogProps {\r\n  defaultValue: string;\r\n  mode?: 'css' | 'html' | 'php_laravel_blade';\r\n  title: ReactNode;\r\n  onSave?: (value?: string) => void;\r\n  isSaving?: boolean;\r\n  footerStartAction?: ReactNode;\r\n  beautify?: boolean;\r\n  editorRef?: MutableRefObject<ReactAce | null>;\r\n}\r\nexport function AceDialog({\r\n  defaultValue,\r\n  mode = 'html',\r\n  title,\r\n  onSave,\r\n  isSaving,\r\n  footerStartAction,\r\n  beautify,\r\n  editorRef,\r\n}: TextEditorSourcecodeDialogProps) {\r\n  const [value, setValue] = useState(defaultValue);\r\n  const [isValid, setIsValid] = useState<boolean>(true);\r\n\r\n  return (\r\n    <Dialog size=\"fullscreen\" className=\"h-full w-full\">\r\n      <DialogHeader>{title}</DialogHeader>\r\n      <DialogBody className=\"relative flex-auto\" padding=\"p-0\">\r\n        <Suspense\r\n          fallback={\r\n            <div className=\"flex h-400 w-full items-center justify-center\">\r\n              <ProgressCircle\r\n                aria-label=\"Loading editor...\"\r\n                isIndeterminate\r\n                size=\"md\"\r\n              />\r\n            </div>\r\n          }\r\n        >\r\n          <AceEditor\r\n            beautify={beautify}\r\n            mode={mode}\r\n            onChange={newValue => setValue(newValue)}\r\n            defaultValue={value || ''}\r\n            onIsValidChange={setIsValid}\r\n            editorRef={editorRef}\r\n          />\r\n        </Suspense>\r\n      </DialogBody>\r\n      <Footer\r\n        disabled={!isValid || isSaving}\r\n        value={value}\r\n        onSave={onSave}\r\n        startAction={footerStartAction}\r\n      />\r\n    </Dialog>\r\n  );\r\n}\r\n\r\ninterface FooterProps {\r\n  disabled: boolean | undefined;\r\n  value?: string;\r\n  onSave?: (value?: string) => void;\r\n  startAction?: ReactNode;\r\n}\r\nfunction Footer({disabled, value, onSave, startAction}: FooterProps) {\r\n  const {close} = useDialogContext();\r\n  return (\r\n    <DialogFooter dividerTop startAction={startAction}>\r\n      <Button onClick={() => close()}>\r\n        <Trans message=\"Cancel\" />\r\n      </Button>\r\n      <Button\r\n        disabled={disabled}\r\n        variant=\"flat\"\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          if (onSave) {\r\n            onSave(value);\r\n          } else {\r\n            close(value);\r\n          }\r\n        }}\r\n      >\r\n        <Trans message=\"Save\" />\r\n      </Button>\r\n    </DialogFooter>\r\n  );\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\n\r\nexport function useSeoTags(name: string | string[]) {\r\n  return useQuery({\r\n    queryKey: ['admin', 'seo-tags', name],\r\n    queryFn: () => fetchTags(name),\r\n  });\r\n}\r\n\r\nfunction fetchTags(name: string | string[]) {\r\n  return apiClient\r\n    .get<\r\n      Record<\r\n        string,\r\n        {\r\n          custom: string | null;\r\n          original: string;\r\n        }\r\n      >\r\n    >(`admin/appearance/seo-tags/${name}`)\r\n    .then(response => response.data);\r\n}\r\n","import {useMutation, useQueryClient} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {message} from '@common/i18n/message';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\nexport function useUpdateSeoTags(name: string) {\r\n  const queryClient = useQueryClient();\r\n  return useMutation({\r\n    mutationFn: (payload: {tags: string}) => updateTags(name, payload.tags),\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({\r\n        queryKey: ['admin', 'seo-tags', name],\r\n      });\r\n      toast(message('Updated SEO tags'));\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction updateTags(name: string, tags: string): Promise<Response> {\r\n  return apiClient\r\n    .put(`admin/appearance/seo-tags/${name}`, {tags})\r\n    .then(r => r.data);\r\n}\r\n","import {Fragment, useRef} from 'react';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {AppearanceButton} from '@common/admin/appearance/appearance-button';\r\nimport {AceDialog} from '@common/ace-editor/ace-dialog';\r\nimport mergedAppearanceConfig from '@common/admin/appearance/config/merged-appearance-config';\r\nimport {SeoSettingsSectionConfig} from '@common/admin/appearance/types/appearance-editor-config';\r\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\r\nimport {useSeoTags} from '@common/admin/appearance/sections/seo/use-seo-tags';\r\nimport {useUpdateSeoTags} from '@common/admin/appearance/sections/seo/use-update-seo-tags';\r\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\r\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport type ReactAce from 'react-ace';\r\n\r\nconst pages =\r\n  (\r\n    mergedAppearanceConfig.sections['seo-settings']\r\n      .config as SeoSettingsSectionConfig\r\n  )?.pages || [];\r\n\r\nconst names = pages.map(page => page.key);\r\n\r\nexport function SeoSection() {\r\n  const {isLoading} = useSeoTags(names);\r\n\r\n  if (isLoading) {\r\n    return <FullPageLoader />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {pages.map(page => (\r\n        <TagEditorTrigger key={page.key} label={page.label} name={page.key} />\r\n      ))}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface TagEditorTriggerProps {\r\n  label: MessageDescriptor;\r\n  name: string;\r\n}\r\nfunction TagEditorTrigger({label, name}: TagEditorTriggerProps) {\r\n  const {data, isLoading} = useSeoTags(names);\r\n\r\n  return (\r\n    <DialogTrigger type=\"modal\">\r\n      <AppearanceButton disabled={isLoading}>\r\n        <Trans {...label} />\r\n      </AppearanceButton>\r\n      {data ? <TagsEditorDialog name={name} value={data[name]} /> : null}\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\ninterface TagsEditorDialogProps {\r\n  name: string;\r\n  value: {custom: string | null; original: string};\r\n}\r\nfunction TagsEditorDialog({name, value}: TagsEditorDialogProps) {\r\n  const {close} = useDialogContext();\r\n  const updateTags = useUpdateSeoTags(name);\r\n  const editorRef = useRef<ReactAce | null>(null);\r\n\r\n  const resetButton = (\r\n    <Button\r\n      variant=\"outline\"\r\n      color=\"primary\"\r\n      onClick={() => {\r\n        if (editorRef.current) {\r\n          editorRef.current.editor.setValue(value.original);\r\n        }\r\n      }}\r\n    >\r\n      <Trans message=\"Reset to original\" />\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <AceDialog\r\n      mode=\"php_laravel_blade\"\r\n      title={<Trans message=\"Edit SEO meta tags\" />}\r\n      footerStartAction={resetButton}\r\n      editorRef={editorRef}\r\n      defaultValue={value.custom || value.original}\r\n      isSaving={updateTags.isPending}\r\n      beautify={false}\r\n      onSave={newValue => {\r\n        if (newValue != null) {\r\n          updateTags.mutate(\r\n            {tags: newValue},\r\n            {\r\n              onSuccess: () => close(),\r\n            },\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import {AppearanceButton} from '@common/admin/appearance/appearance-button';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {useFormContext} from 'react-hook-form';\r\nimport {\r\n  appearanceState,\r\n  AppearanceValues,\r\n} from '@common/admin/appearance/appearance-store';\r\nimport {AceDialog} from '@common/ace-editor/ace-dialog';\r\nimport {Fragment} from 'react';\r\n\r\nexport function CustomCodeSection() {\r\n  return (\r\n    <Fragment>\r\n      <CustomCodeDialogTrigger mode=\"css\" />\r\n      <CustomCodeDialogTrigger mode=\"html\" />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface CustomCodeDialogTriggerProps {\r\n  mode: 'html' | 'css';\r\n}\r\nfunction CustomCodeDialogTrigger({mode}: CustomCodeDialogTriggerProps) {\r\n  const {getValues} = useFormContext<AppearanceValues>();\r\n  const {setValue} = useFormContext<AppearanceValues>();\r\n\r\n  const title =\r\n    mode === 'html' ? (\r\n      <Trans message=\"Custom HTML & JavaScript\" />\r\n    ) : (\r\n      <Trans message=\"Custom CSS\" />\r\n    );\r\n\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={newValue => {\r\n        if (newValue != null) {\r\n          setValue(`appearance.custom_code.${mode}`, newValue, {\r\n            shouldDirty: true,\r\n          });\r\n          appearanceState().preview.setCustomCode(mode, newValue);\r\n        }\r\n      }}\r\n    >\r\n      <AppearanceButton>{title}</AppearanceButton>\r\n      <AceDialog\r\n        title={title}\r\n        defaultValue={getValues(`appearance.custom_code.${mode}`) || ''}\r\n        mode={mode}\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n","export default \"__VITE_ASSET__8acde003__\"","import {\r\n  BackendFilter,\r\n  FilterControlType,\r\n  FilterOperator,\r\n} from '../../datatable/filters/backend-filter';\r\nimport {message} from '../../i18n/message';\r\nimport {USER_MODEL} from '../../auth/user';\r\nimport {SiteConfigContextValue} from '@common/core/settings/site-config-context';\r\nimport {\r\n  createdAtFilter,\r\n  updatedAtFilter,\r\n} from '@common/datatable/filters/timestamp-filters';\r\n\r\nexport const CustomPageDatatableFilters = (\r\n  config: SiteConfigContextValue\r\n): BackendFilter[] => {\r\n  const dynamicFilters: BackendFilter[] =\r\n    config.customPages.types.length > 1\r\n      ? [\r\n          {\r\n            control: {\r\n              type: FilterControlType.Select,\r\n              defaultValue: 'default',\r\n              options: config.customPages.types.map(type => ({\r\n                value: type.type,\r\n                label: type.label,\r\n                key: type.type,\r\n              })),\r\n            },\r\n\r\n            key: 'type',\r\n            label: message('Type'),\r\n            description: message('Type of the page'),\r\n            defaultOperator: FilterOperator.eq,\r\n          },\r\n        ]\r\n      : [];\r\n\r\n  return [\r\n    {\r\n      key: 'user_id',\r\n      label: message('User'),\r\n      description: message('User page was created by'),\r\n      defaultOperator: FilterOperator.eq,\r\n      control: {\r\n        type: FilterControlType.SelectModel,\r\n        model: USER_MODEL,\r\n      },\r\n    },\r\n    ...dynamicFilters,\r\n    createdAtFilter({\r\n      description: message('Date page was created'),\r\n    }),\r\n    updatedAtFilter({\r\n      description: message('Date page was last updated'),\r\n    }),\r\n  ];\r\n};\r\n","import {ColumnConfig} from '@common/datatable/column-config';\r\nimport {CustomPage} from '@common/admin/custom-pages/custom-page';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Link} from 'react-router-dom';\r\nimport {LinkStyle} from '@common/ui/buttons/external-link';\r\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\r\nimport {FormattedDate} from '@common/i18n/formatted-date';\r\nimport React from 'react';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {EditIcon} from '@common/icons/material/Edit';\r\n\r\nexport const CustomPageDatatableColumns: ColumnConfig<CustomPage>[] = [\r\n  {\r\n    key: 'slug',\r\n    allowsSorting: true,\r\n    width: 'flex-2 min-w-200',\r\n    visibleInMode: 'all',\r\n    header: () => <Trans message=\"Slug\" />,\r\n    body: page => (\r\n      <Link target=\"_blank\" to={`/pages/${page.slug}`} className={LinkStyle}>\r\n        {page.slug}\r\n      </Link>\r\n    ),\r\n  },\r\n  {\r\n    key: 'user_id',\r\n    allowsSorting: true,\r\n    width: 'flex-2 min-w-140',\r\n    header: () => <Trans message=\"Owner\" />,\r\n    body: page =>\r\n      page.user && (\r\n        <NameWithAvatar\r\n          image={page.user.avatar}\r\n          label={page.user.display_name}\r\n          description={page.user.email}\r\n        />\r\n      ),\r\n  },\r\n  {\r\n    key: 'type',\r\n    maxWidth: 'max-w-100',\r\n    header: () => <Trans message=\"Type\" />,\r\n    body: page => <Trans message={page.type} />,\r\n  },\r\n  {\r\n    key: 'updated_at',\r\n    allowsSorting: true,\r\n    width: 'w-100',\r\n    header: () => <Trans message=\"Last updated\" />,\r\n    body: page => <FormattedDate date={page.updated_at} />,\r\n  },\r\n  {\r\n    key: 'actions',\r\n    header: () => <Trans message=\"Actions\" />,\r\n    hideHeader: true,\r\n    align: 'end',\r\n    width: 'w-84 flex-shrink-0',\r\n    visibleInMode: 'all',\r\n    body: page => (\r\n      <IconButton\r\n        size=\"md\"\r\n        className=\"text-muted\"\r\n        elementType={Link}\r\n        to={`${page.id}/edit`}\r\n      >\r\n        <EditIcon />\r\n      </IconButton>\r\n    ),\r\n  },\r\n];\r\n","import React, {useContext, useMemo} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {DataTablePage} from '../../datatable/page/data-table-page';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\r\nimport articlesSvg from './articles.svg';\r\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\r\nimport {CustomPageDatatableFilters} from './custom-page-datatable-filters';\r\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\r\nimport {CustomPageDatatableColumns} from '@common/admin/custom-pages/custom-page-datatable-columns';\r\nimport {SiteConfigContext} from '@common/core/settings/site-config-context';\r\n\r\nexport function CustomPageDatablePage() {\r\n  const config = useContext(SiteConfigContext);\r\n  const filters = useMemo(() => {\r\n    return CustomPageDatatableFilters(config);\r\n  }, [config]);\r\n\r\n  return (\r\n    <DataTablePage\r\n      endpoint=\"custom-pages\"\r\n      title={<Trans message=\"Custom pages\" />}\r\n      filters={filters}\r\n      columns={CustomPageDatatableColumns}\r\n      queryParams={{with: 'user'}}\r\n      actions={<Actions />}\r\n      selectedActions={<DeleteSelectedItemsAction />}\r\n      emptyStateMessage={\r\n        <DataTableEmptyStateMessage\r\n          image={articlesSvg}\r\n          title={<Trans message=\"No pages have been created yet\" />}\r\n          filteringTitle={<Trans message=\"No matching pages\" />}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction Actions() {\r\n  return (\r\n    <DataTableAddItemButton elementType={Link} to=\"new\">\r\n      <Trans message=\"New page\" />\r\n    </DataTableAddItemButton>\r\n  );\r\n}\r\n","import {message} from '@common/i18n/message';\r\nimport {SettingsNavItem} from '@common/admin/settings/settings-nav-config';\r\n\r\nexport const AppSettingsNavConfig: SettingsNavItem[] = [\r\n  {label: message('Drive'), to: 'drive'},\r\n];\r\n","import {AppSettingsNavConfig} from '@app/admin/settings/app-settings-nav-config';\r\nimport {message} from '../../i18n/message';\r\nimport {MessageDescriptor} from '../../i18n/message-descriptor';\r\nimport {To} from 'react-router-dom';\r\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\r\n\r\nexport interface SettingsNavItem {\r\n  label: MessageDescriptor;\r\n  to: To;\r\n}\r\n\r\nconst filteredSettingsNavConfig: (SettingsNavItem | false)[] = [\r\n  {label: message('General'), to: 'general'},\r\n  ...AppSettingsNavConfig,\r\n  getBootstrapData().settings.billing.integrated && {\r\n    label: message('Subscriptions'),\r\n    to: 'subscriptions',\r\n  },\r\n  {label: message('Localization'), to: 'localization'},\r\n  {\r\n    label: message('Authentication'),\r\n    to: 'authentication',\r\n  },\r\n  {label: message('Uploading'), to: 'uploading'},\r\n  {label: message('Outgoing email'), to: 'outgoing-email'},\r\n  {label: message('Cache'), to: 'cache'},\r\n  {label: message('Analytics'), to: 'analytics'},\r\n  {label: message('Logging'), to: 'logging'},\r\n  {label: message('Queue'), to: 'queue'},\r\n  {label: message('Recaptcha'), to: 'recaptcha'},\r\n  {label: message('GDPR'), to: 'gdpr'},\r\n  {\r\n    label: message('Menus'),\r\n    to: '/admin/appearance/menus',\r\n  },\r\n  {\r\n    label: message('Seo'),\r\n    to: '/admin/appearance/seo-settings',\r\n  },\r\n  {\r\n    label: message('Themes'),\r\n    to: '/admin/appearance/themes',\r\n  },\r\n].filter(Boolean);\r\n\r\nexport const SettingsNavConfig = filteredSettingsNavConfig as SettingsNavItem[];\r\n","import clsx from 'clsx';\r\nimport {NavLink, Outlet, useLocation, useNavigate} from 'react-router-dom';\r\nimport {SettingsNavConfig} from './settings-nav-config';\r\nimport {useIsMobileMediaQuery} from '../../utils/hooks/is-mobile-media-query';\r\nimport {Option, Select} from '../../ui/forms/select/select';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {StaticPageTitle} from '../../seo/static-page-title';\r\n\r\ninterface Props {\r\n  className?: string;\r\n}\r\nexport function SettingsLayout({className}: Props) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        className,\r\n        'container mx-auto min-h-full items-start gap-30 p-24 md:flex',\r\n      )}\r\n    >\r\n      <StaticPageTitle>\r\n        <Trans message=\"Settings\" />\r\n      </StaticPageTitle>\r\n      {isMobile ? <MobileNav /> : <DesktopNav />}\r\n      <div className=\"relative max-w-500 flex-auto md:px-30\">\r\n        <Outlet />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MobileNav() {\r\n  const {pathname} = useLocation();\r\n  const navigate = useNavigate();\r\n  const value = pathname.split('/').pop();\r\n\r\n  return (\r\n    <Select\r\n      minWidth=\"min-w-none\"\r\n      className=\"mb-24 w-full bg\"\r\n      selectionMode=\"single\"\r\n      selectedValue={value}\r\n      onSelectionChange={newPage => {\r\n        navigate(newPage as string);\r\n      }}\r\n    >\r\n      {SettingsNavConfig.map(item => (\r\n        <Option key={item.to as string} value={item.to}>\r\n          <Trans {...item.label} />\r\n        </Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n}\r\n\r\nfunction DesktopNav() {\r\n  return (\r\n    <div className=\"sticky top-24 w-240 flex-shrink-0\">\r\n      {SettingsNavConfig.map(item => (\r\n        <NavLink\r\n          key={item.to as string}\r\n          to={item.to}\r\n          className={({isActive}) =>\r\n            clsx(\r\n              'mb-8 block whitespace-nowrap rounded-button p-14 text-sm transition-bg-color',\r\n              isActive\r\n                ? 'bg-primary/6 font-semibold text-primary'\r\n                : 'hover:bg-hover',\r\n            )\r\n          }\r\n        >\r\n          <Trans {...item.label} />\r\n        </NavLink>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {AdminSettings} from '../admin-settings';\r\nimport {apiClient} from '@common/http/query-client';\r\n\r\nexport interface FetchAdminSettingsResponse\r\n  extends BackendResponse,\r\n    AdminSettings {}\r\n\r\nexport function useAdminSettings() {\r\n  return useQuery({\r\n    queryKey: ['fetchAdminSettings'],\r\n    queryFn: () => fetchAdminSettings(),\r\n    // prevent automatic re-fetching so diffing with previous settings work properly\r\n    staleTime: Infinity,\r\n  });\r\n}\r\n\r\nfunction fetchAdminSettings(): Promise<FetchAdminSettingsResponse> {\r\n  return apiClient.get('settings').then(response => response.data);\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {toast} from '../../ui/toast/toast';\r\nimport {message} from '../../i18n/message';\r\nimport {apiClient} from '../../http/query-client';\r\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\nfunction GenerateSitemap(): Promise<Response> {\r\n  return apiClient.post('sitemap/generate').then(r => r.data);\r\n}\r\n\r\nexport function useGenerateSitemap() {\r\n  return useMutation({\r\n    mutationFn: () => GenerateSitemap(),\r\n    onSuccess: () => {\r\n      toast(message('Sitemap generated'));\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {diff} from 'deep-object-diff';\r\nimport dot from 'dot-object';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\nimport {useAdminSettings} from '@common/admin/settings/requests/use-admin-settings';\r\nimport {message} from '@common/i18n/message';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\nexport interface AdminSettingsWithFiles {\r\n  files?: Record<string, File>;\r\n  client?: Partial<AdminSettings['client']>;\r\n  server?: Partial<AdminSettings['server']>;\r\n}\r\n\r\nexport function useUpdateAdminSettings(\r\n  form: UseFormReturn<AdminSettingsWithFiles>,\r\n) {\r\n  const {data: original} = useAdminSettings();\r\n\r\n  return useMutation({\r\n    mutationFn: (props: AdminSettingsWithFiles) => {\r\n      //need to convert these to json, otherwise only single key from object would be sent due to diffing\r\n      if (props.client?.cookie_notice?.button) {\r\n        props.client.cookie_notice.button = JSON.stringify(\r\n          props.client.cookie_notice.button,\r\n        ) as any;\r\n      }\r\n      if (props.client?.registration?.policies) {\r\n        props.client.registration.policies = JSON.stringify(\r\n          props.client.registration.policies,\r\n        ) as any;\r\n      }\r\n      if ((props.client as any)?.artistPage?.tabs) {\r\n        (props.client as any).artistPage.tabs = JSON.stringify(\r\n          (props.client as any).artistPage.tabs,\r\n        ) as any;\r\n      }\r\n      if ((props.client as any)?.title_page?.sections) {\r\n        (props.client as any).title_page.sections = JSON.stringify(\r\n          (props.client as any).title_page.sections,\r\n        ) as any;\r\n      }\r\n      if ((props.client as any)?.incoming_email) {\r\n        (props.client as any).incoming_email = JSON.stringify(\r\n          (props.client as any).incoming_email,\r\n        ) as any;\r\n      }\r\n      if ((props.client as any)?.publish?.default_credentials) {\r\n        (props.client as any).publish.default_credentials = JSON.stringify(\r\n          (props.client as any).publish.default_credentials,\r\n        ) as any;\r\n      }\r\n\r\n      const client = props.client ? diff(original!.client, props.client) : null;\r\n      const server = props.server ? diff(original!.server, props.server) : null;\r\n      return updateAdminSettings({\r\n        client,\r\n        server,\r\n        files: props.files,\r\n      } as AdminSettings);\r\n    },\r\n    onSuccess: () => {\r\n      toast(message('Settings updated'), {\r\n        position: 'bottom-right',\r\n      });\r\n      queryClient.invalidateQueries({queryKey: ['fetchAdminSettings']});\r\n    },\r\n    onError: r => onFormQueryError(r, form),\r\n  });\r\n}\r\n\r\nfunction updateAdminSettings({\r\n  client,\r\n  server,\r\n  files,\r\n}: AdminSettingsWithFiles): Promise<Response> {\r\n  const formData = new FormData();\r\n  if (client) {\r\n    formData.set('client', JSON.stringify(dot.dot(client)));\r\n  }\r\n  if (server) {\r\n    formData.set('server', JSON.stringify(dot.dot(server)));\r\n  }\r\n  Object.entries(files || {}).forEach(([key, file]) => {\r\n    formData.set(key, file);\r\n  });\r\n  return apiClient\r\n    .post('settings', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    })\r\n    .then(r => r.data);\r\n}\r\n","import {FieldErrors, useForm} from 'react-hook-form';\r\nimport {Fragment, ReactNode} from 'react';\r\nimport {\r\n  AdminSettingsWithFiles,\r\n  useUpdateAdminSettings,\r\n} from './requests/update-admin-settings';\r\nimport {AdminSettings} from './admin-settings';\r\nimport {useAdminSettings} from './requests/use-admin-settings';\r\nimport {Form} from '../../ui/forms/form';\r\nimport {Button} from '../../ui/buttons/button';\r\nimport {ProgressCircle} from '../../ui/progress/progress-circle';\r\nimport {ProgressBar} from '../../ui/progress/progress-bar';\r\nimport {Trans} from '../../i18n/trans';\r\n\r\ninterface Props {\r\n  title: ReactNode;\r\n  description: ReactNode;\r\n  children: ReactNode;\r\n  transformValues?: (values: AdminSettingsWithFiles) => AdminSettingsWithFiles;\r\n}\r\nexport function SettingsPanel({\r\n  title,\r\n  description,\r\n  children,\r\n  transformValues,\r\n}: Props) {\r\n  const {data} = useAdminSettings();\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"mb-40\">\r\n        <h2 className=\"mb-4 text-xl\">{title}</h2>\r\n        <div className=\"text-sm text-muted\">{description}</div>\r\n      </div>\r\n      {data ? (\r\n        <FormWrapper defaultValues={data} transformValues={transformValues}>\r\n          {children}\r\n        </FormWrapper>\r\n      ) : (\r\n        <ProgressCircle isIndeterminate aria-label=\"Loading settings...\" />\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\ninterface FormWrapperProps {\r\n  children: ReactNode;\r\n  defaultValues: AdminSettings;\r\n  transformValues?: (values: AdminSettingsWithFiles) => AdminSettingsWithFiles;\r\n}\r\nfunction FormWrapper({\r\n  children,\r\n  defaultValues,\r\n  transformValues,\r\n}: FormWrapperProps) {\r\n  const form = useForm<AdminSettingsWithFiles>({defaultValues});\r\n  const updateSettings = useUpdateAdminSettings(form);\r\n  return (\r\n    <Fragment>\r\n      <Form\r\n        form={form}\r\n        onBeforeSubmit={() => {\r\n          // clear group errors, because hook form won't automatically\r\n          // clear errors that are not bound to a specific form field\r\n          const errors = form.formState.errors as FieldErrors<object>;\r\n          const keys = Object.keys(errors).filter(key => {\r\n            return key.endsWith('_group');\r\n          });\r\n          form.clearErrors(keys as any);\r\n        }}\r\n        onSubmit={value => {\r\n          value = transformValues ? transformValues(value) : value;\r\n          updateSettings.mutate(value);\r\n        }}\r\n      >\r\n        {children}\r\n        <div className=\"mt-40\">\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"flat\"\r\n            color=\"primary\"\r\n            disabled={updateSettings.isPending}\r\n          >\r\n            <Trans message=\"Update\" />\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n      {updateSettings.isPending && (\r\n        <ProgressBar\r\n          size=\"xs\"\r\n          className=\"absolute -bottom-14 left-30 w-full\"\r\n          isIndeterminate\r\n          aria-label=\"Saving settings...\"\r\n        />\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n","export function SettingsSeparator() {\r\n  return <div className=\"h-1 bg-divider my-30\" />;\r\n}\r\n","import clsx from 'clsx';\r\nimport {LinkIcon} from '../../icons/material/Link';\r\nimport {ExternalLink} from '../../ui/buttons/external-link';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {useSettings} from '../../core/settings/use-settings';\r\n\r\ninterface LearnMoreLinkProps {\r\n  link: string;\r\n  className?: string;\r\n}\r\nexport function LearnMoreLink({link, className}: LearnMoreLinkProps) {\r\n  const {site} = useSettings();\r\n  if (site.hide_docs_button) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className={clsx('flex items-center gap-8', className)}>\r\n      <LinkIcon size=\"sm\" />\r\n      <ExternalLink href={link}>\r\n        <Trans message=\"Learn more\" />\r\n      </ExternalLink>\r\n    </div>\r\n  );\r\n}\r\n","import {useAdminSettings} from '../requests/use-admin-settings';\r\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {FormSelect, Option} from '../../../ui/forms/select/select';\r\nimport {FormSwitch} from '@common/ui/forms/toggle/switch';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {useGenerateSitemap} from '../generate-sitemap';\r\nimport {ExternalLink} from '@common/ui/buttons/external-link';\r\nimport {SettingsPanel} from '../settings-panel';\r\nimport {SettingsSeparator} from '../settings-separator';\r\nimport {LearnMoreLink} from '../learn-more-link';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Fragment, useContext} from 'react';\r\nimport {SiteConfigContext} from '@common/core/settings/site-config-context';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\nimport {useBootstrapData} from '@common/core/bootstrap-data/bootstrap-data-context';\r\nimport {useValueLists} from '@common/http/value-lists';\r\nimport {useFormContext} from 'react-hook-form';\r\nimport {AdminSettingsWithFiles} from '@common/admin/settings/requests/update-admin-settings';\r\n\r\nexport function GeneralSettings() {\r\n  return (\r\n    <SettingsPanel\r\n      title={<Trans message=\"General\" />}\r\n      description={\r\n        <Trans message=\"Configure site url, homepage, theme and other general settings.\" />\r\n      }\r\n    >\r\n      <SiteUrlSection />\r\n      <SettingsSeparator />\r\n      <HomepageSection />\r\n      <SettingsSeparator />\r\n      <ThemeSection />\r\n      <SettingsSeparator />\r\n      <SitemapSection />\r\n    </SettingsPanel>\r\n  );\r\n}\r\n\r\nfunction SiteUrlSection() {\r\n  const {data} = useAdminSettings();\r\n\r\n  if (!data) return null;\r\n\r\n  let append = null;\r\n  const server = data!.server;\r\n  const isInvalid = server.newAppUrl && server.newAppUrl !== server.app_url;\r\n  if (isInvalid) {\r\n    append = (\r\n      <div className=\"mt-20 text-sm text-danger\">\r\n        <Trans\r\n          values={{\r\n            baseUrl: server.app_url,\r\n            currentUrl: server.newAppUrl,\r\n            b: chunks => <b>{chunks}</b>,\r\n          }}\r\n          message=\"Base site url is set as <b>:baseUrl</b> in configuration, but current url is <b>:currentUrl</b>. It is recommended to set the primary url you want to use in configuration file and then redirect all other url versions to this primary version via cpanel or .htaccess file.\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <FormTextField\r\n        invalid={!!isInvalid}\r\n        name=\"server.app_url\"\r\n        label={<Trans message=\"Primary site url\" />}\r\n        description={\r\n          <LearnMoreLink link=\"https://support.vebto.com/help-center/articles/35/primary-site-url\" />\r\n        }\r\n      />\r\n      {append}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction HomepageSection() {\r\n  const {watch} = useFormContext<AdminSettingsWithFiles>();\r\n  const {homepage} = useContext(SiteConfigContext);\r\n  const {data} = useValueLists(['menuItemCategories']);\r\n  const selectedType = watch('client.homepage.type');\r\n\r\n  return (\r\n    <div>\r\n      <FormSelect\r\n        name=\"client.homepage.type\"\r\n        selectionMode=\"single\"\r\n        label={<Trans message=\"Site home page\" />}\r\n        description={\r\n          <Trans message=\"Which page should be used as site homepage.\" />\r\n        }\r\n      >\r\n        {homepage.options.map(option => (\r\n          <Option key={option.value} value={option.value}>\r\n            <Trans {...option.label} />\r\n          </Option>\r\n        ))}\r\n        {data?.menuItemCategories?.map(category => (\r\n          <Option key={category.type} value={category.type}>\r\n            {category.name}\r\n          </Option>\r\n        ))}\r\n      </FormSelect>\r\n      {data?.menuItemCategories?.map(category => {\r\n        return selectedType === category.type ? (\r\n          <FormSelect\r\n            className=\"mt-24\"\r\n            name=\"client.homepage.value\"\r\n            key={category.name}\r\n            selectionMode=\"single\"\r\n            label={\r\n              <Trans message=\"Homepage :name\" values={{name: category.name}} />\r\n            }\r\n          >\r\n            {category.items.map(item => (\r\n              <Option key={item.label} value={item.model_id}>\r\n                {item.label}\r\n              </Option>\r\n            ))}\r\n          </FormSelect>\r\n        ) : null;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ThemeSection() {\r\n  const {\r\n    data: {themes},\r\n  } = useBootstrapData();\r\n  return (\r\n    <Fragment>\r\n      <FormSelect\r\n        className=\"mb-20\"\r\n        name=\"client.themes.default_id\"\r\n        selectionMode=\"single\"\r\n        label={<Trans message=\"Default site theme\" />}\r\n        description={\r\n          <Trans message=\"Which theme to use for users that have not chosen a theme manually.\" />\r\n        }\r\n      >\r\n        <Option value={0}>\r\n          <Trans message=\"System\" />\r\n        </Option>\r\n        {themes.all.map(theme => (\r\n          <Option key={theme.id} value={theme.id}>\r\n            {theme.name}\r\n          </Option>\r\n        ))}\r\n      </FormSelect>\r\n      <FormSwitch\r\n        name=\"client.themes.user_change\"\r\n        description={\r\n          <Trans message=\"Allow users to manually change site theme.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Allow theme change\" />\r\n      </FormSwitch>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction SitemapSection() {\r\n  const generateSitemap = useGenerateSitemap();\r\n  const {base_url} = useSettings();\r\n\r\n  const url = `${base_url}/storage/sitemaps/sitemap-index.xml`;\r\n  const link = <ExternalLink href={url}>{url}</ExternalLink>;\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outline\"\r\n        size=\"xs\"\r\n        color=\"primary\"\r\n        disabled={generateSitemap.isPending}\r\n        onClick={() => {\r\n          generateSitemap.mutate();\r\n        }}\r\n      >\r\n        <Trans message=\"Generate sitemap\" />\r\n      </Button>\r\n      <div className=\"mt-14 text-sm text-muted\">\r\n        <Trans\r\n          message=\"Once generated, sitemap url will be: :url\"\r\n          values={{\r\n            url: link,\r\n          }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import {parseColor} from '@react-stately/color';\r\n\r\nexport function colorToThemeValue(color: string): string {\r\n  return parseColor(color)\r\n    .toString('rgb')\r\n    .replace('rgb(', '')\r\n    .replace(')', '')\r\n    .replace(/, ?/g, ' ');\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const TuneIcon = createSvgIcon(\r\n  <path d=\"M3 17v2h6v-2H3zM3 5v2h10V5H3zm10 16v-2h8v-2h-8v-2h-2v6h2zM7 9v2H3v2h4v2h2V9H7zm14 4v-2H11v2h10zm-6-4h2V7h4V5h-4V3h-2v6z\" />\r\n, 'TuneOutlined');\r\n","import {useForm, useFormContext} from 'react-hook-form';\r\nimport {useEffect} from 'react';\r\nimport {TuneIcon} from '../../../../icons/material/Tune';\r\nimport {Button} from '../../../../ui/buttons/button';\r\nimport {CssTheme} from '../../../../ui/themes/css-theme';\r\nimport {FormTextField} from '../../../../ui/forms/input-field/text-field/text-field';\r\nimport {FormSwitch} from '../../../../ui/forms/toggle/switch';\r\nimport {AppearanceValues} from '../../appearance-store';\r\nimport {DialogTrigger} from '../../../../ui/overlays/dialog/dialog-trigger';\r\nimport {DialogFooter} from '../../../../ui/overlays/dialog/dialog-footer';\r\nimport {useDialogContext} from '../../../../ui/overlays/dialog/dialog-context';\r\nimport {Dialog} from '../../../../ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '../../../../ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '../../../../ui/overlays/dialog/dialog-body';\r\nimport {Trans} from '../../../../i18n/trans';\r\nimport {Form} from '../../../../ui/forms/form';\r\nimport {useParams} from 'react-router-dom';\r\n\r\nexport function ThemeSettingsDialogTrigger() {\r\n  const {getValues, setValue} = useFormContext<AppearanceValues>();\r\n  const {themeIndex} = useParams();\r\n  const theme = getValues(`appearance.themes.all.${+themeIndex!}`);\r\n\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={(value?: CssTheme) => {\r\n        if (!value) return;\r\n\r\n        getValues('appearance.themes.all').forEach((currentTheme, index) => {\r\n          // update changed theme\r\n          if (currentTheme.id === value.id) {\r\n            setValue(`appearance.themes.all.${index}`, value, {\r\n              shouldDirty: true,\r\n            });\r\n            return;\r\n          }\r\n\r\n          // unset \"default_light\" and \"default_dark\" on other themes\r\n          if (value.default_light) {\r\n            setValue(\r\n              `appearance.themes.all.${index}`,\r\n              {...currentTheme, default_light: false},\r\n              {shouldDirty: true}\r\n            );\r\n            return;\r\n          }\r\n          if (value.default_dark) {\r\n            setValue(\r\n              `appearance.themes.all.${index}`,\r\n              {...currentTheme, default_dark: false},\r\n              {shouldDirty: true}\r\n            );\r\n            return;\r\n          }\r\n        });\r\n      }}\r\n    >\r\n      <Button\r\n        size=\"xs\"\r\n        variant=\"outline\"\r\n        color=\"primary\"\r\n        startIcon={<TuneIcon />}\r\n      >\r\n        <Trans message=\"Settings\" />\r\n      </Button>\r\n      <SettingsDialog theme={theme} />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\ninterface SettingsDialogProps {\r\n  theme: CssTheme;\r\n}\r\nfunction SettingsDialog({theme}: SettingsDialogProps) {\r\n  const form = useForm<CssTheme>({defaultValues: theme});\r\n  const {close, formId} = useDialogContext();\r\n\r\n  useEffect(() => {\r\n    const subscription = form.watch((value, {name}) => {\r\n      // theme can only be set as either light or dark default\r\n      if (name === 'default_light' && value.default_light) {\r\n        form.setValue('default_dark', false);\r\n      }\r\n      if (name === 'default_dark' && value.default_dark) {\r\n        form.setValue('default_light', false);\r\n      }\r\n    });\r\n    return () => subscription.unsubscribe();\r\n  }, [form]);\r\n\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Update settings\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Form\r\n          form={form}\r\n          id={formId}\r\n          onSubmit={values => {\r\n            close(values);\r\n          }}\r\n        >\r\n          <FormTextField\r\n            name=\"name\"\r\n            label={<Trans message=\"Name\" />}\r\n            className=\"mb-30\"\r\n            autoFocus\r\n          />\r\n          <FormSwitch\r\n            name=\"is_dark\"\r\n            className=\"mb-20 pb-20 border-b\"\r\n            description={\r\n              <Trans message=\"Whether this theme has light text on dark background.\" />\r\n            }\r\n          >\r\n            <Trans message=\"Dark theme\" />\r\n          </FormSwitch>\r\n          <FormSwitch\r\n            name=\"default_light\"\r\n            className=\"mb-30\"\r\n            description={\r\n              <Trans message=\"When light mode is selected, this theme will be used.\" />\r\n            }\r\n          >\r\n            <Trans message=\"Default for light mode\" />\r\n          </FormSwitch>\r\n          <FormSwitch\r\n            name=\"default_dark\"\r\n            description={\r\n              <Trans message=\"When dark mode is selected, this theme will be used.\" />\r\n            }\r\n          >\r\n            <Trans message=\"Default for dark mode\" />\r\n          </FormSwitch>\r\n        </Form>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button\r\n          onClick={() => {\r\n            close();\r\n          }}\r\n        >\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          form={formId}\r\n          disabled={!form.formState.isDirty}\r\n        >\r\n          <Trans message=\"Save\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const RestartAltIcon = createSvgIcon(\r\n  <path d=\"M6 13c0-1.65.67-3.15 1.76-4.24L6.34 7.34C4.9 8.79 4 10.79 4 13c0 4.08 3.05 7.44 7 7.93v-2.02c-2.83-.48-5-2.94-5-5.91zm14 0c0-4.42-3.58-8-8-8-.06 0-.12.01-.18.01l1.09-1.09L11.5 2.5 8 6l3.5 3.5 1.41-1.41-1.08-1.08c.06 0 .12-.01.17-.01 3.31 0 6 2.69 6 6 0 2.97-2.17 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93z\" />\r\n, 'RestartAltOutlined');\r\n","import {Fragment, useState} from 'react';\r\nimport {DeleteIcon} from '../../../../icons/material/Delete';\r\nimport {ConfirmationDialog} from '../../../../ui/overlays/dialog/confirmation-dialog';\r\nimport {IconButton} from '../../../../ui/buttons/icon-button';\r\nimport {MoreVertIcon} from '../../../../icons/material/MoreVert';\r\nimport {RestartAltIcon} from '../../../../icons/material/RestartAlt';\r\nimport {appearanceState, AppearanceValues} from '../../appearance-store';\r\nimport {toast} from '../../../../ui/toast/toast';\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  MenuTrigger,\r\n} from '../../../../ui/navigation/menu/menu-trigger';\r\nimport {DialogTrigger} from '../../../../ui/overlays/dialog/dialog-trigger';\r\nimport {message} from '../../../../i18n/message';\r\nimport {Trans} from '../../../../i18n/trans';\r\nimport {useNavigate} from '../../../../utils/hooks/use-navigate';\r\nimport {useFieldArray, useFormContext} from 'react-hook-form';\r\nimport {useParams} from 'react-router-dom';\r\n\r\nexport function ThemeMoreOptionsButton() {\r\n  const navigate = useNavigate();\r\n  const {themeIndex} = useParams();\r\n  const [confirmDialogOpen, setConfirmDialogOpen] = useState(false);\r\n  const {setValue, getValues} = useFormContext<AppearanceValues>();\r\n  const {fields, remove} = useFieldArray<AppearanceValues>({\r\n    name: 'appearance.themes.all',\r\n  });\r\n\r\n  const deleteTheme = () => {\r\n    if (fields.length <= 1) {\r\n      toast.danger(message('At least one theme is required'));\r\n      return;\r\n    }\r\n    if (themeIndex) {\r\n      navigate('/admin/appearance/themes');\r\n      remove(+themeIndex);\r\n      setValue('appearance.themes.selectedThemeId', null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MenuTrigger\r\n        onItemSelected={key => {\r\n          if (key === 'delete') {\r\n            setConfirmDialogOpen(true);\r\n          } else if (key === 'reset') {\r\n            const path =\r\n              `appearance.themes.all.${+themeIndex!}` as 'appearance.themes.all.0';\r\n            const defaultColors = getValues(`${path}.is_dark`)\r\n              ? appearanceState().defaults!.appearance.themes.dark\r\n              : appearanceState().defaults!.appearance.themes.light;\r\n\r\n            Object.entries(defaultColors).forEach(([colorName, themeValue]) => {\r\n              appearanceState().preview.setThemeValue(colorName, themeValue);\r\n            });\r\n            appearanceState().preview.setThemeFont(null);\r\n\r\n            setValue(`${path}.values`, defaultColors, {\r\n              shouldDirty: true,\r\n            });\r\n            setValue(`${path}.font`, undefined, {\r\n              shouldDirty: true,\r\n            });\r\n          }\r\n        }}\r\n      >\r\n        <IconButton size=\"md\" className=\"text-muted\">\r\n          <MoreVertIcon />\r\n        </IconButton>\r\n        <Menu>\r\n          <MenuItem value=\"reset\" startIcon={<RestartAltIcon />}>\r\n            <Trans message=\"Reset colors\" />\r\n          </MenuItem>\r\n          <MenuItem value=\"delete\" startIcon={<DeleteIcon />}>\r\n            <Trans message=\"Delete\" />\r\n          </MenuItem>\r\n        </Menu>\r\n      </MenuTrigger>\r\n      <DialogTrigger\r\n        type=\"modal\"\r\n        isOpen={confirmDialogOpen}\r\n        onClose={isConfirmed => {\r\n          if (isConfirmed) {\r\n            deleteTheme();\r\n          }\r\n          setConfirmDialogOpen(false);\r\n        }}\r\n      >\r\n        <ConfirmationDialog\r\n          isDanger\r\n          title={<Trans message=\"Delete theme\" />}\r\n          body={<Trans message=\"Are you sure you want to delete this theme?\" />}\r\n          confirm={<Trans message=\"Delete\" />}\r\n        />\r\n      </DialogTrigger>\r\n    </Fragment>\r\n  );\r\n}\r\n","import {message} from '@common/i18n/message';\r\nimport {useParams} from 'react-router-dom';\r\nimport {useFormContext} from 'react-hook-form';\r\nimport {AppearanceValues} from '@common/admin/appearance/appearance-store';\r\nimport {Menu, MenuTrigger} from '@common/ui/navigation/menu/menu-trigger';\r\nimport {AppearanceButton} from '@common/admin/appearance/appearance-button';\r\nimport {ColorIcon} from '@common/admin/appearance/sections/themes/color-icon';\r\nimport clsx from 'clsx';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Item} from '@common/ui/forms/listbox/item';\r\n\r\nconst navbarColorMap = [\r\n  {\r\n    label: message('Accent'),\r\n    value: 'primary',\r\n    bgColor: 'bg-primary',\r\n    previewBgColor: 'text-primary',\r\n  },\r\n  {\r\n    label: message('Background'),\r\n    value: 'bg',\r\n    bgColor: 'bg-background',\r\n    previewBgColor: 'text-background',\r\n  },\r\n  {\r\n    label: message('Background alt'),\r\n    value: 'bg-alt',\r\n    bgColor: 'bg-alt',\r\n    previewBgColor: 'text-background-alt',\r\n  },\r\n  {\r\n    label: message('Transparent'),\r\n    value: 'transparent',\r\n    bgColor: 'bg-transparent',\r\n    previewBgColor: 'text-transparent',\r\n  },\r\n];\r\n\r\nexport function NavbarColorPicker() {\r\n  const {themeIndex} = useParams();\r\n  const {watch, setValue} = useFormContext<AppearanceValues>();\r\n  const key =\r\n    `appearance.themes.all.${themeIndex!}.values.--be-navbar-color` as 'appearance.themes.all.1.values.--be-navbar-color';\r\n  const selectedValue = watch(key);\r\n  const previewColor = navbarColorMap.find(({value}) => value === selectedValue)\r\n    ?.previewBgColor;\r\n  return (\r\n    <MenuTrigger\r\n      placement=\"right\"\r\n      selectionMode=\"single\"\r\n      selectedValue={selectedValue}\r\n      onSelectionChange={value => {\r\n        setValue(key, value as string, {shouldDirty: true});\r\n      }}\r\n    >\r\n      <AppearanceButton\r\n        startIcon={\r\n          <ColorIcon\r\n            viewBox=\"0 0 48 48\"\r\n            className={clsx('icon-lg', previewColor)}\r\n          />\r\n        }\r\n      >\r\n        <Trans message=\"Navbar\" />\r\n      </AppearanceButton>\r\n      <Menu>\r\n        {navbarColorMap.map(({label, value, bgColor}) => (\r\n          <Item\r\n            key={value}\r\n            value={value}\r\n            startIcon={\r\n              <div className={clsx('h-20 w-20 rounded border', bgColor)} />\r\n            }\r\n          >\r\n            <Trans {...label} />\r\n          </Item>\r\n        ))}\r\n      </Menu>\r\n    </MenuTrigger>\r\n  );\r\n}\r\n","import {parseColor} from '@react-stately/color';\r\n\r\nexport function themeValueToHex(value: string): string {\r\n  try {\r\n    return parseColor(`rgb(${value.split(' ').join(',')})`).toString('hex');\r\n  } catch (e) {\r\n    return value;\r\n  }\r\n}\r\n","import {Link, useNavigate, useParams} from 'react-router-dom';\r\nimport {Fragment, ReactNode, useEffect, useState} from 'react';\r\nimport {\r\n  appearanceState,\r\n  AppearanceValues,\r\n} from '@common/admin/appearance/appearance-store';\r\nimport {AppearanceButton} from '@common/admin/appearance/appearance-button';\r\nimport {ColorIcon} from '@common/admin/appearance/sections/themes/color-icon';\r\nimport {CssTheme} from '@common/ui/themes/css-theme';\r\nimport {colorToThemeValue} from '@common/ui/themes/utils/color-to-theme-value';\r\nimport {ThemeSettingsDialogTrigger} from '@common/admin/appearance/sections/themes/theme-settings-dialog-trigger';\r\nimport {ThemeMoreOptionsButton} from '@common/admin/appearance/sections/themes/theme-more-options-button';\r\nimport {ColorPickerDialog} from '@common/ui/color-picker/color-picker-dialog';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {useFormContext} from 'react-hook-form';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {NavbarColorPicker} from '@common/admin/appearance/sections/themes/navbar-color-picker';\r\nimport {message} from '@common/i18n/message';\r\nimport {themeValueToHex} from '@common/ui/themes/utils/theme-value-to-hex';\r\n\r\nconst colorList = [\r\n  {\r\n    label: message('Background'),\r\n    key: '--be-background',\r\n  },\r\n  {\r\n    label: message('Background alt'),\r\n    key: '--be-background-alt',\r\n  },\r\n  {\r\n    label: message('Foreground'),\r\n    key: '--be-foreground-base',\r\n  },\r\n  {\r\n    label: message('Accent light'),\r\n    key: '--be-primary-light',\r\n  },\r\n  {\r\n    label: message('Accent'),\r\n    key: '--be-primary',\r\n  },\r\n  {\r\n    label: message('Accent dark'),\r\n    key: '--be-primary-dark',\r\n  },\r\n  {\r\n    label: message('Text on accent'),\r\n    key: '--be-on-primary',\r\n  },\r\n  {\r\n    label: message('Chip'),\r\n    key: '--be-background-chip',\r\n  },\r\n];\r\n\r\nexport function ThemeEditor() {\r\n  const navigate = useNavigate();\r\n  const {themeIndex} = useParams();\r\n  const {getValues, watch} = useFormContext<AppearanceValues>();\r\n\r\n  const theme = getValues(`appearance.themes.all.${+themeIndex!}`);\r\n  const selectedFont = watch(\r\n    `appearance.themes.all.${+themeIndex!}.font.family`,\r\n  );\r\n\r\n  // go to theme list, if theme can't be found\r\n  useEffect(() => {\r\n    if (!theme) {\r\n      navigate('/admin/appearance/themes');\r\n    }\r\n  }, [navigate, theme]);\r\n\r\n  // select theme in preview on initial render\r\n  useEffect(() => {\r\n    if (theme?.id) {\r\n      appearanceState().preview.setActiveTheme(theme.id);\r\n    }\r\n  }, [theme?.id]);\r\n\r\n  if (!theme) return null;\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mb-20 flex items-center justify-between gap-10\">\r\n        <ThemeSettingsDialogTrigger />\r\n        <ThemeMoreOptionsButton />\r\n      </div>\r\n      <div>\r\n        <AppearanceButton\r\n          elementType={Link}\r\n          to=\"font\"\r\n          description={selectedFont ? selectedFont : <Trans message=\"System\" />}\r\n        >\r\n          <Trans message=\"Font\" />\r\n        </AppearanceButton>\r\n        <AppearanceButton elementType={Link} to=\"radius\">\r\n          <Trans message=\"Rounding\" />\r\n        </AppearanceButton>\r\n        <div className=\"mb-6 mt-22 text-sm font-semibold\">\r\n          <Trans message=\"Colors\" />\r\n        </div>\r\n        <NavbarColorPicker />\r\n        {colorList.map(color => (\r\n          <ColorPickerTrigger\r\n            key={color.key}\r\n            colorName={color.key}\r\n            label={<Trans {...color.label} />}\r\n            initialThemeValue={theme.values[color.key]}\r\n            theme={theme}\r\n          />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface ColorPickerTriggerProps {\r\n  label: ReactNode;\r\n  theme: CssTheme;\r\n  colorName: string;\r\n  initialThemeValue: string;\r\n}\r\nfunction ColorPickerTrigger({\r\n  label,\r\n  theme,\r\n  colorName,\r\n  initialThemeValue,\r\n}: ColorPickerTriggerProps) {\r\n  const {setValue} = useFormContext<AppearanceValues>();\r\n  const {themeIndex} = useParams();\r\n  const [selectedThemeValue, setSelectedThemeValue] =\r\n    useState<string>(initialThemeValue);\r\n\r\n  // set color as css variable in preview and on button preview, but not in appearance values\r\n  // this way color change can be canceled when color picker is closed and applied explicitly via apply button\r\n  const selectThemeValue = (themeValue: string) => {\r\n    setSelectedThemeValue(themeValue);\r\n    appearanceState().preview.setThemeValue(colorName, themeValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // need to update the color here so changes via \"reset colors\" button are reflected\r\n    setSelectedThemeValue(initialThemeValue);\r\n  }, [initialThemeValue]);\r\n\r\n  return (\r\n    <DialogTrigger\r\n      value={themeValueToHex(selectedThemeValue)}\r\n      type=\"popover\"\r\n      placement=\"right\"\r\n      offset={10}\r\n      onValueChange={newColor => {\r\n        selectThemeValue(colorToThemeValue(newColor));\r\n      }}\r\n      onClose={(newColor, {valueChanged, initialValue}) => {\r\n        if (newColor && valueChanged) {\r\n          setValue(\r\n            `appearance.themes.all.${+themeIndex!}.values.${colorName}`,\r\n            colorToThemeValue(newColor),\r\n            {shouldDirty: true},\r\n          );\r\n          setValue('appearance.themes.selectedThemeId', theme.id);\r\n        } else {\r\n          // reset to initial value, if apply button was not clicked\r\n          selectThemeValue(initialValue);\r\n        }\r\n      }}\r\n    >\r\n      <AppearanceButton\r\n        className=\"capitalize\"\r\n        startIcon={\r\n          <ColorIcon\r\n            viewBox=\"0 0 48 48\"\r\n            className=\"icon-lg\"\r\n            style={{fill: `rgb(${selectedThemeValue})`}}\r\n          />\r\n        }\r\n      >\r\n        {label}\r\n      </AppearanceButton>\r\n      <ColorPickerDialog />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n","import {SettingsPanel} from '@common/admin/settings/settings-panel';\r\nimport {FormRadioGroup} from '@common/ui/forms/radio-group/radio-group';\r\nimport {FormRadio} from '@common/ui/forms/radio-group/radio';\r\nimport {FormSwitch} from '@common/ui/forms/toggle/switch';\r\nimport {Trans} from '@common/i18n/trans';\r\n\r\nexport function DriveSettings() {\r\n  return (\r\n    <SettingsPanel\r\n      title={<Trans message=\"Drive\" />}\r\n      description={\r\n        <Trans message=\"Configure defaults for drive user dashboard.\" />\r\n      }\r\n    >\r\n      <FormRadioGroup\r\n        required\r\n        className=\"mb-30\"\r\n        size=\"md\"\r\n        name=\"client.drive.default_view\"\r\n        orientation=\"vertical\"\r\n        label={<Trans message=\"Default view mode\" />}\r\n        description={\r\n          <Trans message=\"Which view mode should user drive use by default.\" />\r\n        }\r\n      >\r\n        <FormRadio value=\"list\">\r\n          <Trans message=\"List\" />\r\n        </FormRadio>\r\n        <FormRadio value=\"grid\">\r\n          <Trans message=\"Grid\" />\r\n        </FormRadio>\r\n      </FormRadioGroup>\r\n      <FormSwitch\r\n        className=\"mb-30\"\r\n        name=\"client.drive.send_share_notification\"\r\n        description={\r\n          <Trans message=\"Send a notification to user when a file or folder is shared with them.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Share notifications\" />\r\n      </FormSwitch>\r\n      <FormSwitch\r\n        name=\"client.share.suggest_emails\"\r\n        description={\r\n          <Trans message=\"Suggest email address of existing users when sharing a file or folder.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Suggest emails\" />\r\n      </FormSwitch>\r\n    </SettingsPanel>\r\n  );\r\n}\r\n","import {RouteObject} from 'react-router-dom';\r\nimport {DriveSettings} from './drive-settings';\r\n\r\nexport const AppSettingsRoutes: RouteObject[] = [\r\n  {path: 'drive', element: <DriveSettings />},\r\n];\r\n","import {ReactNode, useEffect, useRef} from 'react';\r\nimport {useFormContext} from 'react-hook-form';\r\nimport clsx from 'clsx';\r\n\r\ninterface Props {\r\n  children: (isInvalid: boolean) => ReactNode;\r\n  name: string;\r\n  separatorBottom?: boolean;\r\n  separatorTop?: boolean;\r\n}\r\nexport function SettingsErrorGroup({\r\n  children,\r\n  name,\r\n  separatorBottom = true,\r\n  separatorTop = true,\r\n}: Props) {\r\n  const {\r\n    formState: {errors},\r\n  } = useFormContext<Record<string, string>>();\r\n\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const error = errors[name];\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      ref.current?.scrollIntoView({behavior: 'smooth'});\r\n    }\r\n  }, [error]);\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        separatorBottom && 'border-b mb-20 pb-20',\r\n        separatorTop && 'border-t mt-20 pt-20',\r\n        error && 'border-y-error'\r\n      )}\r\n      ref={ref}\r\n    >\r\n      {children(!!error)}\r\n      {error && (\r\n        <div\r\n          className=\"text-danger text-sm mt-20\"\r\n          dangerouslySetInnerHTML={{__html: error.message!}}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import {useController} from 'react-hook-form';\r\nimport React, {useMemo} from 'react';\r\nimport {mergeProps} from '@react-aria/utils';\r\nimport {\r\n  ChipField,\r\n  ChipValue,\r\n} from '../../ui/forms/input-field/chip-field/chip-field';\r\nimport {FormChipFieldProps} from '../../ui/forms/input-field/chip-field/form-chip-field';\r\n\r\nexport function JsonChipField({children, ...props}: FormChipFieldProps<any>) {\r\n  const {\r\n    field: {onChange, onBlur, value = [], ref},\r\n    fieldState: {invalid, error},\r\n  } = useController({\r\n    name: props.name,\r\n  });\r\n\r\n  const arrayValue = useMemo(() => {\r\n    const mixedValue = value as string | string[];\r\n    return typeof mixedValue === 'string' ? JSON.parse(mixedValue) : mixedValue;\r\n  }, [value]);\r\n\r\n  const formProps: Partial<FormChipFieldProps<ChipValue>> = {\r\n    onChange: newValue => {\r\n      const jsonValue = JSON.stringify(newValue.map(chip => chip.name));\r\n      onChange(jsonValue);\r\n    },\r\n    onBlur,\r\n    value: arrayValue,\r\n    invalid,\r\n    errorMessage: error?.message,\r\n  };\r\n\r\n  return <ChipField ref={ref} {...mergeProps(formProps, props)} />;\r\n}\r\n","import React, {RefObject} from 'react';\r\n\r\nexport interface TabsContext {\r\n  selectedTab: number;\r\n  setSelectedTab: (newTab: number) => void;\r\n  tabsRef: RefObject<HTMLElement[]>;\r\n  size: 'sm' | 'md';\r\n  isLazy?: boolean;\r\n  id: string;\r\n}\r\n\r\nexport const TabContext = React.createContext<TabsContext>(null!);\r\n","import React, {ReactElement, useId, useMemo, useRef} from 'react';\r\nimport clsx from 'clsx';\r\nimport {useControlledState} from '@react-stately/utils';\r\nimport {TabContext, TabsContext} from './tabs-context';\r\nimport {TabListProps} from './tab-list';\r\nimport {TabPanelsProps} from './tab-panels';\r\n\r\nexport interface TabsProps {\r\n  children: [ReactElement<TabListProps>, ReactElement<TabPanelsProps>];\r\n  size?: 'sm' | 'md';\r\n  className?: string;\r\n  selectedTab?: number;\r\n  defaultSelectedTab?: number;\r\n  onTabChange?: (newTab: number) => void;\r\n  isLazy?: boolean;\r\n  overflow?: string;\r\n}\r\n\r\nexport function Tabs(props: TabsProps) {\r\n  const {\r\n    size = 'md',\r\n    children,\r\n    className,\r\n    isLazy,\r\n    overflow = 'overflow-hidden',\r\n  } = props;\r\n\r\n  const tabsRef = useRef<HTMLButtonElement[]>([]);\r\n  const id = useId();\r\n\r\n  const [selectedTab, setSelectedTab] = useControlledState(\r\n    props.selectedTab,\r\n    props.defaultSelectedTab || 0,\r\n    props.onTabChange\r\n  );\r\n\r\n  const ContextValue: TabsContext = useMemo(() => {\r\n    return {\r\n      selectedTab,\r\n      setSelectedTab,\r\n      tabsRef,\r\n      size,\r\n      isLazy,\r\n      id,\r\n    };\r\n  }, [selectedTab, id, isLazy, setSelectedTab, size]);\r\n\r\n  return (\r\n    <TabContext.Provider value={ContextValue}>\r\n      <div className={clsx(className, overflow, 'max-w-full')}>{children}</div>\r\n    </TabContext.Provider>\r\n  );\r\n}\r\n","import React, {useContext, useState} from 'react';\r\nimport {useLayoutEffect} from '@react-aria/utils';\r\nimport clsx from 'clsx';\r\nimport {TabContext} from './tabs-context';\r\n\r\ninterface TabLineStyle {\r\n  width?: string;\r\n  transform?: string;\r\n  className?: string;\r\n}\r\n\r\nexport function TabLine() {\r\n  const {tabsRef, selectedTab} = useContext(TabContext);\r\n  const [style, setStyle] = useState<TabLineStyle>({\r\n    width: undefined,\r\n    transform: undefined,\r\n    className: undefined,\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    if (selectedTab != null && tabsRef.current) {\r\n      const el = tabsRef.current[selectedTab];\r\n      if (!el) return;\r\n\r\n      setStyle(prevState => {\r\n        return {\r\n          width: `${el.offsetWidth}px`,\r\n          transform: `translateX(${el.offsetLeft}px)`,\r\n          // disable initial transition for tabline\r\n          className: prevState.width === undefined ? '' : 'transition-all',\r\n        };\r\n      });\r\n    }\r\n  }, [setStyle, selectedTab, tabsRef]);\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        'absolute bottom-0 left-0 h-2 bg-primary',\r\n        style.className\r\n      )}\r\n      role=\"presentation\"\r\n      style={{width: style.width, transform: style.transform}}\r\n    />\r\n  );\r\n}\r\n","import React, {Children, cloneElement, isValidElement, ReactNode} from 'react';\r\nimport clsx from 'clsx';\r\nimport {FocusScope} from '@react-aria/focus';\r\nimport {TabProps} from './tab';\r\nimport {TabLine} from './tab-line';\r\n\r\nexport interface TabListProps {\r\n  children: ReactNode;\r\n  // center tabs within tablist\r\n  center?: boolean;\r\n  // expand tabs to fill in tablist space fully. By default, tabs are only as wide as their content.\r\n  expand?: boolean;\r\n  className?: string;\r\n}\r\nexport function TabList({children, center, expand, className}: TabListProps) {\r\n  const childrenArray = Children.toArray(children);\r\n\r\n  return (\r\n    <FocusScope>\r\n      <div\r\n        className={clsx(\r\n          // hide scrollbar completely on mobile, show compact one on desktop\r\n          'flex relative max-w-full overflow-auto border-b max-sm:hidden-scrollbar md:compact-scrollbar',\r\n          className\r\n        )}\r\n        role=\"tablist\"\r\n        aria-orientation=\"horizontal\"\r\n      >\r\n        {childrenArray.map((child, index) => {\r\n          if (isValidElement<TabProps>(child)) {\r\n            return cloneElement<TabProps>(child, {\r\n              index,\r\n              className: clsx(\r\n                child.props.className,\r\n                expand && 'flex-auto',\r\n                center && index === 0 && 'ml-auto',\r\n                center && index === childrenArray.length - 1 && 'mr-auto'\r\n              ),\r\n            });\r\n          }\r\n          return null;\r\n        })}\r\n        <TabLine />\r\n      </div>\r\n    </FocusScope>\r\n  );\r\n}\r\n","import React, {JSXElementConstructor, ReactNode, useContext} from 'react';\r\nimport clsx from 'clsx';\r\nimport {useFocusManager} from '@react-aria/focus';\r\nimport {TabContext} from './tabs-context';\r\nimport {LinkProps} from 'react-router-dom';\r\n\r\nexport interface TabProps {\r\n  className?: string;\r\n  index?: number;\r\n  children: ReactNode;\r\n  isDisabled?: boolean;\r\n  padding?: string;\r\n  elementType?: 'button' | 'a' | JSXElementConstructor<any>;\r\n  to?: LinkProps['to'];\r\n  relative?: LinkProps['relative'];\r\n  replace?: LinkProps['replace'];\r\n  width?: string;\r\n}\r\nexport function Tab({\r\n  index,\r\n  className,\r\n  isDisabled,\r\n  children,\r\n  padding: paddingProp,\r\n  elementType = 'button',\r\n  to,\r\n  relative,\r\n  width = 'min-w-min',\r\n}: TabProps) {\r\n  const {\r\n    selectedTab,\r\n    setSelectedTab,\r\n    tabsRef,\r\n    size = 'md',\r\n    id,\r\n  } = useContext(TabContext);\r\n  const isSelected = index === selectedTab;\r\n  const focusManager = useFocusManager();\r\n  const padding = paddingProp || (size === 'sm' ? 'px-12' : 'px-18');\r\n\r\n  const mergedClassname = clsx(\r\n    'tracking-wide overflow-hidden capitalize text-sm flex items-center justify-center outline-none transition-colors',\r\n    'focus-visible:ring focus-visible:ring-2 ring-inset rounded whitespace-nowrap cursor-pointer',\r\n    width,\r\n    textColor({isDisabled, isSelected}),\r\n    className,\r\n    size === 'md' && `${padding} h-48`,\r\n    size === 'sm' && `${padding} h-32`,\r\n    isDisabled && 'pointer-events-none',\r\n  );\r\n\r\n  const onKeyDown = (e: React.KeyboardEvent<HTMLButtonElement>) => {\r\n    switch (e.key) {\r\n      case 'ArrowLeft':\r\n        focusManager?.focusPrevious();\r\n        break;\r\n      case 'ArrowRight':\r\n        focusManager?.focusNext();\r\n        break;\r\n      case 'Home':\r\n        focusManager?.focusFirst();\r\n        break;\r\n      case 'End':\r\n        focusManager?.focusLast();\r\n        break;\r\n    }\r\n  };\r\n\r\n  const tabIndex = isSelected ? 0 : -1;\r\n  const Element = elementType;\r\n\r\n  return (\r\n    <Element\r\n      disabled={isDisabled}\r\n      id={`${id}-${index}-tab`}\r\n      aria-controls={`${id}-${index}-tabpanel`}\r\n      type=\"button\"\r\n      role=\"tab\"\r\n      aria-selected={isSelected}\r\n      tabIndex={isDisabled ? undefined : tabIndex}\r\n      onKeyDown={onKeyDown}\r\n      onClick={() => {\r\n        setSelectedTab(index!);\r\n      }}\r\n      to={to}\r\n      relative={relative}\r\n      className={mergedClassname}\r\n      ref={(el: HTMLElement) => {\r\n        if (tabsRef.current && el) {\r\n          tabsRef.current[index!] = el;\r\n        }\r\n      }}\r\n    >\r\n      {children}\r\n    </Element>\r\n  );\r\n}\r\n\r\ninterface TextColorProps {\r\n  isDisabled?: boolean;\r\n  isSelected: boolean;\r\n}\r\nfunction textColor({isDisabled, isSelected}: TextColorProps): string {\r\n  if (isDisabled) {\r\n    return 'text-disabled cursor-default';\r\n  }\r\n  if (isSelected) {\r\n    return 'text-primary';\r\n  }\r\n  return 'text-muted hover:text-main';\r\n}\r\n","import React, {\r\n  Children,\r\n  cloneElement,\r\n  ComponentPropsWithoutRef,\r\n  isValidElement,\r\n  ReactElement,\r\n  ReactNode,\r\n  useContext,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport clsx from 'clsx';\r\nimport {useLayoutEffect} from '@react-aria/utils';\r\nimport {getFocusableTreeWalker} from '@react-aria/focus';\r\nimport {TabContext} from './tabs-context';\r\n\r\nexport interface TabPanelsProps {\r\n  children: ReactNode;\r\n  className?: string;\r\n}\r\nexport function TabPanels({children, className}: TabPanelsProps) {\r\n  const {selectedTab, isLazy} = useContext(TabContext);\r\n\r\n  // filter out falsy values, in case of conditional rendering\r\n  const panelArray = Children.toArray(children).filter(p => !!p);\r\n\r\n  let rendered: ReactNode;\r\n  if (isLazy) {\r\n    const el = panelArray[selectedTab] as ReactElement;\r\n    rendered = isValidElement(el)\r\n      ? cloneElement<TabPanelProps>(panelArray[selectedTab] as ReactElement, {\r\n          index: selectedTab,\r\n        })\r\n      : null;\r\n  } else {\r\n    rendered = panelArray.map((panel, index) => {\r\n      if (isValidElement<TabPanelsProps>(panel)) {\r\n        const isSelected = index === selectedTab;\r\n        return cloneElement<TabPanelProps>(panel, {\r\n          index,\r\n          'aria-hidden': !isSelected,\r\n          className: !isSelected\r\n            ? clsx(panel.props.className, 'hidden')\r\n            : panel.props.className,\r\n        });\r\n      }\r\n      return null;\r\n    });\r\n  }\r\n\r\n  return <div className={className}>{rendered}</div>;\r\n}\r\n\r\ninterface TabPanelProps extends ComponentPropsWithoutRef<'div'> {\r\n  className?: string;\r\n  children: ReactNode;\r\n  index?: number;\r\n}\r\nexport function TabPanel({\r\n  className,\r\n  children,\r\n  index,\r\n  ...domProps\r\n}: TabPanelProps) {\r\n  const {id} = useContext(TabContext);\r\n\r\n  const [tabIndex, setTabIndex] = useState<number | undefined>(0);\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  // The tabpanel should have tabIndex=0 when there are no tabbable elements within it.\r\n  // Otherwise, tabbing from the focused tab should go directly to the first tabbable element\r\n  // within the tabpanel.\r\n  useLayoutEffect(() => {\r\n    if (ref?.current) {\r\n      const update = () => {\r\n        // Detect if there are any tabbable elements and update the tabIndex accordingly.\r\n        const walker = getFocusableTreeWalker(ref.current!, {tabbable: true});\r\n        setTabIndex(walker.nextNode() ? undefined : 0);\r\n      };\r\n\r\n      update();\r\n\r\n      // Update when new elements are inserted, or the tabIndex/disabled attribute updates.\r\n      const observer = new MutationObserver(update);\r\n      observer.observe(ref.current, {\r\n        subtree: true,\r\n        childList: true,\r\n        attributes: true,\r\n        attributeFilter: ['tabIndex', 'disabled'],\r\n      });\r\n\r\n      return () => {\r\n        observer.disconnect();\r\n      };\r\n    }\r\n  }, [ref]);\r\n\r\n  return (\r\n    <div\r\n      tabIndex={tabIndex}\r\n      ref={ref}\r\n      id={`${id}-${index}-tabpanel`}\r\n      aria-labelledby={`${id}-${index}-tab`}\r\n      className={clsx(className, 'focus-visible:outline-primary-light')}\r\n      role=\"tabpanel\"\r\n      {...domProps}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import {useFormContext} from 'react-hook-form';\r\nimport {SettingsPanel} from '../settings-panel';\r\nimport {FormSwitch} from '../../../ui/forms/toggle/switch';\r\nimport {SettingsSeparator} from '../settings-separator';\r\nimport {LearnMoreLink} from '../learn-more-link';\r\nimport {AdminSettings} from '../admin-settings';\r\nimport {FormTextField} from '../../../ui/forms/input-field/text-field/text-field';\r\nimport {SettingsErrorGroup} from '../settings-error-group';\r\nimport {JsonChipField} from '../json-chip-field';\r\nimport {Tabs} from '../../../ui/tabs/tabs';\r\nimport {TabList} from '../../../ui/tabs/tab-list';\r\nimport {Tab} from '../../../ui/tabs/tab';\r\nimport {TabPanel, TabPanels} from '../../../ui/tabs/tab-panels';\r\nimport {Trans} from '../../../i18n/trans';\r\nimport {useTrans} from '../../../i18n/use-trans';\r\nimport {Fragment} from 'react';\r\n\r\nexport function SubscriptionSettings() {\r\n  const {trans} = useTrans();\r\n  return (\r\n    <SettingsPanel\r\n      title={<Trans message=\"Subscriptions\" />}\r\n      description={\r\n        <Trans message=\"Configure gateway integration, accepted cards, invoices and other related settings.\" />\r\n      }\r\n    >\r\n      <Tabs>\r\n        <TabList>\r\n          <Tab>\r\n            <Trans message=\"General\" />\r\n          </Tab>\r\n          <Tab>\r\n            <Trans message=\"Invoices\" />\r\n          </Tab>\r\n        </TabList>\r\n        <TabPanels className=\"pt-30\">\r\n          <TabPanel>\r\n            <FormSwitch\r\n              name=\"client.billing.enable\"\r\n              description={\r\n                <Trans message=\"Enable or disable all subscription related functionality across the site.\" />\r\n              }\r\n            >\r\n              <Trans message=\"Enable subscriptions\" />\r\n            </FormSwitch>\r\n            <SettingsSeparator />\r\n            <PaypalSection />\r\n            <StripeSection />\r\n            <SettingsSeparator />\r\n            <JsonChipField\r\n              label={<Trans message=\"Accepted cards\" />}\r\n              name=\"client.billing.accepted_cards\"\r\n              placeholder={trans({message: 'Add new card...'})}\r\n            />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <FormTextField\r\n              inputElementType=\"textarea\"\r\n              rows={5}\r\n              label={<Trans message=\"Invoice address\" />}\r\n              name=\"client.billing.invoice.address\"\r\n              className=\"mb-30\"\r\n            />\r\n            <FormTextField\r\n              inputElementType=\"textarea\"\r\n              rows={5}\r\n              label={<Trans message=\"Invoice notes\" />}\r\n              description={\r\n                <Trans message=\"Default notes to show under `notes` section of user invoice. Optional.\" />\r\n              }\r\n              name=\"client.billing.invoice.notes\"\r\n            />\r\n          </TabPanel>\r\n        </TabPanels>\r\n      </Tabs>\r\n    </SettingsPanel>\r\n  );\r\n}\r\n\r\nfunction PaypalSection() {\r\n  const {watch} = useFormContext<AdminSettings>();\r\n  const paypalIsEnabled = watch('client.billing.paypal.enable');\r\n  return (\r\n    <div className=\"mb-30\">\r\n      <FormSwitch\r\n        name=\"client.billing.paypal.enable\"\r\n        description={\r\n          <div>\r\n            <Trans message=\"Enable PayPal payment gateway integration.\" />\r\n            <LearnMoreLink\r\n              className=\"mt-6\"\r\n              link=\"https://support.vebto.com/help-center/articles/147/configuring-paypal\"\r\n            />\r\n          </div>\r\n        }\r\n      >\r\n        <Trans message=\"PayPal gateway\" />\r\n      </FormSwitch>\r\n      {paypalIsEnabled ? (\r\n        <SettingsErrorGroup name=\"paypal_group\">\r\n          {isInvalid => (\r\n            <Fragment>\r\n              <FormTextField\r\n                name=\"server.paypal_client_id\"\r\n                label={<Trans message=\"PayPal Client ID\" />}\r\n                required\r\n                invalid={isInvalid}\r\n                className=\"mb-20\"\r\n              />\r\n              <FormTextField\r\n                name=\"server.paypal_secret\"\r\n                label={<Trans message=\"PayPal Secret\" />}\r\n                required\r\n                invalid={isInvalid}\r\n                className=\"mb-20\"\r\n              />\r\n              <FormTextField\r\n                name=\"server.paypal_webhook_id\"\r\n                label={<Trans message=\"PayPal Webhook ID\" />}\r\n                required\r\n                invalid={isInvalid}\r\n                className=\"mb-20\"\r\n              />\r\n              <FormSwitch\r\n                name=\"client.billing.paypal_test_mode\"\r\n                invalid={isInvalid}\r\n                description={\r\n                  <div>\r\n                    <Trans message=\"Allows testing PayPal payments with sandbox accounts.\" />\r\n                  </div>\r\n                }\r\n              >\r\n                <Trans message=\"PayPal test mode\" />\r\n              </FormSwitch>\r\n            </Fragment>\r\n          )}\r\n        </SettingsErrorGroup>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction StripeSection() {\r\n  const {watch} = useFormContext<AdminSettings>();\r\n  const stripeEnabled = watch('client.billing.stripe.enable');\r\n  return (\r\n    <Fragment>\r\n      <FormSwitch\r\n        name=\"client.billing.stripe.enable\"\r\n        description={\r\n          <div>\r\n            <Trans message=\"Enable Stripe payment gateway integration.\" />\r\n            <LearnMoreLink\r\n              className=\"mt-6\"\r\n              link=\"https://support.vebto.com/help-center/articles/148/configuring-stripe\"\r\n            />\r\n          </div>\r\n        }\r\n      >\r\n        <Trans message=\"Stripe gateway\" />\r\n      </FormSwitch>\r\n      {stripeEnabled ? (\r\n        <SettingsErrorGroup name=\"stripe_group\" separatorBottom={false}>\r\n          {isInvalid => (\r\n            <Fragment>\r\n              <FormTextField\r\n                name=\"server.stripe_key\"\r\n                label={<Trans message=\"Stripe publishable key\" />}\r\n                required\r\n                className=\"mb-20\"\r\n                invalid={isInvalid}\r\n              />\r\n              <FormTextField\r\n                name=\"server.stripe_secret\"\r\n                label={<Trans message=\"Stripe secret key\" />}\r\n                required\r\n                className=\"mb-20\"\r\n                invalid={isInvalid}\r\n              />\r\n              <FormTextField\r\n                name=\"server.stripe_webhook_secret\"\r\n                label={<Trans message=\"Stripe webhook signing secret\" />}\r\n                className=\"mb-20\"\r\n                invalid={isInvalid}\r\n              />\r\n            </Fragment>\r\n          )}\r\n        </SettingsErrorGroup>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n}\r\n","import {FormSelect, Option} from '../../../ui/forms/select/select';\r\nimport {SettingsPanel} from '../settings-panel';\r\nimport {useValueLists} from '../../../http/value-lists';\r\nimport {Section} from '../../../ui/forms/listbox/section';\r\nimport {FormRadio} from '../../../ui/forms/radio-group/radio';\r\nimport {FormRadioGroup} from '../../../ui/forms/radio-group/radio-group';\r\nimport {DateFormatPresets, FormattedDate} from '../../../i18n/formatted-date';\r\nimport {FormSwitch} from '../../../ui/forms/toggle/switch';\r\nimport {Trans} from '../../../i18n/trans';\r\nimport {useCurrentDateTime} from '../../../i18n/use-current-date-time';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {message} from '@common/i18n/message';\r\n\r\nexport function LocalizationSettings() {\r\n  const {data} = useValueLists(['timezones', 'localizations']);\r\n  const today = useCurrentDateTime();\r\n  const {trans} = useTrans();\r\n  return (\r\n    <SettingsPanel\r\n      title={<Trans message=\"Localization\" />}\r\n      description={\r\n        <Trans message=\"Configure global date, time and language settings.\" />\r\n      }\r\n    >\r\n      <FormSelect\r\n        className=\"mb-30\"\r\n        required\r\n        name=\"client.dates.default_timezone\"\r\n        showSearchField\r\n        selectionMode=\"single\"\r\n        label={<Trans message=\"Default timezone\" />}\r\n        searchPlaceholder={trans(message('Search timezones'))}\r\n        description={\r\n          <Trans message=\"Which timezone should be selected by default for new users and guests.\" />\r\n        }\r\n      >\r\n        <Option key=\"auto\" value=\"auto\">\r\n          <Trans message=\"Auto\" />\r\n        </Option>\r\n        {Object.entries(data?.timezones || {}).map(([groupName, timezones]) => (\r\n          <Section key={groupName} label={groupName}>\r\n            {timezones.map(timezone => (\r\n              <Option key={timezone.value} value={timezone.value}>\r\n                {timezone.text}\r\n              </Option>\r\n            ))}\r\n          </Section>\r\n        ))}\r\n      </FormSelect>\r\n      <FormSelect\r\n        name=\"client.locale.default\"\r\n        className=\"mb-30\"\r\n        selectionMode=\"single\"\r\n        label={<Trans message=\"Default language\" />}\r\n        description={\r\n          <Trans message=\"Which localization should be selected by default for new users and guests.\" />\r\n        }\r\n      >\r\n        <Option key=\"auto\" value=\"auto\">\r\n          <Trans message=\"Auto\" />\r\n        </Option>\r\n        {(data?.localizations || []).map(locale => (\r\n          <Option key={locale.language} value={locale.language} capitalizeFirst>\r\n            {locale.name}\r\n          </Option>\r\n        ))}\r\n      </FormSelect>\r\n      <FormRadioGroup\r\n        required\r\n        className=\"mb-30\"\r\n        size=\"sm\"\r\n        name=\"client.dates.format\"\r\n        orientation=\"vertical\"\r\n        label={<Trans message=\"Date verbosity\" />}\r\n        description={\r\n          <Trans message=\"Default verbosity for all dates displayed across the site. Month/day order and separators will be adjusted automatically, based on user's locale.\" />\r\n        }\r\n      >\r\n        <FormRadio key=\"auto\" value=\"auto\">\r\n          <Trans message=\"Auto\" />\r\n        </FormRadio>\r\n        {Object.entries(DateFormatPresets).map(([format, options]) => (\r\n          <FormRadio key={format} value={format}>\r\n            <FormattedDate date={today} options={options} />\r\n          </FormRadio>\r\n        ))}\r\n      </FormRadioGroup>\r\n      <FormSwitch\r\n        name=\"client.i18n.enable\"\r\n        description={\r\n          <Trans message=\"If disabled, site will always be shown in default language and user will not be able to change their locale.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Enable translations\" />\r\n      </FormSwitch>\r\n    </SettingsPanel>\r\n  );\r\n}\r\n","import {useFormContext} from 'react-hook-form';\r\nimport {SettingsPanel} from '@common/admin/settings/settings-panel';\r\nimport {FormSwitch} from '@common/ui/forms/toggle/switch';\r\nimport {AdminSettings} from '@common/admin/settings/admin-settings';\r\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {SettingsErrorGroup} from '@common/admin/settings/settings-error-group';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Fragment} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\nimport {SettingsSeparator} from '@common/admin/settings/settings-separator';\r\nimport {Button} from '@common/ui/buttons/button';\r\n\r\nexport function AuthenticationSettings() {\r\n  return (\r\n    <SettingsPanel\r\n      title={<Trans message=\"Authentication\" />}\r\n      description={\r\n        <Trans message=\"Configure registration, social login and related 3rd party integrations.\" />\r\n      }\r\n    >\r\n      <EmailConfirmationSection />\r\n      <FormSwitch\r\n        className=\"mb-24\"\r\n        name=\"client.registration.disable\"\r\n        description={\r\n          <Trans message=\"All registration related functionality (including social login) will be disabled.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Disable registration\" />\r\n      </FormSwitch>\r\n      <FormSwitch\r\n        className=\"mb-24\"\r\n        name=\"client.single_device_login\"\r\n        description={\r\n          <Trans message=\"Only allow one device to be logged into user account at the same time.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Single device login\" />\r\n      </FormSwitch>\r\n      <FormSwitch\r\n        name=\"client.social.compact_buttons\"\r\n        description={\r\n          <Trans message=\"Use compact design for social login buttons.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Compact buttons\" />\r\n      </FormSwitch>\r\n      <EnvatoSection />\r\n      <GoogleSection />\r\n      <FacebookSection />\r\n      <TwitterSection />\r\n      <SettingsSeparator />\r\n      <FormTextField\r\n        inputElementType=\"textarea\"\r\n        rows={3}\r\n        className=\"mt-24\"\r\n        name=\"client.auth.domain_blacklist\"\r\n        label={<Trans message=\"Domain blacklist\" />}\r\n        description={\r\n          <Trans message=\"Comma separated list of domains. Users will not be able to register or login using any email adress from specified domains.\" />\r\n        }\r\n      />\r\n    </SettingsPanel>\r\n  );\r\n}\r\n\r\nexport function MailNotSetupWarning() {\r\n  const {watch} = useFormContext<AdminSettings>();\r\n  const mailSetup = watch('server.mail_setup');\r\n  if (mailSetup) return null;\r\n\r\n  return (\r\n    <p className=\"mt-10 rounded-panel border p-10 text-sm text-danger\">\r\n      <Trans\r\n        message=\"Outgoing mail method needs to be setup before enabling this setting. <a>Fix now</a>\"\r\n        values={{\r\n          a: text => (\r\n            <Button\r\n              elementType={Link}\r\n              variant=\"outline\"\r\n              size=\"xs\"\r\n              display=\"flex\"\r\n              className=\"mt-10 max-w-max\"\r\n              to=\"/admin/settings/outgoing-email\"\r\n            >\r\n              {text}\r\n            </Button>\r\n          ),\r\n        }}\r\n      />\r\n    </p>\r\n  );\r\n}\r\n\r\nfunction EmailConfirmationSection() {\r\n  return (\r\n    <FormSwitch\r\n      className=\"mb-30\"\r\n      name=\"client.require_email_confirmation\"\r\n      description={\r\n        <Fragment>\r\n          <Trans message=\"Require newly registered users to validate their email address before being able to login.\" />\r\n          <MailNotSetupWarning />\r\n        </Fragment>\r\n      }\r\n    >\r\n      <Trans message=\"Require email confirmation\" />\r\n    </FormSwitch>\r\n  );\r\n}\r\n\r\nfunction EnvatoSection() {\r\n  const {watch} = useFormContext<AdminSettings>();\r\n  const settings = useSettings();\r\n  const envatoLoginEnabled = watch('client.social.envato.enable');\r\n\r\n  if (!(settings as any).envato?.enable) return null;\r\n\r\n  return (\r\n    <SettingsErrorGroup separatorBottom={false} name=\"envato_group\">\r\n      {isInvalid => (\r\n        <>\r\n          <FormSwitch\r\n            invalid={isInvalid}\r\n            name=\"client.social.envato.enable\"\r\n            description={\r\n              <Trans message=\"Enable logging into the site via envato.\" />\r\n            }\r\n          >\r\n            <Trans message=\"Envato login\" />\r\n          </FormSwitch>\r\n          {!!envatoLoginEnabled && (\r\n            <>\r\n              <FormTextField\r\n                invalid={isInvalid}\r\n                className=\"mt-30\"\r\n                name=\"server.envato_id\"\r\n                label={<Trans message=\"Envato ID\" />}\r\n                required\r\n              />\r\n              <FormTextField\r\n                invalid={isInvalid}\r\n                className=\"mt-30\"\r\n                name=\"server.envato_secret\"\r\n                label={<Trans message=\"Envato secret\" />}\r\n                required\r\n              />\r\n              <FormTextField\r\n                invalid={isInvalid}\r\n                className=\"mt-30\"\r\n                name=\"server.envato_personal_token\"\r\n                label={<Trans message=\"Envato personal token\" />}\r\n                required\r\n              />\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </SettingsErrorGroup>\r\n  );\r\n}\r\n\r\nfunction GoogleSection() {\r\n  const {watch} = useFormContext<AdminSettings>();\r\n  const googleLoginEnabled = watch('client.social.google.enable');\r\n\r\n  return (\r\n    <SettingsErrorGroup name=\"google_group\">\r\n      {isInvalid => (\r\n        <>\r\n          <FormSwitch\r\n            invalid={isInvalid}\r\n            name=\"client.social.google.enable\"\r\n            description={\r\n              <Trans message=\"Enable logging into the site via google.\" />\r\n            }\r\n          >\r\n            <Trans message=\"Google login\" />\r\n          </FormSwitch>\r\n          {!!googleLoginEnabled && (\r\n            <>\r\n              <FormTextField\r\n                invalid={isInvalid}\r\n                className=\"mt-30\"\r\n                name=\"server.google_id\"\r\n                label={<Trans message=\"Google client ID\" />}\r\n                required\r\n              />\r\n              <FormTextField\r\n                className=\"mt-30\"\r\n                name=\"server.google_secret\"\r\n                label={<Trans message=\"Google client secret\" />}\r\n                required\r\n              />\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </SettingsErrorGroup>\r\n  );\r\n}\r\n\r\nfunction FacebookSection() {\r\n  const {watch} = useFormContext<AdminSettings>();\r\n  const facebookLoginEnabled = watch('client.social.facebook.enable');\r\n\r\n  return (\r\n    <SettingsErrorGroup name=\"facebook_group\" separatorTop={false}>\r\n      {isInvalid => (\r\n        <>\r\n          <FormSwitch\r\n            invalid={isInvalid}\r\n            name=\"client.social.facebook.enable\"\r\n            description={\r\n              <Trans message=\"Enable logging into the site via facebook.\" />\r\n            }\r\n          >\r\n            <Trans message=\"Facebook login\" />\r\n          </FormSwitch>\r\n          {!!facebookLoginEnabled && (\r\n            <>\r\n              <FormTextField\r\n                invalid={isInvalid}\r\n                className=\"mt-30\"\r\n                name=\"server.facebook_id\"\r\n                label={<Trans message=\"Facebook app ID\" />}\r\n                required\r\n              />\r\n              <FormTextField\r\n                invalid={isInvalid}\r\n                className=\"mt-30\"\r\n                name=\"server.facebook_secret\"\r\n                label={<Trans message=\"Facebook app secret\" />}\r\n                required\r\n              />\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </SettingsErrorGroup>\r\n  );\r\n}\r\n\r\nfunction TwitterSection() {\r\n  const {watch} = useFormContext<AdminSettings>();\r\n  const twitterLoginEnabled = watch('client.social.twitter.enable');\r\n\r\n  return (\r\n    <SettingsErrorGroup\r\n      name=\"twitter_group\"\r\n      separatorTop={false}\r\n      separatorBottom={false}\r\n    >\r\n      {isInvalid => (\r\n        <>\r\n          <FormSwitch\r\n            invalid={isInvalid}\r\n            name=\"client.social.twitter.enable\"\r\n            description={\r\n              <Trans message=\"Enable logging into the site via twitter.\" />\r\n            }\r\n          >\r\n            <Trans message=\"Twitter login\" />\r\n          </FormSwitch>\r\n          {!!twitterLoginEnabled && (\r\n            <>\r\n              <FormTextField\r\n                invalid={isInvalid}\r\n                className=\"mt-30\"\r\n                name=\"server.twitter_id\"\r\n                label={<Trans message=\"Twitter ID\" />}\r\n                required\r\n              />\r\n              <FormTextField\r\n                invalid={isInvalid}\r\n                className=\"mt-30\"\r\n                name=\"server.twitter_secret\"\r\n                label={<Trans message=\"Twitter secret\" />}\r\n                required\r\n              />\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </SettingsErrorGroup>\r\n  );\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {apiClient} from '@common/http/query-client';\r\n\r\nexport interface FetchMaxServerUploadSizeResponse extends BackendResponse {\r\n  maxSize: string;\r\n}\r\n\r\nfunction fetchMaxServerUploadSize(): Promise<FetchMaxServerUploadSizeResponse> {\r\n  return apiClient\r\n    .get('uploads/server-max-file-size')\r\n    .then(response => response.data);\r\n}\r\n\r\nexport function useMaxServerUploadSize() {\r\n  return useQuery({\r\n    queryKey: ['MaxServerUploadSize'],\r\n    queryFn: () => fetchMaxServerUploadSize(),\r\n  });\r\n}\r\n","export const spaceUnits = ['B', 'KB', 'MB', 'GB', 'TB', 'PB'];\r\n","export type SpaceUnit = 'KB' | 'MB' | 'GB' | 'TB' | 'PB';\r\n\r\nexport function convertToBytes(value: number, unit: SpaceUnit): number {\r\n  if (value == null) return 0;\r\n  switch (unit) {\r\n    case 'KB':\r\n      return value * 1024;\r\n    case 'MB':\r\n      return value * 1024 ** 2;\r\n    case 'GB':\r\n      return value * 1024 ** 3;\r\n    case 'TB':\r\n      return value * 1024 ** 4;\r\n    case 'PB':\r\n      return value * 1024 ** 5;\r\n    default:\r\n      return value;\r\n  }\r\n}\r\n","import {useController} from 'react-hook-form';\r\nimport {mergeProps} from '@react-aria/utils';\r\nimport React, {useEffect, useState} from 'react';\r\nimport memoize from 'nano-memoize';\r\nimport {\r\n  FormTextFieldProps,\r\n  TextField,\r\n  TextFieldProps,\r\n} from './text-field/text-field';\r\nimport {prettyBytes} from '../../../uploads/utils/pretty-bytes';\r\nimport {Option, Select} from '../select/select';\r\nimport {spaceUnits} from '../../../uploads/utils/space-units';\r\nimport {\r\n  convertToBytes,\r\n  SpaceUnit,\r\n} from '../../../uploads/utils/convert-to-bytes';\r\n\r\n// 99TB\r\nconst MaxValue = 108851651149824;\r\n\r\nexport const FormFileSizeField = React.forwardRef<\r\n  HTMLDivElement,\r\n  FormTextFieldProps\r\n>(({name, ...props}, ref) => {\r\n  const {\r\n    field: {\r\n      onChange: setByteValue,\r\n      onBlur,\r\n      value: byteValue = '',\r\n      ref: inputRef,\r\n    },\r\n    fieldState: {invalid, error},\r\n  } = useController({\r\n    name,\r\n  });\r\n\r\n  const [liveValue, setLiveValue] = useState<number | string>('');\r\n  const [unit, setUnit] = useState<SpaceUnit | string>('MB');\r\n\r\n  useEffect(() => {\r\n    if (byteValue == null || byteValue === '') {\r\n      setLiveValue('');\r\n      return;\r\n    }\r\n    const {amount, unit: newUnit} = fromBytes({\r\n      bytes: Math.min(byteValue, MaxValue),\r\n    });\r\n    setUnit(newUnit || 'MB');\r\n    setLiveValue(Number.isNaN(amount) ? '' : amount);\r\n  }, [byteValue, unit]);\r\n\r\n  const formProps: TextFieldProps = {\r\n    onChange: e => {\r\n      const value = parseInt(e.target.value);\r\n      if (Number.isNaN(value)) {\r\n        setByteValue(value);\r\n      } else {\r\n        const newBytes = convertToBytes(\r\n          parseInt(e.target.value),\r\n          unit as SpaceUnit\r\n        );\r\n        setByteValue(newBytes);\r\n      }\r\n    },\r\n    onBlur,\r\n    value: liveValue,\r\n    invalid,\r\n    errorMessage: error?.message,\r\n    inputRef,\r\n  };\r\n\r\n  const unitSelect = (\r\n    <Select\r\n      minWidth=\"min-w-80\"\r\n      selectionMode=\"single\"\r\n      selectedValue={unit}\r\n      disabled={!byteValue}\r\n      onSelectionChange={newUnit => {\r\n        const newBytes = convertToBytes(\r\n          (liveValue || 0) as number,\r\n          newUnit as SpaceUnit\r\n        );\r\n        setByteValue(newBytes);\r\n      }}\r\n    >\r\n      {spaceUnits.slice(0, 5).map(u => (\r\n        <Option value={u} key={u}>\r\n          {u === 'B' ? 'Bytes' : u}\r\n        </Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n\r\n  return (\r\n    <TextField\r\n      {...mergeProps(formProps, props)}\r\n      type=\"number\"\r\n      ref={ref}\r\n      endAppend={unitSelect}\r\n    />\r\n  );\r\n});\r\n\r\nconst fromBytes = memoize(\r\n  ({bytes}: {bytes: number}): {amount: number | string; unit: SpaceUnit} => {\r\n    const pretty = prettyBytes(bytes);\r\n    if (!pretty) return {amount: '', unit: 'MB'};\r\n    let amount = parseInt(pretty.split(' ')[0]);\r\n    // get rid of any punctuation\r\n    amount = Math.round(amount);\r\n    return {amount, unit: pretty.split(' ')[1] as SpaceUnit};\r\n  }\r\n);\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient} from '../../../../http/query-client';\r\nimport {useTrans} from '../../../../i18n/use-trans';\r\nimport {BackendResponse} from '../../../../http/backend-response/backend-response';\r\nimport {showHttpErrorToast} from '../../../../utils/http/show-http-error-toast';\r\nimport {message} from '../../../../i18n/message';\r\nimport {toast} from '../../../../ui/toast/toast';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\nexport function useUploadS3Cors() {\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: () => uploadCors(),\r\n    onSuccess: () => {\r\n      toast(trans(message('CORS file updated')));\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction uploadCors(): Promise<Response> {\r\n  return apiClient.post('s3/cors/upload').then(r => r.data);\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient} from '../../../../../http/query-client';\r\nimport {BackendResponse} from '../../../../../http/backend-response/backend-response';\r\nimport {showHttpErrorToast} from '../../../../../utils/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {\r\n  refreshToken: string;\r\n}\r\n\r\ninterface Payload {\r\n  app_key: string;\r\n  app_secret: string;\r\n  access_code: string;\r\n}\r\n\r\nexport function useGenerateDropboxRefreshToken() {\r\n  return useMutation({\r\n    mutationFn: (props: Payload) => generateToken(props),\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction generateToken(payload: Payload): Promise<Response> {\r\n  return apiClient\r\n    .post('settings/uploading/dropbox-refresh-token', payload)\r\n    .then(r => r.data);\r\n}\r\n","import {Fragment} from 'react';\r\nimport {FormTextField} from '../../../../../ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '../../../../../i18n/trans';\r\nimport {CredentialFormProps} from '../uploading-settings';\r\nimport {Button} from '../../../../../ui/buttons/button';\r\nimport {Dialog} from '../../../../../ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '../../../../../ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '../../../../../ui/overlays/dialog/dialog-body';\r\nimport {useForm, useFormContext} from 'react-hook-form';\r\nimport {Form} from '../../../../../ui/forms/form';\r\nimport {DialogTrigger} from '../../../../../ui/overlays/dialog/dialog-trigger';\r\nimport {AdminSettings} from '../../../admin-settings';\r\nimport {DialogFooter} from '../../../../../ui/overlays/dialog/dialog-footer';\r\nimport {useDialogContext} from '../../../../../ui/overlays/dialog/dialog-context';\r\nimport {useGenerateDropboxRefreshToken} from './use-generate-dropbox-refresh-token';\r\n\r\nexport function DropboxForm({isInvalid}: CredentialFormProps) {\r\n  const {watch, setValue} = useFormContext<AdminSettings>();\r\n  const appKey = watch('server.storage_dropbox_app_key');\r\n  const appSecret = watch('server.storage_dropbox_app_secret');\r\n\r\n  return (\r\n    <Fragment>\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-20\"\r\n        name=\"server.storage_dropbox_app_key\"\r\n        label={<Trans message=\"Dropbox application key\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-20\"\r\n        name=\"server.storage_dropbox_app_secret\"\r\n        label={<Trans message=\"Dropbox application secret\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-20\"\r\n        name=\"server.storage_dropbox_refresh_token\"\r\n        label={<Trans message=\"Dropbox refresh token\" />}\r\n        required\r\n      />\r\n      <DialogTrigger\r\n        type=\"modal\"\r\n        onClose={refreshToken => {\r\n          if (refreshToken) {\r\n            setValue('server.storage_dropbox_refresh_token', refreshToken);\r\n          }\r\n        }}\r\n      >\r\n        <Button\r\n          variant=\"outline\"\r\n          color=\"primary\"\r\n          size=\"xs\"\r\n          disabled={!appKey || !appSecret}\r\n        >\r\n          <Trans message=\"Get dropbox refresh token\" />\r\n        </Button>\r\n        <DropboxRefreshTokenDialog appKey={appKey!} appSecret={appSecret!} />\r\n      </DialogTrigger>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface DropboxRefreshTokenDialogProps {\r\n  appKey: string;\r\n  appSecret: string;\r\n}\r\nfunction DropboxRefreshTokenDialog({\r\n  appKey,\r\n  appSecret,\r\n}: DropboxRefreshTokenDialogProps) {\r\n  const form = useForm<{accessCode: string}>();\r\n  const {formId, close} = useDialogContext();\r\n  const generateRefreshToken = useGenerateDropboxRefreshToken();\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Connected dropbox account\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Form\r\n          id={formId}\r\n          form={form}\r\n          onSubmit={data => {\r\n            generateRefreshToken.mutate(\r\n              {\r\n                app_key: appKey,\r\n                app_secret: appSecret,\r\n                access_code: data.accessCode,\r\n              },\r\n              {\r\n                onSuccess: response => {\r\n                  close(response.refreshToken);\r\n                },\r\n              },\r\n            );\r\n          }}\r\n        >\r\n          <div className=\"mb-20 pb-20 border-b\">\r\n            <div className=\"text-muted text-sm mb-10\">\r\n              <Trans message=\"Click the 'get access code' button to get dropbox access code, then paste it into the field below.\" />\r\n            </div>\r\n            <Button\r\n              variant=\"outline\"\r\n              color=\"primary\"\r\n              size=\"xs\"\r\n              elementType=\"a\"\r\n              target=\"_blank\"\r\n              href={`https://www.dropbox.com/oauth2/authorize?client_id=${appKey}&token_access_type=offline&response_type=code`}\r\n            >\r\n              <Trans message=\"Get access code\" />\r\n            </Button>\r\n          </div>\r\n          <FormTextField\r\n            name=\"accessCode\"\r\n            label={<Trans message=\"Dropbox access code\" />}\r\n            required\r\n          />\r\n        </Form>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button\r\n          onClick={() => {\r\n            close();\r\n          }}\r\n        >\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          form={formId}\r\n          type=\"submit\"\r\n          disabled={!appKey || !appSecret || generateRefreshToken.isPending}\r\n        >\r\n          <Trans message=\"Connect\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {useFormContext} from 'react-hook-form';\r\nimport {SettingsPanel} from '../../settings-panel';\r\nimport {FormSelect, Option} from '../../../../ui/forms/select/select';\r\nimport {AdminSettings} from '../../admin-settings';\r\nimport {SettingsErrorGroup} from '../../settings-error-group';\r\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {FormSwitch} from '@common/ui/forms/toggle/switch';\r\nimport {FormRadioGroup} from '@common/ui/forms/radio-group/radio-group';\r\nimport {FormRadio} from '@common/ui/forms/radio-group/radio';\r\nimport {SectionHelper} from '@common/ui/section-helper';\r\nimport {useMaxServerUploadSize} from './max-server-upload-size';\r\nimport {SettingsSeparator} from '../../settings-separator';\r\nimport {JsonChipField} from '../../json-chip-field';\r\nimport {FormFileSizeField} from '@common/ui/forms/input-field/file-size-field';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Fragment} from 'react';\r\nimport {useUploadS3Cors} from './use-upload-s3-cors';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {DropboxForm} from './dropbox-form/dropbox-form';\r\nimport {useAdminSettings} from '../../requests/use-admin-settings';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {message} from '@common/i18n/message';\r\n\r\nexport function UploadingSettings() {\r\n  const {trans} = useTrans();\r\n  return (\r\n    <SettingsPanel\r\n      title={<Trans message=\"Uploading\" />}\r\n      description={\r\n        <Trans message=\"Configure size and type of files that users are able to upload. This will affect all uploads across the site.\" />\r\n      }\r\n    >\r\n      <PrivateUploadSection />\r\n      <PublicUploadSection />\r\n      <CredentialsSection />\r\n      <SettingsErrorGroup name=\"static_delivery_group\">\r\n        {isInvalid => (\r\n          <FormRadioGroup\r\n            invalid={isInvalid}\r\n            size=\"sm\"\r\n            name=\"server.static_file_delivery\"\r\n            orientation=\"vertical\"\r\n            label={<Trans message=\"File delivery optimization\" />}\r\n            description={\r\n              <Trans message=\"Both X-Sendfile and X-Accel need to be enabled on the server first. When enabled, it will reduce server memory and CPU usage when previewing or downloading files, especially for large files.\" />\r\n            }\r\n          >\r\n            <FormRadio value=\"\">\r\n              <Trans message=\"None\" />\r\n            </FormRadio>\r\n            <FormRadio value=\"xsendfile\">\r\n              <Trans message=\"X-Sendfile (Apache)\" />\r\n            </FormRadio>\r\n            <FormRadio value=\"xaccel\">\r\n              <Trans message=\"X-Accel (Nginx)\" />\r\n            </FormRadio>\r\n          </FormRadioGroup>\r\n        )}\r\n      </SettingsErrorGroup>\r\n      <FormFileSizeField\r\n        className=\"mb-30\"\r\n        name=\"client.uploads.chunk_size\"\r\n        min={1}\r\n        label={<Trans message=\"Chunk size\" />}\r\n        placeholder=\"Infinity\"\r\n        description={\r\n          <Trans message=\"Size (in bytes) for each file chunk. It should only be changed if there is a maximum upload size on your server or proxy (for example cloudflare). If chunk size is larger then limit on the server, uploads will fail.\" />\r\n        }\r\n      />\r\n      <MaxUploadSizeSection />\r\n      <SettingsSeparator />\r\n      <FormFileSizeField\r\n        min={1}\r\n        name=\"client.uploads.max_size\"\r\n        className=\"mb-30\"\r\n        label={<Trans message=\"Maximum file size\" />}\r\n        description={\r\n          <Trans message=\"Maximum size (in bytes) for a single file user can upload.\" />\r\n        }\r\n      />\r\n      <FormFileSizeField\r\n        min={1}\r\n        name=\"client.uploads.available_space\"\r\n        className=\"mb-30\"\r\n        label={<Trans message=\"Available space\" />}\r\n        description={\r\n          <Trans message=\"Disk space (in bytes) each user uploads are allowed to take up. This can be overridden per user.\" />\r\n        }\r\n      />\r\n      <JsonChipField\r\n        name=\"client.uploads.allowed_extensions\"\r\n        className=\"mb-30\"\r\n        label={<Trans message=\"Allowed extensions\" />}\r\n        placeholder={trans(message('Add extension...'))}\r\n        description={\r\n          <Trans message=\"List of allowed file types (jpg, mp3, pdf etc.). Leave empty to allow all file types.\" />\r\n        }\r\n      />\r\n      <JsonChipField\r\n        name=\"client.uploads.blocked_extensions\"\r\n        label={<Trans message=\"Blocked extensions\" />}\r\n        placeholder={trans(message('Add extension...'))}\r\n        description={\r\n          <Trans message=\"Prevent uploading of these file types, even if they are allowed above.\" />\r\n        }\r\n      />\r\n    </SettingsPanel>\r\n  );\r\n}\r\n\r\nfunction MaxUploadSizeSection() {\r\n  const {data} = useMaxServerUploadSize();\r\n  return (\r\n    <SectionHelper\r\n      color=\"warning\"\r\n      description={\r\n        <Trans\r\n          message=\"Maximum upload size on your server currently is set to <b>:size</b>\"\r\n          values={{size: data?.maxSize, b: chunks => <b>{chunks}</b>}}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction PrivateUploadSection() {\r\n  const {watch, clearErrors} = useFormContext<AdminSettings>();\r\n  const isEnabled = watch('server.uploads_disk_driver');\r\n\r\n  if (!isEnabled) return null;\r\n\r\n  return (\r\n    <FormSelect\r\n      className=\"mb-30\"\r\n      selectionMode=\"single\"\r\n      name=\"server.uploads_disk_driver\"\r\n      label={<Trans message=\"User Uploads Storage Method\" />}\r\n      description={\r\n        <Trans message=\"Where should user private file uploads be stored.\" />\r\n      }\r\n      onSelectionChange={() => {\r\n        clearErrors();\r\n      }}\r\n    >\r\n      <Option value=\"local\">\r\n        <Trans message=\"Local Disk (Default)\" />\r\n      </Option>\r\n      <Option value=\"ftp\">FTP</Option>\r\n      <Option value=\"digitalocean_s3\">DigitalOcean Spaces</Option>\r\n      <Option value=\"backblaze_s3\">Backblaze</Option>\r\n      <Option value=\"s3\">Amazon S3 (Or compatible service)</Option>\r\n      <Option value=\"dropbox\">Dropbox</Option>\r\n      <Option value=\"rackspace\">Rackspace</Option>\r\n    </FormSelect>\r\n  );\r\n}\r\n\r\nfunction PublicUploadSection() {\r\n  const {watch, clearErrors} = useFormContext<AdminSettings>();\r\n  const isEnabled = watch('server.public_disk_driver');\r\n\r\n  if (!isEnabled) return null;\r\n\r\n  return (\r\n    <FormSelect\r\n      label={<Trans message=\"Public Uploads Storage Method\" />}\r\n      selectionMode=\"single\"\r\n      name=\"server.public_disk_driver\"\r\n      description={\r\n        <Trans message=\"Where should user public uploads (like avatars) be stored.\" />\r\n      }\r\n      onSelectionChange={() => {\r\n        clearErrors();\r\n      }}\r\n    >\r\n      <Option value=\"local\">\r\n        <Trans message=\"Local Disk (Default)\" />\r\n      </Option>\r\n      <Option value=\"s3\">Amazon S3</Option>\r\n      <Option value=\"ftp\">FTP</Option>\r\n      <Option value=\"digitalocean_s3\">DigitalOcean Spaces</Option>\r\n      <Option value=\"backblaze_s3\">Backblaze</Option>\r\n    </FormSelect>\r\n  );\r\n}\r\n\r\nfunction CredentialsSection() {\r\n  const {watch} = useFormContext<AdminSettings>();\r\n  const drives = [\r\n    watch('server.uploads_disk_driver'),\r\n    watch('server.public_disk_driver'),\r\n  ];\r\n\r\n  if (drives[0] === 'local' && drives[1] === 'local') {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <SettingsErrorGroup separatorBottom={false} name=\"storage_group\">\r\n      {isInvalid => {\r\n        if (drives.includes('s3')) {\r\n          return <S3Form isInvalid={isInvalid} />;\r\n        }\r\n        if (drives.includes('ftp')) {\r\n          return <FtpForm isInvalid={isInvalid} />;\r\n        }\r\n        if (drives.includes('dropbox')) {\r\n          return <DropboxForm isInvalid={isInvalid} />;\r\n        }\r\n        if (drives.includes('digitalocean_s3')) {\r\n          return <DigitalOceanForm isInvalid={isInvalid} />;\r\n        }\r\n        if (drives.includes('backblaze_s3')) {\r\n          return <BackblazeForm isInvalid={isInvalid} />;\r\n        }\r\n      }}\r\n    </SettingsErrorGroup>\r\n  );\r\n}\r\n\r\nexport interface CredentialFormProps {\r\n  isInvalid: boolean;\r\n}\r\nfunction S3Form({isInvalid}: CredentialFormProps) {\r\n  return (\r\n    <Fragment>\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_s3_key\"\r\n        label={<Trans message=\"Amazon S3 key\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_s3_secret\"\r\n        label={<Trans message=\"Amazon S3 secret\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_s3_region\"\r\n        label={<Trans message=\"Amazon S3 region\" />}\r\n        pattern=\"[a-z1-9\\-]+\"\r\n        placeholder=\"us-east-1\"\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_s3_bucket\"\r\n        label={<Trans message=\"Amazon S3 bucket\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        name=\"server.storage_s3_endpoint\"\r\n        label={<Trans message=\"Amazon S3 endpoint\" />}\r\n        description={\r\n          <Trans message=\"Only change endpoint if you are using another S3 compatible storage service.\" />\r\n        }\r\n      />\r\n      <S3DirectUploadField invalid={isInvalid} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction DigitalOceanForm({isInvalid}: CredentialFormProps) {\r\n  return (\r\n    <Fragment>\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_digitalocean_key\"\r\n        label={<Trans message=\"DigitalOcean key\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_digitalocean_secret\"\r\n        label={<Trans message=\"DigitalOcean secret\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_digitalocean_region\"\r\n        label={<Trans message=\"DigitalOcean region\" />}\r\n        pattern=\"[a-z0-9\\-]+\"\r\n        placeholder=\"us-east-1\"\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_digitalocean_bucket\"\r\n        label={<Trans message=\"DigitalOcean bucket\" />}\r\n        required\r\n      />\r\n      <S3DirectUploadField invalid={isInvalid} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction BackblazeForm({isInvalid}: CredentialFormProps) {\r\n  return (\r\n    <Fragment>\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_backblaze_key\"\r\n        label={<Trans message=\"Backblaze KeyID\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_backblaze_secret\"\r\n        label={<Trans message=\"Backblaze applicationKey\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_backblaze_region\"\r\n        label={<Trans message=\"Backblaze Region\" />}\r\n        pattern=\"[a-z0-9\\-]+\"\r\n        placeholder=\"us-west-002\"\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_backblaze_bucket\"\r\n        label={<Trans message=\"Backblaze bucket name\" />}\r\n        required\r\n      />\r\n      <S3DirectUploadField invalid={isInvalid} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface S3DirectUploadFieldProps {\r\n  invalid: boolean;\r\n}\r\nfunction S3DirectUploadField({invalid}: S3DirectUploadFieldProps) {\r\n  const uploadCors = useUploadS3Cors();\r\n  const {data: defaultSettings} = useAdminSettings();\r\n\r\n  const s3DriverEnabled =\r\n    defaultSettings?.server.uploads_disk_driver?.endsWith('s3') ||\r\n    defaultSettings?.server.public_disk_driver?.endsWith('s3');\r\n\r\n  return (\r\n    <Fragment>\r\n      <FormSwitch\r\n        className=\"mt-30\"\r\n        invalid={invalid}\r\n        name=\"client.uploads.s3_direct_upload\"\r\n        description={\r\n          <div>\r\n            <p>\r\n              <Trans message=\"Upload files directly from the browser to s3 without going through the server. It will save on server bandwidth and should result in faster upload times. This should be enabled, unless storage provider does not support multipart uploads.\" />\r\n            </p>\r\n            <p className=\"mt-10\">\r\n              <Trans message=\"If s3 provider is not configured to allow uploads from browser, this can be done automatically via CORS button below, when valid credentials are saved.\" />\r\n            </p>\r\n          </div>\r\n        }\r\n      >\r\n        <Trans message=\"Direct upload\" />\r\n      </FormSwitch>\r\n      <Button\r\n        variant=\"flat\"\r\n        color=\"primary\"\r\n        size=\"xs\"\r\n        className=\"mt-20\"\r\n        onClick={() => {\r\n          uploadCors.mutate();\r\n        }}\r\n        disabled={!s3DriverEnabled || uploadCors.isPending}\r\n      >\r\n        <Trans message=\"Configure CORS\" />\r\n      </Button>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction FtpForm({isInvalid}: CredentialFormProps) {\r\n  return (\r\n    <>\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_ftp_host\"\r\n        label={<Trans message=\"FTP hostname\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_ftp_username\"\r\n        label={<Trans message=\"FTP username\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_ftp_password\"\r\n        label={<Trans message=\"FTP password\" />}\r\n        type=\"password\"\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_ftp_root\"\r\n        label={<Trans message=\"FTP directory\" />}\r\n        placeholder=\"/\"\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.storage_ftp_port\"\r\n        label={<Trans message=\"FTP port\" />}\r\n        type=\"number\"\r\n        min={0}\r\n        placeholder=\"21\"\r\n      />\r\n      <FormSwitch\r\n        invalid={isInvalid}\r\n        name=\"server.storage_ftp_passive\"\r\n        className=\"mb-30\"\r\n      >\r\n        <Trans message=\"Passive\" />\r\n      </FormSwitch>\r\n      <FormSwitch invalid={isInvalid} name=\"server.storage_ftp_ssl\">\r\n        <Trans message=\"SSL\" />\r\n      </FormSwitch>\r\n    </>\r\n  );\r\n}\r\n","import {Fragment} from 'react';\r\nimport {FormTextField} from '../../../../ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '../../../../i18n/trans';\r\n\r\nexport interface MailgunCredentialsProps {\r\n  isInvalid: boolean;\r\n}\r\nexport function MailgunCredentials({isInvalid}: MailgunCredentialsProps) {\r\n  return (\r\n    <Fragment>\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.mailgun_domain\"\r\n        label={<Trans message=\"Mailgun domain\" />}\r\n        description={\r\n          <Trans message=\"Usually the domain of your site (site.com)\" />\r\n        }\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.mailgun_secret\"\r\n        label={<Trans message=\"Mailgun API key\" />}\r\n        description={<Trans message=\"Should start with `key-`\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        name=\"server.mailgun_endpoint\"\r\n        label={<Trans message=\"Mailgun endpoint\" />}\r\n        description={\r\n          <Trans message=\"Can be left empty, if your mailgun account is in the US region.\" />\r\n        }\r\n        placeholder=\"api.eu.mailgun.net\"\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n","import {FormTextField} from '../../../../ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '../../../../i18n/trans';\r\nimport {FormSelect} from '@common/ui/forms/select/select';\r\nimport {Item} from '@common/ui/forms/listbox/item';\r\n\r\nexport interface SmtpCredentialsProps {\r\n  isInvalid: boolean;\r\n}\r\nexport function SmtpCredentials({isInvalid}: SmtpCredentialsProps) {\r\n  return (\r\n    <>\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.mail_host\"\r\n        label={<Trans message=\"SMTP host\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.mail_username\"\r\n        label={<Trans message=\"SMTP username\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        type=\"password\"\r\n        name=\"server.mail_password\"\r\n        label={<Trans message=\"SMTP password\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        type=\"number\"\r\n        name=\"server.mail_port\"\r\n        label={<Trans message=\"SMTP port\" />}\r\n      />\r\n      <FormSelect\r\n        selectionMode=\"single\"\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.mail_encryption\"\r\n        label={<Trans message=\"SMTP encryption\" />}\r\n      >\r\n        <Item value=\"\">\r\n          <Trans message=\"None\" />\r\n        </Item>\r\n        <Item value=\"tls\">\r\n          <Trans message=\"TLS\" />\r\n        </Item>\r\n      </FormSelect>\r\n    </>\r\n  );\r\n}\r\n","import {FormTextField} from '../../../../ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '../../../../i18n/trans';\r\nimport {Fragment} from 'react';\r\n\r\nexport interface SesCredentialsProps {\r\n  isInvalid: boolean;\r\n}\r\nexport function SesCredentials({isInvalid}: SesCredentialsProps) {\r\n  return (\r\n    <Fragment>\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.ses_key\"\r\n        label={<Trans message=\"SES key\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.ses_secret\"\r\n        label={<Trans message=\"SES secret\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        name=\"server.ses_region\"\r\n        label={<Trans message=\"SES region\" />}\r\n        placeholder=\"us-east-1\"\r\n        required\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n","import {FormTextField} from '../../../../ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '../../../../i18n/trans';\r\n\r\nexport interface PostmarkCredentialsProps {\r\n  isInvalid: boolean;\r\n}\r\nexport function PostmarkCredentials({isInvalid}: PostmarkCredentialsProps) {\r\n  return (\r\n    <FormTextField\r\n      invalid={isInvalid}\r\n      name=\"server.postmark_token\"\r\n      label={<Trans message=\"Postmark token\" />}\r\n      required\r\n    />\r\n  );\r\n}\r\n","import {createSvgIcon} from '../../../../icons/create-svg-icon';\r\n\r\nexport const GmailIcon = createSvgIcon(\r\n  [\r\n    <path\r\n      key=\"0\"\r\n      fill=\"#4caf50\"\r\n      d=\"M45,16.2l-5,2.75l-5,4.75L35,40h7c1.657,0,3-1.343,3-3V16.2z\"\r\n    />,\r\n    <path\r\n      key=\"1\"\r\n      fill=\"#1e88e5\"\r\n      d=\"M3,16.2l3.614,1.71L13,23.7V40H6c-1.657,0-3-1.343-3-3V16.2z\"\r\n    />,\r\n    <polygon\r\n      key=\"2\"\r\n      fill=\"#e53935\"\r\n      points=\"35,11.2 24,19.45 13,11.2 12,17 13,23.7 24,31.95 35,23.7 36,17\"\r\n    />,\r\n    <path\r\n      key=\"3\"\r\n      fill=\"#c62828\"\r\n      d=\"M3,12.298V16.2l10,7.5V11.2L9.876,8.859C9.132,8.301,8.228,8,7.298,8h0C4.924,8,3,9.924,3,12.298z\"\r\n    />,\r\n    <path\r\n      key=\"4\"\r\n      fill=\"#fbc02d\"\r\n      d=\"M45,12.298V16.2l-10,7.5V11.2l3.124-2.341C38.868,8.301,39.772,8,40.702,8h0 C43.076,8,45,9.924,45,12.298z\"\r\n    />,\r\n  ],\r\n  'Gmail',\r\n  '0 0 48 48'\r\n);\r\n","import {useFormContext} from 'react-hook-form';\r\nimport {AdminSettings} from '../../admin-settings';\r\nimport {useSocialLogin} from '../../../../auth/requests/use-social-login';\r\nimport {toast} from '../../../../ui/toast/toast';\r\nimport {message} from '../../../../i18n/message';\r\nimport {Button} from '../../../../ui/buttons/button';\r\nimport {GmailIcon} from './gmail-icon';\r\nimport {Trans} from '../../../../i18n/trans';\r\nimport {Fragment} from 'react';\r\n\r\nexport function ConnectGmailPanel() {\r\n  const {watch, setValue} = useFormContext<AdminSettings>();\r\n  const {connectSocial} = useSocialLogin();\r\n  const connectedEmail = watch('server.connectedGmailAccount');\r\n\r\n  const handleGmailConnect = async () => {\r\n    const e = await connectSocial('secure/settings/mail/gmail/connect');\r\n    if (e?.status === 'SUCCESS') {\r\n      const email = (e.callbackData as any).profile.email;\r\n      setValue('server.connectedGmailAccount', email);\r\n      toast(message('Connected gmail account: :email', {values: {email}}));\r\n    }\r\n  };\r\n\r\n  const connectButton = (\r\n    <Button\r\n      variant=\"outline\"\r\n      color=\"primary\"\r\n      startIcon={<GmailIcon />}\r\n      onClick={() => {\r\n        handleGmailConnect();\r\n      }}\r\n    >\r\n      <Trans message=\"Connect gmail account\" />\r\n    </Button>\r\n  );\r\n\r\n  const reconnectPanel = (\r\n    <div className=\"flex items-center gap-14 rounded border bg-alt px-14 py-6 text-sm\">\r\n      <GmailIcon size=\"lg\" />\r\n      {connectedEmail}\r\n      <Button\r\n        variant=\"text\"\r\n        color=\"primary\"\r\n        className=\"ml-auto\"\r\n        onClick={() => {\r\n          handleGmailConnect();\r\n        }}\r\n      >\r\n        <Trans message=\"Reconnect\" />\r\n      </Button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mb-6 text-sm\">\r\n        <Trans message=\"Gmail account\" />\r\n      </div>\r\n      {connectedEmail ? reconnectPanel : connectButton}\r\n    </Fragment>\r\n  );\r\n}\r\n","import {useFormContext} from 'react-hook-form';\r\nimport {AdminSettings} from '../../admin-settings';\r\nimport {ComponentType, Fragment} from 'react';\r\nimport {MailgunCredentials} from './mailgun-credentials';\r\nimport {SmtpCredentials} from './smtp-credentials';\r\nimport {SesCredentials} from './ses-credentials';\r\nimport {PostmarkCredentials} from './postmark-credentials';\r\nimport {ConnectGmailPanel} from './connect-gmail-panel';\r\nimport {SettingsErrorGroup} from '../../settings-error-group';\r\nimport {FormSelect, Option} from '../../../../ui/forms/select/select';\r\nimport {Trans} from '../../../../i18n/trans';\r\nimport {LearnMoreLink} from '../../learn-more-link';\r\n\r\nexport function OutgoingMailGroup() {\r\n  const {watch, clearErrors} = useFormContext<AdminSettings>();\r\n\r\n  const selectedDriver = watch('server.mail_driver');\r\n  const credentialForms: ComponentType<{isInvalid: boolean}>[] = [];\r\n\r\n  if (selectedDriver === 'mailgun') {\r\n    credentialForms.push(MailgunCredentials);\r\n  }\r\n  if (selectedDriver === 'smtp') {\r\n    credentialForms.push(SmtpCredentials);\r\n  }\r\n  if (selectedDriver === 'ses') {\r\n    credentialForms.push(SesCredentials);\r\n  }\r\n  if (selectedDriver === 'postmark') {\r\n    credentialForms.push(PostmarkCredentials);\r\n  }\r\n  if (selectedDriver === 'gmailApi') {\r\n    credentialForms.push(ConnectGmailPanel);\r\n  }\r\n\r\n  return (\r\n    <SettingsErrorGroup\r\n      separatorTop={false}\r\n      separatorBottom={false}\r\n      name=\"mail_group\"\r\n    >\r\n      {isInvalid => (\r\n        <Fragment>\r\n          <FormSelect\r\n            onSelectionChange={() => {\r\n              clearErrors();\r\n            }}\r\n            invalid={isInvalid}\r\n            selectionMode=\"single\"\r\n            name=\"server.mail_driver\"\r\n            label={<Trans message=\"Outgoing mail method\" />}\r\n            description={\r\n              <div>\r\n                <Trans message=\"Which method should be used for sending outgoing application emails (like registration confirmation)\" />\r\n                <LearnMoreLink\r\n                  className=\"mt-8\"\r\n                  link=\"https://support.vebto.com/help-center/articles/42/44/155/incoming-emails\"\r\n                />\r\n              </div>\r\n            }\r\n          >\r\n            <Option value=\"mailgun\">Mailgun</Option>\r\n            <Option value=\"gmailApi\">Gmail Api</Option>\r\n            <Option value=\"smtp\">SMTP</Option>\r\n            <Option value=\"postmark\">Postmark</Option>\r\n            <Option value=\"ses\">Ses (Amazon Simple Email Service)</Option>\r\n            <Option value=\"sendmail\">SendMail</Option>\r\n            <Option value=\"log\">Log (Email will be saved to error log)</Option>\r\n          </FormSelect>\r\n          {credentialForms.length ? (\r\n            <div className=\"mt-30\">\r\n              {credentialForms.map((CredentialsForm, index) => (\r\n                <CredentialsForm key={index} isInvalid={isInvalid} />\r\n              ))}\r\n            </div>\r\n          ) : null}\r\n        </Fragment>\r\n      )}\r\n    </SettingsErrorGroup>\r\n  );\r\n}\r\n","import {SettingsPanel} from '../../settings-panel';\r\nimport {FormTextField} from '../../../../ui/forms/input-field/text-field/text-field';\r\nimport {ExternalLink} from '../../../../ui/buttons/external-link';\r\nimport {SectionHelper} from '../../../../ui/section-helper';\r\nimport {SettingsSeparator} from '../../settings-separator';\r\nimport {Trans} from '../../../../i18n/trans';\r\nimport {OutgoingMailGroup} from './outgoing-mail-group';\r\nimport {useSettings} from '../../../../core/settings/use-settings';\r\n\r\nexport function OutgoingEmailSettings() {\r\n  return (\r\n    <SettingsPanel\r\n      title={<Trans message=\"Outgoing email settings\" />}\r\n      description={\r\n        <Trans message=\"Change outgoing email handlers, email credentials and other related settings.\" />\r\n      }\r\n    >\r\n      <FormTextField\r\n        id=\"outgoing-emails\"\r\n        className=\"mb-30\"\r\n        type=\"email\"\r\n        name=\"server.mail_from_address\"\r\n        label={<Trans message=\"From address\" />}\r\n        description={\r\n          <Trans message=\"All outgoing application emails will be sent from this email address.\" />\r\n        }\r\n        required\r\n      />\r\n      <ContactAddressSection />\r\n      <FormTextField\r\n        className=\"mb-30\"\r\n        name=\"server.mail_from_name\"\r\n        label={<Trans message=\"From name\" />}\r\n        description={\r\n          <Trans message=\"All outgoing application emails will be sent using this name.\" />\r\n        }\r\n        required\r\n      />\r\n      <SectionHelper\r\n        color=\"warning\"\r\n        description={\r\n          <Trans message=\"Your selected mail method must be authorized to send emails using this address and name.\" />\r\n        }\r\n      />\r\n      <SettingsSeparator />\r\n      <OutgoingMailGroup />\r\n    </SettingsPanel>\r\n  );\r\n}\r\n\r\nfunction ContactAddressSection() {\r\n  const {base_url} = useSettings();\r\n  const contactPageUrl = `${base_url}/contact`;\r\n  const link = (\r\n    <ExternalLink href={contactPageUrl}>{contactPageUrl}</ExternalLink>\r\n  );\r\n  return (\r\n    <FormTextField\r\n      className=\"mb-30\"\r\n      type=\"email\"\r\n      name=\"client.mail.contact_page_address\"\r\n      label={<Trans message=\"Contact page address\" />}\r\n      description={\r\n        <Trans\r\n          values={{\r\n            contactPageUrl: link,\r\n          }}\r\n          message=\"Where emails from :contactPageUrl page should be sent to.\"\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {toast} from '../../../../ui/toast/toast';\r\nimport {BackendResponse} from '../../../../http/backend-response/backend-response';\r\nimport {message} from '../../../../i18n/message';\r\nimport {apiClient} from '../../../../http/query-client';\r\nimport {showHttpErrorToast} from '../../../../utils/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\nfunction clearCache(): Promise<Response> {\r\n  return apiClient.post('cache/flush').then(r => r.data);\r\n}\r\n\r\nexport function useClearCache() {\r\n  return useMutation({\r\n    mutationFn: () => clearCache(),\r\n    onSuccess: () => {\r\n      toast(message('Cache cleared'));\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n","import {useFormContext} from 'react-hook-form';\r\nimport {ComponentType} from 'react';\r\nimport {SettingsPanel} from '../../settings-panel';\r\nimport {FormSelect, Option} from '../../../../ui/forms/select/select';\r\nimport {SettingsErrorGroup} from '../../settings-error-group';\r\nimport {FormTextField} from '../../../../ui/forms/input-field/text-field/text-field';\r\nimport {AdminSettings} from '../../admin-settings';\r\nimport {useClearCache} from './clear-cache';\r\nimport {Button} from '../../../../ui/buttons/button';\r\nimport {SectionHelper} from '../../../../ui/section-helper';\r\nimport {Trans} from '../../../../i18n/trans';\r\n\r\nexport function CacheSettings() {\r\n  const clearCache = useClearCache();\r\n  return (\r\n    <SettingsPanel\r\n      title={<Trans message=\"Cache settings\" />}\r\n      description={\r\n        <Trans message=\"Select cache provider and manually clear cache.\" />\r\n      }\r\n    >\r\n      <CacheSelect />\r\n      <Button\r\n        type=\"button\"\r\n        variant=\"outline\"\r\n        size=\"xs\"\r\n        color=\"primary\"\r\n        disabled={clearCache.isPending}\r\n        onClick={() => {\r\n          clearCache.mutate();\r\n        }}\r\n      >\r\n        <Trans message=\"Clear cache\" />\r\n      </Button>\r\n      <SectionHelper\r\n        color=\"warning\"\r\n        className=\"mt-30\"\r\n        description={\r\n          <Trans\r\n            message={\r\n              '\"File\" is the best option for most cases and should not be changed, unless you are familiar with another cache method and have it set up on the server already.'\r\n            }\r\n          />\r\n        }\r\n      />\r\n    </SettingsPanel>\r\n  );\r\n}\r\n\r\nfunction CacheSelect() {\r\n  const {watch, clearErrors} = useFormContext<AdminSettings>();\r\n  const cacheDriver = watch('server.cache_driver');\r\n\r\n  let CredentialSection: ComponentType<CredentialProps> | null = null;\r\n  if (cacheDriver === 'memcached') {\r\n    CredentialSection = MemcachedCredentials;\r\n  }\r\n\r\n  return (\r\n    <SettingsErrorGroup separatorTop={false} name=\"cache_group\">\r\n      {isInvalid => {\r\n        return (\r\n          <>\r\n            <FormSelect\r\n              invalid={isInvalid}\r\n              onSelectionChange={() => {\r\n                clearErrors();\r\n              }}\r\n              selectionMode=\"single\"\r\n              name=\"server.cache_driver\"\r\n              label={<Trans message=\"Cache method\" />}\r\n              description={\r\n                <Trans message=\"Which method should be used for storing and retrieving cached items.\" />\r\n              }\r\n            >\r\n              <Option value=\"file\">\r\n                <Trans message=\"File (Default)\" />\r\n              </Option>\r\n              <Option value=\"array\">\r\n                <Trans message=\"None\" />\r\n              </Option>\r\n              <Option value=\"apc\">APC</Option>\r\n              <Option value=\"memcached\">Memcached</Option>\r\n              <Option value=\"redis\">Redis</Option>\r\n            </FormSelect>\r\n            {CredentialSection && (\r\n              <div className=\"mt-30\">\r\n                <CredentialSection isInvalid={isInvalid} />\r\n              </div>\r\n            )}\r\n          </>\r\n        );\r\n      }}\r\n    </SettingsErrorGroup>\r\n  );\r\n}\r\n\r\ninterface CredentialProps {\r\n  isInvalid: boolean;\r\n}\r\nfunction MemcachedCredentials({isInvalid}: CredentialProps) {\r\n  return (\r\n    <>\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.memcached_host\"\r\n        label={<Trans message=\"Memcached host\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        type=\"number\"\r\n        name=\"server.memcached_port\"\r\n        label={<Trans message=\"Memcached port\" />}\r\n        required\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import {useFormContext} from 'react-hook-form';\r\nimport {SettingsPanel} from '@common/admin/settings/settings-panel';\r\nimport {SettingsErrorGroup} from '@common/admin/settings/settings-error-group';\r\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {SectionHelper} from '@common/ui/section-helper';\r\nimport {ExternalLink} from '@common/ui/buttons/external-link';\r\nimport {Trans} from '@common/i18n/trans';\r\n\r\nexport function LoggingSettings() {\r\n  return (\r\n    <SettingsPanel\r\n      title={<Trans message=\"Error logging\" />}\r\n      description={\r\n        <Trans message=\"Configure site error logging and related 3rd party integrations.\" />\r\n      }\r\n    >\r\n      <SentrySection />\r\n      <SectionHelper\r\n        className=\"mt-30\"\r\n        color=\"positive\"\r\n        description={\r\n          <Trans\r\n            values={{\r\n              a: parts => (\r\n                <ExternalLink href=\"https://sentry.io\">{parts}</ExternalLink>\r\n              ),\r\n            }}\r\n            message=\"<a>Sentry</a> integration provides real-time error tracking and helps identify and fix issues when site is in production.\"\r\n          />\r\n        }\r\n      />\r\n    </SettingsPanel>\r\n  );\r\n}\r\n\r\nfunction SentrySection() {\r\n  const {clearErrors} = useFormContext();\r\n  return (\r\n    <SettingsErrorGroup\r\n      separatorTop={false}\r\n      separatorBottom={false}\r\n      name=\"logging_group\"\r\n    >\r\n      {isInvalid => {\r\n        return (\r\n          <FormTextField\r\n            onChange={() => {\r\n              clearErrors();\r\n            }}\r\n            invalid={isInvalid}\r\n            name=\"server.sentry_dsn\"\r\n            type=\"url\"\r\n            minLength={30}\r\n            label={<Trans message=\"Sentry DSN\" />}\r\n          />\r\n        );\r\n      }}\r\n    </SettingsErrorGroup>\r\n  );\r\n}\r\n","import {useFormContext} from 'react-hook-form';\r\nimport {ComponentType} from 'react';\r\nimport {SettingsPanel} from '../settings-panel';\r\nimport {SettingsErrorGroup} from '../settings-error-group';\r\nimport {SectionHelper} from '../../../ui/section-helper';\r\nimport {AdminSettings} from '../admin-settings';\r\nimport {FormSelect, Option} from '../../../ui/forms/select/select';\r\nimport {FormTextField} from '../../../ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '../../../i18n/trans';\r\n\r\nexport function QueueSettings() {\r\n  return (\r\n    <SettingsPanel\r\n      title={<Trans message=\"Queue\" />}\r\n      description={\r\n        <Trans message=\"Select active queue method and enter related 3rd party API keys.\" />\r\n      }\r\n    >\r\n      <SectionHelper\r\n        color=\"positive\"\r\n        className=\"mb-30\"\r\n        description={\r\n          <Trans message=\"Queues allow to defer time consuming tasks, such as sending an email, until a later time. Deferring these tasks can speed up web requests to the application.\" />\r\n        }\r\n      />\r\n      <SectionHelper\r\n        color=\"warning\"\r\n        className=\"mb-30\"\r\n        description={\r\n          <Trans message=\"All methods except sync require additional setup, which should be performed before changing the queue method. Consult documentation for more information.\" />\r\n        }\r\n      />\r\n      <DriverSection />\r\n    </SettingsPanel>\r\n  );\r\n}\r\n\r\nfunction DriverSection() {\r\n  const {watch, clearErrors} = useFormContext<AdminSettings>();\r\n  const queueDriver = watch('server.queue_driver');\r\n\r\n  let CredentialSection: ComponentType<CredentialProps> | null = null;\r\n  if (queueDriver === 'sqs') {\r\n    CredentialSection = SqsCredentials;\r\n  }\r\n  return (\r\n    <SettingsErrorGroup\r\n      separatorTop={false}\r\n      separatorBottom={false}\r\n      name=\"queue_group\"\r\n    >\r\n      {isInvalid => {\r\n        return (\r\n          <>\r\n            <FormSelect\r\n              invalid={isInvalid}\r\n              onSelectionChange={() => {\r\n                clearErrors();\r\n              }}\r\n              selectionMode=\"single\"\r\n              name=\"server.queue_driver\"\r\n              label={<Trans message=\"Queue method\" />}\r\n              required\r\n            >\r\n              <Option value=\"sync\">\r\n                <Trans message=\"Sync (Default)\" />\r\n              </Option>\r\n              <Option value=\"beanstalkd\">Beanstalkd</Option>\r\n              <Option value=\"database\">\r\n                <Trans message=\"Database\" />\r\n              </Option>\r\n              <Option value=\"sqs\">\r\n                <Trans message=\"SQS (Amazon simple queue service)\" />\r\n              </Option>\r\n              <Option value=\"redis\">Redis</Option>\r\n            </FormSelect>\r\n            {CredentialSection && (\r\n              <div className=\"mt-30\">\r\n                <CredentialSection isInvalid={isInvalid} />\r\n              </div>\r\n            )}\r\n          </>\r\n        );\r\n      }}\r\n    </SettingsErrorGroup>\r\n  );\r\n}\r\n\r\ninterface CredentialProps {\r\n  isInvalid: boolean;\r\n}\r\nfunction SqsCredentials({isInvalid}: CredentialProps) {\r\n  return (\r\n    <>\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.sqs_queue_key\"\r\n        label={<Trans message=\"SQS queue key\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.sqs_queue_secret\"\r\n        label={<Trans message=\"SQS queue secret\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.sqs_queue_prefix\"\r\n        label={<Trans message=\"SQS queue prefix\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.sqs_queue_name\"\r\n        label={<Trans message=\"SQS queue name\" />}\r\n        required\r\n      />\r\n      <FormTextField\r\n        invalid={isInvalid}\r\n        className=\"mb-30\"\r\n        name=\"server.sqs_queue_region\"\r\n        label={<Trans message=\"SQS queue region\" />}\r\n        required\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import {useFormContext} from 'react-hook-form';\r\nimport {useContext} from 'react';\r\nimport {SettingsPanel} from '../settings-panel';\r\nimport {SettingsErrorGroup} from '../settings-error-group';\r\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {FormSwitch} from '@common/ui/forms/toggle/switch';\r\nimport {SiteConfigContext} from '@common/core/settings/site-config-context';\r\nimport {Trans} from '@common/i18n/trans';\r\n\r\nexport function RecaptchaSettings() {\r\n  const {settings} = useContext(SiteConfigContext);\r\n  return (\r\n    <SettingsPanel\r\n      title={<Trans message=\"Recaptcha\" />}\r\n      description={\r\n        <Trans message=\"Configure google recaptcha integration and credentials.\" />\r\n      }\r\n    >\r\n      {settings?.showRecaptchaLinkSwitch && (\r\n        <FormSwitch\r\n          className=\"mb-30\"\r\n          name=\"client.recaptcha.enable.link_creation\"\r\n          description={\r\n            <Trans message=\"Enable recaptcha integration when creating links from homepage or user dashboard.\" />\r\n          }\r\n        >\r\n          <Trans message=\"Link creation\" />\r\n        </FormSwitch>\r\n      )}\r\n      <FormSwitch\r\n        className=\"mb-30\"\r\n        name=\"client.recaptcha.enable.contact\"\r\n        description={\r\n          <Trans\r\n            message={'Enable recaptcha integration for \"contact us\" page.'}\r\n          />\r\n        }\r\n      >\r\n        <Trans message=\"Contact page\" />\r\n      </FormSwitch>\r\n      <FormSwitch\r\n        className=\"mb-30\"\r\n        name=\"client.recaptcha.enable.register\"\r\n        description={\r\n          <Trans message=\"Enable recaptcha integration for registration page.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Registration page\" />\r\n      </FormSwitch>\r\n      <RecaptchaSection />\r\n    </SettingsPanel>\r\n  );\r\n}\r\n\r\nfunction RecaptchaSection() {\r\n  const {clearErrors} = useFormContext();\r\n  return (\r\n    <SettingsErrorGroup\r\n      separatorTop={false}\r\n      separatorBottom={false}\r\n      name=\"recaptcha_group\"\r\n    >\r\n      {isInvalid => {\r\n        return (\r\n          <>\r\n            <FormTextField\r\n              className=\"mb-30\"\r\n              onChange={() => {\r\n                clearErrors();\r\n              }}\r\n              invalid={isInvalid}\r\n              name=\"client.recaptcha.site_key\"\r\n              label={<Trans message=\"Recaptcha v3 site key\" />}\r\n            />\r\n            <FormTextField\r\n              onChange={() => {\r\n                clearErrors();\r\n              }}\r\n              invalid={isInvalid}\r\n              name=\"client.recaptcha.secret_key\"\r\n              label={<Trans message=\"Recaptcha v3 secret key\" />}\r\n            />\r\n          </>\r\n        );\r\n      }}\r\n    </SettingsErrorGroup>\r\n  );\r\n}\r\n","import React, {ChangeEventHandler} from 'react';\r\nimport {mergeProps, useObjectRef} from '@react-aria/utils';\r\nimport {useController} from 'react-hook-form';\r\nimport clsx from 'clsx';\r\nimport {BaseFieldProps} from './base-field-props';\r\nimport {useField} from './use-field';\r\nimport {getInputFieldClassNames} from './get-input-field-class-names';\r\nimport {Field} from './field';\r\nimport {TextFieldProps} from './text-field/text-field';\r\n\r\nexport interface FileFieldProps\r\n  extends Omit<BaseFieldProps, 'type'> {\r\n  onChange?: ChangeEventHandler<'input'>;\r\n  accept?: string;\r\n}\r\nexport const FileField = React.forwardRef<HTMLInputElement, FileFieldProps>(\r\n  (props, ref) => {\r\n    const inputRef = useObjectRef(ref);\r\n\r\n    const {fieldProps, inputProps} = useField({...props, focusRef: inputRef});\r\n\r\n    const inputFieldClassNames = getInputFieldClassNames(props);\r\n\r\n    return (\r\n      <Field ref={ref} fieldClassNames={inputFieldClassNames} {...fieldProps}>\r\n        <input\r\n          type=\"file\"\r\n          ref={inputRef}\r\n          {...inputProps as any}\r\n          className={clsx(\r\n            inputFieldClassNames.input,\r\n            'py-8',\r\n            'file:bg-primary file:text-on-primary file:border-none file:rounded file:text-sm file:font-semibold file:px-10 file:h-24 file:mr-10'\r\n          )}\r\n        />\r\n      </Field>\r\n    );\r\n  }\r\n);\r\n\r\nexport interface FormFileFieldProps extends FileFieldProps {\r\n  name: string;\r\n}\r\nexport function FormFileField({name, ...props}: FormFileFieldProps) {\r\n  const {\r\n    field: {onChange, onBlur, ref},\r\n    fieldState: {invalid, error},\r\n  } = useController({\r\n    name,\r\n  });\r\n\r\n  const [value, setValue] = React.useState('');\r\n\r\n  const formProps: TextFieldProps = {\r\n    onChange: e => {\r\n      onChange(e.target.files?.[0]);\r\n      setValue(e.target.value);\r\n    },\r\n    onBlur,\r\n    value,\r\n    invalid,\r\n    errorMessage: error?.message,\r\n  };\r\n\r\n  return <FileField ref={ref} {...mergeProps(formProps, props)} />;\r\n}\r\n","import {useFormContext} from 'react-hook-form';\r\nimport {SettingsPanel} from '../settings-panel';\r\nimport {SettingsErrorGroup} from '../settings-error-group';\r\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {FormFileField} from '@common/ui/forms/input-field/file-field';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Fragment} from 'react';\r\n\r\nexport function ReportsSettings() {\r\n  return (\r\n    <SettingsPanel\r\n      title={<Trans message=\"Analytics\" />}\r\n      description={\r\n        <Trans message=\"Configure google analytics integration and credentials.\" />\r\n      }\r\n    >\r\n      <AnalyticsSection />\r\n    </SettingsPanel>\r\n  );\r\n}\r\n\r\nfunction AnalyticsSection() {\r\n  const {clearErrors} = useFormContext();\r\n  return (\r\n    <SettingsErrorGroup\r\n      separatorTop={false}\r\n      separatorBottom={false}\r\n      name=\"analytics_group\"\r\n    >\r\n      {isInvalid => (\r\n        <Fragment>\r\n          <FormFileField\r\n            className=\"mb-30\"\r\n            onChange={() => {\r\n              clearErrors();\r\n            }}\r\n            invalid={isInvalid}\r\n            name=\"files.certificate\"\r\n            accept=\".json\"\r\n            label={<Trans message=\"Google service account key file (.json)\" />}\r\n          />\r\n          <FormTextField\r\n            className=\"mb-30\"\r\n            onChange={() => {\r\n              clearErrors();\r\n            }}\r\n            invalid={isInvalid}\r\n            name=\"server.analytics_property_id\"\r\n            type=\"number\"\r\n            label={<Trans message=\"Google analytics property ID\" />}\r\n          />\r\n          <FormTextField\r\n            className=\"mb-30\"\r\n            onChange={() => {\r\n              clearErrors();\r\n            }}\r\n            invalid={isInvalid}\r\n            name=\"client.analytics.tracking_code\"\r\n            placeholder=\"G-******\"\r\n            min=\"1\"\r\n            max=\"20\"\r\n            description={\r\n              <Trans message=\"Google analytics measurement ID only, not the whole javascript snippet.\" />\r\n            }\r\n            label={<Trans message=\"Google tag manager measurement ID\" />}\r\n          />\r\n          <FormTextField\r\n            name=\"client.analytics.gchart_api_key\"\r\n            label={<Trans message=\"Google maps javascript API key\" />}\r\n            description={\r\n              <Trans message=\"Only required in order to show world geochart on integrated analytics pages.\" />\r\n            }\r\n          />\r\n        </Fragment>\r\n      )}\r\n    </SettingsErrorGroup>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {User} from '@common/auth/user';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\nimport {message} from '@common/i18n/message';\r\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\r\n\r\ninterface Response extends BackendResponse {\r\n  user: User;\r\n}\r\n\r\nexport interface UpdateUserPayload\r\n  extends Omit<Partial<User>, 'email_verified_at'> {\r\n  email_verified_at?: boolean;\r\n  id: number;\r\n}\r\n\r\nexport function useUpdateUser(form: UseFormReturn<UpdateUserPayload>) {\r\n  const navigate = useNavigate();\r\n  return useMutation({\r\n    mutationFn: (props: UpdateUserPayload) => updateUser(props),\r\n    onSuccess: (response, props) => {\r\n      toast(message('User updated'));\r\n      queryClient.invalidateQueries({queryKey: ['users']});\r\n      navigate('/admin/users');\r\n    },\r\n    onError: r => onFormQueryError(r, form),\r\n  });\r\n}\r\n\r\nfunction updateUser({id, ...other}: UpdateUserPayload): Promise<Response> {\r\n  if (other.roles) {\r\n    other.roles = other.roles.map(r => r.id) as any;\r\n  }\r\n  return apiClient.put(`users/${id}`, other).then(r => r.data);\r\n}\r\n","import {useCallback, useRef, useState} from 'react';\r\n\r\nexport function useStickySentinel() {\r\n  const [isSticky, setIsSticky] = useState(false);\r\n\r\n  const observerRef = useRef<IntersectionObserver>();\r\n\r\n  const sentinelRef = useCallback((sentinel: HTMLDivElement | null) => {\r\n    if (sentinel) {\r\n      const observer = new IntersectionObserver(\r\n        ([e]) => setIsSticky(e.intersectionRatio < 1),\r\n        {threshold: [1]}\r\n      );\r\n      observerRef.current = observer;\r\n      observer.observe(sentinel);\r\n    } else if (observerRef.current) {\r\n      observerRef.current?.disconnect();\r\n    }\r\n  }, []);\r\n\r\n  return {isSticky, sentinelRef};\r\n}\r\n","import {FieldValues, SubmitHandler, UseFormReturn} from 'react-hook-form';\r\nimport clsx from 'clsx';\r\nimport React, {ReactNode} from 'react';\r\nimport {useStickySentinel} from '../utils/hooks/sticky-sentinel';\r\nimport {Form} from '../ui/forms/form';\r\nimport {Button} from '../ui/buttons/button';\r\nimport {Trans} from '../i18n/trans';\r\n\r\ninterface Props<T extends FieldValues> {\r\n  onSubmit: SubmitHandler<T>;\r\n  form: UseFormReturn<T>;\r\n  title: ReactNode;\r\n  subTitle?: ReactNode;\r\n  isLoading: boolean;\r\n  children: ReactNode;\r\n  actions?: ReactNode;\r\n  backButton?: ReactNode;\r\n  disableSaveWhenNotDirty?: boolean;\r\n  wrapInContainer?: boolean;\r\n}\r\nexport function CrupdateResourceLayout<T extends FieldValues>({\r\n  onSubmit,\r\n  form,\r\n  title,\r\n  subTitle,\r\n  children,\r\n  actions,\r\n  backButton,\r\n  isLoading = false,\r\n  disableSaveWhenNotDirty = false,\r\n  wrapInContainer = true,\r\n}: Props<T>) {\r\n  const {isSticky, sentinelRef} = useStickySentinel();\r\n  const isDirty = !disableSaveWhenNotDirty\r\n    ? true\r\n    : Object.keys(form.formState.dirtyFields).length;\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={onSubmit}\r\n      onBeforeSubmit={() => form.clearErrors()}\r\n      form={form}\r\n    >\r\n      <div ref={sentinelRef} />\r\n      <div\r\n        className={clsx(\r\n          'sticky top-0 z-10 my-12 transition-shadow md:my-24',\r\n          isSticky && 'bg shadow',\r\n        )}\r\n      >\r\n        <div\r\n          className={clsx(\r\n            'flex items-center gap-24 py-14 md:items-start',\r\n            wrapInContainer && 'container mx-auto px-24',\r\n          )}\r\n        >\r\n          {backButton}\r\n          <div className=\"overflow-hidden overflow-ellipsis md:mr-64\">\r\n            <h1 className=\"overflow-hidden overflow-ellipsis whitespace-nowrap text-xl md:text-3xl\">\r\n              {title}\r\n            </h1>\r\n            {subTitle && <div className=\"mt-4\">{subTitle}</div>}\r\n          </div>\r\n          <div className=\"mr-auto\"></div>\r\n          {actions}\r\n          <Button\r\n            variant=\"flat\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            disabled={isLoading || !isDirty}\r\n          >\r\n            <Trans message=\"Save\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={\r\n          wrapInContainer ? 'container mx-auto px-24 pb-24' : undefined\r\n        }\r\n      >\r\n        <div className=\"rounded\">{children}</div>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n","import {FieldValues, SubmitHandler, UseFormReturn} from 'react-hook-form';\r\nimport clsx from 'clsx';\r\nimport {ReactNode} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {useValueLists} from '../../http/value-lists';\r\nimport {FormTextField} from '../../ui/forms/input-field/text-field/text-field';\r\nimport {FormSwitch} from '../../ui/forms/toggle/switch';\r\nimport {FormFileSizeField} from '../../ui/forms/input-field/file-size-field';\r\nimport {LinkStyle} from '../../ui/buttons/external-link';\r\nimport {FormPermissionSelector} from '../../auth/ui/permission-selector';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {FormChipField} from '../../ui/forms/input-field/chip-field/form-chip-field';\r\nimport {Item} from '../../ui/forms/listbox/item';\r\nimport {CrupdateResourceLayout} from '../crupdate-resource-layout';\r\nimport {useSettings} from '../../core/settings/use-settings';\r\n\r\ninterface Props<T extends FieldValues> {\r\n  onSubmit: SubmitHandler<T>;\r\n  form: UseFormReturn<T>;\r\n  title: ReactNode;\r\n  subTitle?: ReactNode;\r\n  isLoading: boolean;\r\n  avatarManager: ReactNode;\r\n  resendEmailButton?: ReactNode;\r\n  children?: ReactNode;\r\n}\r\nexport function CrupdateUserForm<T extends FieldValues>({\r\n  onSubmit,\r\n  form,\r\n  title,\r\n  subTitle,\r\n  isLoading,\r\n  avatarManager,\r\n  resendEmailButton,\r\n  children,\r\n}: Props<T>) {\r\n  const {require_email_confirmation} = useSettings();\r\n  const {data: valueLists} = useValueLists(['roles', 'permissions']);\r\n\r\n  return (\r\n    <CrupdateResourceLayout\r\n      onSubmit={onSubmit}\r\n      form={form}\r\n      title={title}\r\n      subTitle={subTitle}\r\n      isLoading={isLoading}\r\n    >\r\n      <div className=\"mb-40 flex items-start gap-40 md:gap-80\">\r\n        {avatarManager}\r\n        <div className=\"flex-auto\">\r\n          {children}\r\n          <FormTextField\r\n            className=\"mb-30\"\r\n            name=\"first_name\"\r\n            label={<Trans message=\"First name\" />}\r\n          />\r\n          <FormTextField\r\n            name=\"last_name\"\r\n            label={<Trans message=\"Last name\" />}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mb-30 border-b border-t pb-30 pt-30\">\r\n        <FormSwitch\r\n          className={clsx(resendEmailButton && 'mb-30')}\r\n          disabled={!require_email_confirmation}\r\n          name=\"email_verified_at\"\r\n          description={\r\n            <Trans message=\"Whether email address has been confirmed. User will not be able to login until address is confirmed, unless confirmation is disabled from settings page.\" />\r\n          }\r\n        >\r\n          <Trans message=\"Email confirmed\" />\r\n        </FormSwitch>\r\n        {resendEmailButton}\r\n      </div>\r\n      <FormFileSizeField\r\n        className=\"mb-30\"\r\n        name=\"available_space\"\r\n        label={<Trans message=\"Allowed storage space\" />}\r\n        description={\r\n          <Trans\r\n            values={{\r\n              a: parts => (\r\n                <Link\r\n                  className={LinkStyle}\r\n                  target=\"_blank\"\r\n                  to=\"/admin/settings/uploading\"\r\n                >\r\n                  {parts}\r\n                </Link>\r\n              ),\r\n            }}\r\n            message=\"Total storage space all user uploads are allowed to take up. If left empty, this value will be inherited from any roles or subscriptions user has, or from 'Available space' setting in <a>Uploading</a> settings page.\"\r\n          />\r\n        }\r\n      />\r\n      <FormChipField\r\n        className=\"mb-30\"\r\n        name=\"roles\"\r\n        label={<Trans message=\"Roles\" />}\r\n        suggestions={valueLists?.roles}\r\n      >\r\n        {chip => (\r\n          <Item key={chip.id} value={chip.id}>\r\n            {chip.name}\r\n          </Item>\r\n        )}\r\n      </FormChipField>\r\n      <div className=\"mt-30 border-t pt-30\">\r\n        <div className=\"mb-10 text-sm\">\r\n          <Trans message=\"Permissions\" />\r\n        </div>\r\n        <FormPermissionSelector name=\"permissions\" />\r\n      </div>\r\n    </CrupdateResourceLayout>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const ReportIcon = createSvgIcon(\r\n  [<path d=\"M15.73 3H8.27L3 8.27v7.46L8.27 21h7.46L21 15.73V8.27L15.73 3zM19 14.9 14.9 19H9.1L5 14.9V9.1L9.1 5h5.8L19 9.1v5.8z\" key=\"0\" />,<circle cx=\"12\" cy=\"16\" r=\"1\" key=\"1\" />,<path d=\"M11 7h2v7h-2z\" key=\"2\" />,]\r\n, 'ReportOutlined');\r\n","import {useForm} from 'react-hook-form';\r\nimport {useParams} from 'react-router-dom';\r\nimport React, {useEffect} from 'react';\r\nimport {useUser} from '../../auth/ui/use-user';\r\nimport {UpdateUserPayload, useUpdateUser} from './requests/update-user';\r\nimport {Button} from '../../ui/buttons/button';\r\nimport {useResendVerificationEmail} from '../../auth/requests/use-resend-verification-email';\r\nimport {useUploadAvatar} from '../../auth/ui/account-settings/avatar/upload-avatar';\r\nimport {useRemoveAvatar} from '../../auth/ui/account-settings/avatar/remove-avatar';\r\nimport {CrupdateUserForm} from './crupdate-user-form';\r\nimport {User} from '../../auth/user';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {FullPageLoader} from '../../ui/progress/full-page-loader';\r\nimport {useSettings} from '../../core/settings/use-settings';\r\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\r\nimport {FormImageSelector} from '@common/ui/images/image-selector';\r\nimport {queryClient} from '@common/http/query-client';\r\nimport {ReportIcon} from '@common/icons/material/Report';\r\n\r\nexport function UpdateUserPage() {\r\n  const form = useForm<UpdateUserPayload>();\r\n  const {require_email_confirmation} = useSettings();\r\n  const {userId} = useParams();\r\n  const updateUser = useUpdateUser(form);\r\n  const resendConfirmationEmail = useResendVerificationEmail();\r\n  const {data, isLoading} = useUser(userId!, {\r\n    with: ['subscriptions', 'roles', 'permissions', 'bans'],\r\n  });\r\n  const banReason = data?.user.bans?.[0]?.comment;\r\n\r\n  useEffect(() => {\r\n    if (data?.user && !form.getValues().id) {\r\n      form.reset({\r\n        first_name: data.user.first_name,\r\n        last_name: data.user.last_name,\r\n        roles: data.user.roles,\r\n        permissions: data.user.permissions,\r\n        id: data.user.id,\r\n        email_verified_at: Boolean(data.user.email_verified_at),\r\n        available_space: data.user.available_space,\r\n        avatar: data.user.avatar,\r\n      });\r\n    }\r\n  }, [data?.user, form]);\r\n\r\n  if (isLoading) {\r\n    return <FullPageLoader />;\r\n  }\r\n\r\n  const resendEmailButton = (\r\n    <Button\r\n      size=\"xs\"\r\n      variant=\"outline\"\r\n      color=\"primary\"\r\n      disabled={\r\n        !require_email_confirmation ||\r\n        resendConfirmationEmail.isPending ||\r\n        data?.user?.email_verified_at != null\r\n      }\r\n      onClick={() => {\r\n        resendConfirmationEmail.mutate({email: data!.user.email});\r\n      }}\r\n    >\r\n      <Trans message=\"Resend email\" />\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <CrupdateUserForm\r\n      onSubmit={newValues => {\r\n        updateUser.mutate(newValues);\r\n      }}\r\n      form={form}\r\n      title={\r\n        <Trans values={{email: data?.user.email}} message=\"Edit “:email“\" />\r\n      }\r\n      subTitle={\r\n        banReason && (\r\n          <div className=\"flex items-center gap-4 text-sm text-danger\">\r\n            <ReportIcon />\r\n            <div>\r\n              <Trans\r\n                message=\"Suspended: :reason\"\r\n                values={{reason: banReason}}\r\n              />\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n      isLoading={updateUser.isPending}\r\n      avatarManager={\r\n        <AvatarSection\r\n          user={data!.user}\r\n          onChange={() => {\r\n            queryClient.invalidateQueries({queryKey: ['users']});\r\n          }}\r\n        />\r\n      }\r\n      resendEmailButton={resendEmailButton}\r\n    >\r\n      <FormTextField\r\n        className=\"mb-30\"\r\n        name=\"password\"\r\n        type=\"password\"\r\n        label={<Trans message=\"New password\" />}\r\n      />\r\n    </CrupdateUserForm>\r\n  );\r\n}\r\n\r\ninterface AvatarSectionProps {\r\n  user: User;\r\n  onChange: () => void;\r\n}\r\nfunction AvatarSection({user, onChange}: AvatarSectionProps) {\r\n  const uploadAvatar = useUploadAvatar({user});\r\n  const removeAvatar = useRemoveAvatar({user});\r\n  return (\r\n    <FileUploadProvider>\r\n      <FormImageSelector\r\n        name=\"avatar\"\r\n        diskPrefix=\"avatars\"\r\n        variant=\"avatar\"\r\n        stretchPreview\r\n        label={<Trans message=\"Profile image\" />}\r\n        previewSize=\"w-90 h-90\"\r\n        showRemoveButton\r\n        onChange={url => {\r\n          if (url) {\r\n            uploadAvatar.mutate({url});\r\n          } else {\r\n            removeAvatar.mutate();\r\n          }\r\n          onChange();\r\n        }}\r\n      />\r\n    </FileUploadProvider>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {User} from '../../../auth/user';\r\nimport {BackendResponse} from '../../../http/backend-response/backend-response';\r\nimport {toast} from '../../../ui/toast/toast';\r\nimport {apiClient, queryClient} from '../../../http/query-client';\r\nimport {DatatableDataQueryKey} from '../../../datatable/requests/paginated-resources';\r\nimport {onFormQueryError} from '../../../errors/on-form-query-error';\r\nimport {message} from '../../../i18n/message';\r\nimport {useNavigate} from '../../../utils/hooks/use-navigate';\r\n\r\ninterface Response extends BackendResponse {\r\n  user: User;\r\n}\r\n\r\nexport interface CreateUserPayload\r\n  extends Omit<Partial<User>, 'email_verified_at'> {\r\n  email_verified_at?: boolean;\r\n}\r\n\r\nexport function useCreateUser(form: UseFormReturn<CreateUserPayload>) {\r\n  const navigate = useNavigate();\r\n  return useMutation({\r\n    mutationFn: (props: CreateUserPayload) => createUser(props),\r\n    onSuccess: () => {\r\n      toast(message('User created'));\r\n      queryClient.invalidateQueries({queryKey: DatatableDataQueryKey('users')});\r\n      navigate('/admin/users');\r\n    },\r\n    onError: r => onFormQueryError(r, form),\r\n  });\r\n}\r\n\r\nfunction createUser(payload: CreateUserPayload): Promise<Response> {\r\n  if (payload.roles) {\r\n    payload.roles = payload.roles.map(r => r.id) as any;\r\n  }\r\n  return apiClient.post('users', payload).then(r => r.data);\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport React from 'react';\r\nimport {FormTextField} from '../../ui/forms/input-field/text-field/text-field';\r\nimport {CreateUserPayload, useCreateUser} from './requests/create-user';\r\nimport {CrupdateUserForm} from './crupdate-user-form';\r\nimport {FileUploadProvider} from '../../uploads/uploader/file-upload-provider';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {FormImageSelector} from '@common/ui/images/image-selector';\r\n\r\nexport function CreateUserPage() {\r\n  const form = useForm<CreateUserPayload>();\r\n  const createUser = useCreateUser(form);\r\n\r\n  const avatarManager = (\r\n    <FileUploadProvider>\r\n      <FormImageSelector\r\n        name=\"avatar\"\r\n        diskPrefix=\"avatars\"\r\n        variant=\"avatar\"\r\n        stretchPreview\r\n        label={<Trans message=\"Profile image\" />}\r\n        previewSize=\"w-90 h-90\"\r\n        showRemoveButton\r\n      />\r\n    </FileUploadProvider>\r\n  );\r\n\r\n  return (\r\n    <CrupdateUserForm\r\n      onSubmit={newValues => {\r\n        createUser.mutate(newValues);\r\n      }}\r\n      form={form}\r\n      title={<Trans message=\"Add new user\" />}\r\n      isLoading={createUser.isPending}\r\n      avatarManager={avatarManager}\r\n    >\r\n      <FormTextField\r\n        className=\"mb-30\"\r\n        name=\"email\"\r\n        type=\"email\"\r\n        label={<Trans message=\"Email\" />}\r\n      />\r\n      <FormTextField\r\n        className=\"mb-30\"\r\n        name=\"password\"\r\n        type=\"password\"\r\n        label={<Trans message=\"Password\" />}\r\n      />\r\n    </CrupdateUserForm>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const TranslateIcon = createSvgIcon(\r\n  <path d=\"m12.87 15.07-2.54-2.51.03-.03c1.74-1.94 2.98-4.17 3.71-6.53H17V4h-7V2H8v2H1v1.99h11.17C11.5 7.92 10.44 9.75 9 11.35 8.07 10.32 7.3 9.19 6.69 8h-2c.73 1.63 1.73 3.17 2.98 4.56l-5.09 5.02L4 19l5-5 3.11 3.11.76-2.04zM18.5 10h-2L12 22h2l1.12-3h4.75L21 22h2l-4.5-12zm-2.62 7 1.62-4.33L19.12 17h-3.24z\" />\r\n, 'TranslateOutlined');\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {Localization} from '../../i18n/localization';\r\nimport {apiClient} from '../../http/query-client';\r\n\r\nexport interface FetchLocaleWithLinesResponse extends BackendResponse {\r\n  localization: Localization;\r\n}\r\n\r\nexport const getLocalWithLinesQueryKey = (localeId?: number | string) => {\r\n  const key: (string | number)[] = ['getLocaleWithLines'];\r\n  if (localeId != null) {\r\n    key.push(localeId);\r\n  }\r\n  return key;\r\n};\r\n\r\nexport function useLocaleWithLines(localeId: number | string) {\r\n  return useQuery({\r\n    queryKey: getLocalWithLinesQueryKey(localeId),\r\n    queryFn: () => fetchLocaleWithLines(localeId),\r\n    staleTime: Infinity,\r\n  });\r\n}\r\n\r\nfunction fetchLocaleWithLines(\r\n  localeId: number | string,\r\n): Promise<FetchLocaleWithLinesResponse> {\r\n  return apiClient\r\n    .get(`localizations/${localeId}`)\r\n    .then(response => response.data);\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {toast} from '../../ui/toast/toast';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {apiClient, queryClient} from '../../http/query-client';\r\nimport {message} from '../../i18n/message';\r\nimport {DatatableDataQueryKey} from '../../datatable/requests/paginated-resources';\r\nimport {Localization} from '../../i18n/localization';\r\nimport {onFormQueryError} from '../../errors/on-form-query-error';\r\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\r\nimport {getLocalWithLinesQueryKey} from './use-locale-with-lines';\r\n\r\ninterface Response extends BackendResponse {\r\n  localization: Localization;\r\n}\r\n\r\nfunction UpdateLocalization({\r\n  id,\r\n  ...other\r\n}: Partial<Localization>): Promise<Response> {\r\n  return apiClient.put(`localizations/${id}`, other).then(r => r.data);\r\n}\r\n\r\nexport function useUpdateLocalization(\r\n  form?: UseFormReturn<Partial<Localization>>,\r\n) {\r\n  return useMutation({\r\n    mutationFn: (props: Partial<Localization>) => UpdateLocalization(props),\r\n    onSuccess: () => {\r\n      toast(message('Localization updated'));\r\n      queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey('localizations'),\r\n      });\r\n      queryClient.invalidateQueries({queryKey: getLocalWithLinesQueryKey()});\r\n    },\r\n    onError: r => (form ? onFormQueryError(r, form) : showHttpErrorToast(r)),\r\n  });\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport {Dialog} from '../../ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '../../ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {DialogBody} from '../../ui/overlays/dialog/dialog-body';\r\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\r\nimport {Form} from '../../ui/forms/form';\r\nimport {Localization} from '../../i18n/localization';\r\nimport {FormTextField} from '../../ui/forms/input-field/text-field/text-field';\r\nimport {useValueLists} from '../../http/value-lists';\r\nimport {FormSelect, Option} from '../../ui/forms/select/select';\r\nimport {DialogFooter} from '../../ui/overlays/dialog/dialog-footer';\r\nimport {Button} from '../../ui/buttons/button';\r\nimport {useUpdateLocalization} from './update-localization';\r\nimport {message} from '@common/i18n/message';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\n\r\ninterface UpdateLocalizationDialogProps {\r\n  localization: Localization;\r\n}\r\nexport function UpdateLocalizationDialog({\r\n  localization,\r\n}: UpdateLocalizationDialogProps) {\r\n  const {trans} = useTrans();\r\n  const {formId, close} = useDialogContext();\r\n  const form = useForm<Partial<Localization>>({\r\n    defaultValues: {\r\n      id: localization.id,\r\n      name: localization.name,\r\n      language: localization.language,\r\n    },\r\n  });\r\n\r\n  const {data} = useValueLists(['languages']);\r\n  const languages = data?.languages || [];\r\n\r\n  const updateLocalization = useUpdateLocalization(form);\r\n\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Update localization\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Form\r\n          form={form}\r\n          id={formId}\r\n          onSubmit={values => {\r\n            updateLocalization.mutate(values, {onSuccess: close});\r\n          }}\r\n        >\r\n          <FormTextField\r\n            name=\"name\"\r\n            label={<Trans message=\"Name\" />}\r\n            className=\"mb-30\"\r\n            required\r\n          />\r\n          <FormSelect\r\n            required\r\n            name=\"language\"\r\n            label={<Trans message=\"Language\" />}\r\n            selectionMode=\"single\"\r\n            showSearchField\r\n            searchPlaceholder={trans(message('Search languages'))}\r\n          >\r\n            {languages.map(language => (\r\n              <Option value={language.code} key={language.code}>\r\n                {language.name}\r\n              </Option>\r\n            ))}\r\n          </FormSelect>\r\n        </Form>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button onClick={close}>\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          form={formId}\r\n          disabled={updateLocalization.isPending}\r\n        >\r\n          <Trans message=\"Save\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {useMutation, useQueryClient} from '@tanstack/react-query';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {toast} from '../../ui/toast/toast';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {apiClient} from '../../http/query-client';\r\nimport {message} from '../../i18n/message';\r\nimport {DatatableDataQueryKey} from '../../datatable/requests/paginated-resources';\r\nimport {onFormQueryError} from '../../errors/on-form-query-error';\r\nimport {Localization} from '../../i18n/localization';\r\n\r\ninterface Response extends BackendResponse {\r\n  localization: Localization;\r\n}\r\n\r\nexport interface CreateLocalizationPayload {\r\n  name: string;\r\n  language: string;\r\n}\r\n\r\nfunction createLocalization(\r\n  payload: CreateLocalizationPayload,\r\n): Promise<Response> {\r\n  return apiClient.post(`localizations`, payload).then(r => r.data);\r\n}\r\n\r\nexport function useCreateLocalization(\r\n  form: UseFormReturn<CreateLocalizationPayload>,\r\n) {\r\n  const queryClient = useQueryClient();\r\n  return useMutation({\r\n    mutationFn: (props: CreateLocalizationPayload) => createLocalization(props),\r\n    onSuccess: () => {\r\n      toast(message('Localization created'));\r\n      queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey('localizations'),\r\n      });\r\n    },\r\n    onError: r => onFormQueryError(r, form),\r\n  });\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport {Dialog} from '../../ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '../../ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {DialogBody} from '../../ui/overlays/dialog/dialog-body';\r\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\r\nimport {Form} from '../../ui/forms/form';\r\nimport {FormTextField} from '../../ui/forms/input-field/text-field/text-field';\r\nimport {useValueLists} from '../../http/value-lists';\r\nimport {FormSelect, Option} from '../../ui/forms/select/select';\r\nimport {DialogFooter} from '../../ui/overlays/dialog/dialog-footer';\r\nimport {Button} from '../../ui/buttons/button';\r\nimport {\r\n  CreateLocalizationPayload,\r\n  useCreateLocalization,\r\n} from './create-localization';\r\nimport {message} from '@common/i18n/message';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\n\r\nexport function CreateLocationDialog() {\r\n  const {trans} = useTrans();\r\n  const {formId, close} = useDialogContext();\r\n  const form = useForm<CreateLocalizationPayload>({\r\n    defaultValues: {\r\n      language: 'en',\r\n    },\r\n  });\r\n\r\n  const {data} = useValueLists(['languages']);\r\n  const languages = data?.languages || [];\r\n\r\n  const createLocalization = useCreateLocalization(form);\r\n\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Create localization\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Form\r\n          form={form}\r\n          id={formId}\r\n          onSubmit={values => {\r\n            createLocalization.mutate(values, {onSuccess: close});\r\n          }}\r\n        >\r\n          <FormTextField\r\n            autoFocus\r\n            name=\"name\"\r\n            label={<Trans message=\"Name\" />}\r\n            className=\"mb-30\"\r\n            required\r\n          />\r\n          <FormSelect\r\n            required\r\n            name=\"language\"\r\n            label={<Trans message=\"Language\" />}\r\n            selectionMode=\"single\"\r\n            showSearchField\r\n            searchPlaceholder={trans(message('Search languages'))}\r\n          >\r\n            {languages.map(language => (\r\n              <Option value={language.code} key={language.code}>\r\n                {language.name}\r\n              </Option>\r\n            ))}\r\n          </FormSelect>\r\n        </Form>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button onClick={close}>\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          form={formId}\r\n          disabled={createLocalization.isPending}\r\n        >\r\n          <Trans message=\"Save\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","export default \"__VITE_ASSET__5bb85b7d__\"","import {useMutation} from '@tanstack/react-query';\r\nimport {toast} from '../../ui/toast/toast';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {apiClient, queryClient} from '../../http/query-client';\r\nimport {message} from '../../i18n/message';\r\nimport {DatatableDataQueryKey} from '../../datatable/requests/paginated-resources';\r\nimport {Localization} from '../../i18n/localization';\r\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\r\nimport {getLocalWithLinesQueryKey} from './use-locale-with-lines';\r\nimport {UploadedFile} from '@common/uploads/uploaded-file';\r\n\r\ninterface Response extends BackendResponse {\r\n  localization: Localization;\r\n}\r\n\r\ninterface Payload {\r\n  file: UploadedFile;\r\n  localeId: string | number;\r\n}\r\n\r\nexport function useUploadTranslationFile() {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => uploadFile(payload),\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey('localizations'),\r\n      });\r\n      await queryClient.invalidateQueries({\r\n        queryKey: getLocalWithLinesQueryKey(),\r\n      });\r\n      toast(message('Translation file uploaded'));\r\n    },\r\n    onError: r => showHttpErrorToast(r),\r\n  });\r\n}\r\n\r\nfunction uploadFile({localeId, file}: Payload): Promise<Response> {\r\n  const data = new FormData();\r\n  data.append('file', file.native);\r\n  return apiClient\r\n    .post(`localizations/${localeId}/upload`, data)\r\n    .then(r => r.data);\r\n}\r\n","import React, {Fragment} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {DataTablePage} from '../../datatable/page/data-table-page';\r\nimport {IconButton} from '../../ui/buttons/icon-button';\r\nimport {FormattedDate} from '../../i18n/formatted-date';\r\nimport {ColumnConfig} from '../../datatable/column-config';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {Localization} from '../../i18n/localization';\r\nimport {TranslateIcon} from '../../icons/material/Translate';\r\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\r\nimport {UpdateLocalizationDialog} from './update-localization-dialog';\r\nimport {Tooltip} from '../../ui/tooltip/tooltip';\r\nimport {CreateLocationDialog} from './create-localization-dialog';\r\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\r\nimport aroundTheWorldSvg from './around-the-world.svg';\r\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\r\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  MenuTrigger,\r\n} from '@common/ui/navigation/menu/menu-trigger';\r\nimport {openDialog} from '@common/ui/overlays/store/dialog-store';\r\nimport {downloadFileFromUrl} from '@common/uploads/utils/download-file-from-url';\r\nimport {MoreVertIcon} from '@common/icons/material/MoreVert';\r\nimport {UploadInputType} from '@common/uploads/types/upload-input-config';\r\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\r\nimport {useUploadTranslationFile} from '@common/admin/translations/use-upload-translation-file';\r\nimport {openUploadWindow} from '@common/uploads/utils/open-upload-window';\r\n\r\nconst columnConfig: ColumnConfig<Localization>[] = [\r\n  {\r\n    key: 'name',\r\n    allowsSorting: true,\r\n    sortingKey: 'name',\r\n    visibleInMode: 'all',\r\n    width: 'flex-3 min-w-200',\r\n    header: () => <Trans message=\"Name\" />,\r\n    body: locale => locale.name,\r\n  },\r\n  {\r\n    key: 'language',\r\n    allowsSorting: true,\r\n    sortingKey: 'language',\r\n    header: () => <Trans message=\"Language code\" />,\r\n    body: locale => locale.language,\r\n  },\r\n  {\r\n    key: 'updatedAt',\r\n    allowsSorting: true,\r\n    width: 'w-100',\r\n    header: () => <Trans message=\"Last updated\" />,\r\n    body: locale => <FormattedDate date={locale.updated_at} />,\r\n  },\r\n  {\r\n    key: 'actions',\r\n    header: () => <Trans message=\"Actions\" />,\r\n    hideHeader: true,\r\n    align: 'end',\r\n    width: 'w-84 flex-shrink-0',\r\n    visibleInMode: 'all',\r\n    body: locale => {\r\n      return (\r\n        <div className=\"text-muted\">\r\n          <Tooltip label={<Trans message=\"Translate\" />}>\r\n            <IconButton\r\n              size=\"md\"\r\n              elementType={Link}\r\n              to={`${locale.id}/translate`}\r\n            >\r\n              <TranslateIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n\r\n          <FileUploadProvider>\r\n            <RowActionsMenuTrigger locale={locale} />\r\n          </FileUploadProvider>\r\n        </div>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\nexport function LocalizationIndex() {\r\n  return (\r\n    <DataTablePage\r\n      endpoint=\"localizations\"\r\n      title={<Trans message=\"Localizations\" />}\r\n      columns={columnConfig}\r\n      actions={<Actions />}\r\n      selectedActions={<DeleteSelectedItemsAction />}\r\n      emptyStateMessage={\r\n        <DataTableEmptyStateMessage\r\n          image={aroundTheWorldSvg}\r\n          title={<Trans message=\"No localizations have been created yet\" />}\r\n          filteringTitle={<Trans message=\"No matching localizations\" />}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction Actions() {\r\n  return (\r\n    <Fragment>\r\n      <DialogTrigger type=\"modal\">\r\n        <DataTableAddItemButton>\r\n          <Trans message=\"Add new localization\" />\r\n        </DataTableAddItemButton>\r\n        <CreateLocationDialog />\r\n      </DialogTrigger>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface RowActionsMenuTriggerProps {\r\n  locale: Localization;\r\n}\r\nfunction RowActionsMenuTrigger({locale}: RowActionsMenuTriggerProps) {\r\n  const uploadFile = useUploadTranslationFile();\r\n  return (\r\n    <MenuTrigger>\r\n      <IconButton disabled={uploadFile.isPending}>\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu>\r\n        <MenuItem\r\n          value=\"translate\"\r\n          elementType={Link}\r\n          to={`${locale.id}/translate`}\r\n        >\r\n          <Trans message=\"Translate\" />\r\n        </MenuItem>\r\n        <MenuItem\r\n          value=\"rename\"\r\n          onSelected={() =>\r\n            openDialog(UpdateLocalizationDialog, {localization: locale})\r\n          }\r\n        >\r\n          <Trans message=\"Rename\" />\r\n        </MenuItem>\r\n        <MenuItem\r\n          value=\"download\"\r\n          onSelected={() =>\r\n            downloadFileFromUrl(`api/v1/localizations/${locale.id}/download`)\r\n          }\r\n        >\r\n          <Trans message=\"Download\" />\r\n        </MenuItem>\r\n        <MenuItem\r\n          value=\"upload\"\r\n          onSelected={async () => {\r\n            const files = await openUploadWindow({\r\n              types: [UploadInputType.json],\r\n            });\r\n            if (files.length == 1) {\r\n              uploadFile.mutate({localeId: locale.id, file: files[0]});\r\n            }\r\n          }}\r\n        >\r\n          <Trans message=\"Upload\" />\r\n        </MenuItem>\r\n      </Menu>\r\n    </MenuTrigger>\r\n  );\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport {Dialog} from '../../ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '../../ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {DialogBody} from '../../ui/overlays/dialog/dialog-body';\r\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\r\nimport {Form} from '../../ui/forms/form';\r\nimport {FormTextField} from '../../ui/forms/input-field/text-field/text-field';\r\nimport {DialogFooter} from '../../ui/overlays/dialog/dialog-footer';\r\nimport {Button} from '../../ui/buttons/button';\r\nimport {SectionHelper} from '../../ui/section-helper';\r\n\r\ninterface FormValue {\r\n  key: string;\r\n  value: string;\r\n}\r\n\r\nexport function NewTranslationDialog() {\r\n  const {formId, close} = useDialogContext();\r\n  const form = useForm<FormValue>();\r\n\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Add translation\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Form\r\n          form={form}\r\n          id={formId}\r\n          onSubmit={values => {\r\n            close(values);\r\n          }}\r\n        >\r\n          <SectionHelper\r\n            className=\"mb-30\"\r\n            title={\r\n              <Trans message=\"Add a new translation, if it does not exist already.\" />\r\n            }\r\n            description={\r\n              <Trans message=\"This should only need to be done for things like custom menu items.\" />\r\n            }\r\n          />\r\n          <FormTextField\r\n            inputElementType=\"textarea\"\r\n            rows={2}\r\n            autoFocus\r\n            name=\"key\"\r\n            label={<Trans message=\"Translation key\" />}\r\n            className=\"mb-30\"\r\n            required\r\n          />\r\n          <FormTextField\r\n            inputElementType=\"textarea\"\r\n            rows={2}\r\n            name=\"value\"\r\n            label={<Trans message=\"Translation value\" />}\r\n            required\r\n          />\r\n        </Form>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button onClick={close}>\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button variant=\"flat\" color=\"primary\" type=\"submit\" form={formId}>\r\n          <Trans message=\"Add\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, {useMemo, useRef, useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport {useLocaleWithLines} from './use-locale-with-lines';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {IconButton} from '../../ui/buttons/icon-button';\r\nimport {Button} from '../../ui/buttons/button';\r\nimport {Breadcrumb} from '../../ui/breadcrumbs/breadcrumb';\r\nimport {BreadcrumbItem} from '../../ui/breadcrumbs/breadcrumb-item';\r\nimport {TextField} from '../../ui/forms/input-field/text-field/text-field';\r\nimport {useTrans} from '../../i18n/use-trans';\r\nimport {SearchIcon} from '../../icons/material/Search';\r\nimport {CloseIcon} from '../../icons/material/Close';\r\nimport {AddIcon} from '../../icons/material/Add';\r\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\r\nimport {NewTranslationDialog} from './new-translation-dialog';\r\nimport {useUpdateLocalization} from './update-localization';\r\nimport {Localization} from '../../i18n/localization';\r\nimport {FullPageLoader} from '../../ui/progress/full-page-loader';\r\nimport {useIsMobileMediaQuery} from '../../utils/hooks/is-mobile-media-query';\r\nimport {useVirtualizer} from '@tanstack/react-virtual';\r\nimport {useNavigate} from '../../utils/hooks/use-navigate';\r\nimport {useUploadTranslationFile} from '@common/admin/translations/use-upload-translation-file';\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  MenuTrigger,\r\n} from '@common/ui/navigation/menu/menu-trigger';\r\nimport {MoreVertIcon} from '@common/icons/material/MoreVert';\r\nimport {downloadFileFromUrl} from '@common/uploads/utils/download-file-from-url';\r\nimport {openUploadWindow} from '@common/uploads/utils/open-upload-window';\r\nimport {UploadInputType} from '@common/uploads/types/upload-input-config';\r\n\r\ntype Lines = Record<string, string>;\r\n\r\nexport function TranslationManagementPage() {\r\n  const {localeId} = useParams();\r\n\r\n  const {data, isLoading} = useLocaleWithLines(localeId!);\r\n  const localization = data?.localization;\r\n\r\n  if (isLoading || !localization) {\r\n    return <FullPageLoader />;\r\n  }\r\n\r\n  return <Form localization={localization} />;\r\n}\r\n\r\ninterface FormProps {\r\n  localization: Localization;\r\n}\r\nfunction Form({localization}: FormProps) {\r\n  const [lines, setLines] = useState<Lines>(localization.lines || {});\r\n\r\n  const navigate = useNavigate();\r\n  const updateLocalization = useUpdateLocalization();\r\n  const [searchQuery, setSearchQuery] = useState<string>('');\r\n\r\n  return (\r\n    <form\r\n      className=\"flex h-full flex-col p-14 md:p-24\"\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        updateLocalization.mutate(\r\n          {id: localization.id, lines},\r\n          {\r\n            onSuccess: () => {\r\n              navigate('/admin/localizations');\r\n            },\r\n          },\r\n        );\r\n      }}\r\n    >\r\n      <Header\r\n        localization={localization}\r\n        setLines={setLines}\r\n        lines={lines}\r\n        searchQuery={searchQuery}\r\n        setSearchQuery={setSearchQuery}\r\n        isLoading={updateLocalization.isPending}\r\n      />\r\n      <LinesList lines={lines} setLines={setLines} searchQuery={searchQuery} />\r\n    </form>\r\n  );\r\n}\r\n\r\ninterface HeaderProps {\r\n  localization: Localization;\r\n  lines: Lines;\r\n  setLines: (lines: Lines) => void;\r\n  searchQuery: string;\r\n  setSearchQuery: (value: string) => void;\r\n  isLoading: boolean;\r\n}\r\nfunction Header({\r\n  localization,\r\n  searchQuery,\r\n  setSearchQuery,\r\n  isLoading,\r\n  lines,\r\n  setLines,\r\n}: HeaderProps) {\r\n  const navigate = useNavigate();\r\n  const isMobile = useIsMobileMediaQuery();\r\n  const {trans} = useTrans();\r\n\r\n  return (\r\n    <div className=\"flex-shrink-0\">\r\n      <Breadcrumb size=\"lg\" className=\"mb-16\">\r\n        <BreadcrumbItem\r\n          onSelected={() => {\r\n            navigate('/admin/localizations');\r\n          }}\r\n        >\r\n          <Trans message=\"Localizations\" />\r\n        </BreadcrumbItem>\r\n        <BreadcrumbItem>\r\n          <Trans\r\n            message=\":locale translations\"\r\n            values={{locale: localization.name}}\r\n          />\r\n        </BreadcrumbItem>\r\n      </Breadcrumb>\r\n      <div className=\"mb-24 flex items-center gap-32 md:gap-12\">\r\n        <div className=\"max-w-440 flex-auto\">\r\n          <TextField\r\n            value={searchQuery}\r\n            onChange={e => setSearchQuery(e.target.value)}\r\n            startAdornment={<SearchIcon />}\r\n            placeholder={trans({message: 'Type to search...'})}\r\n          />\r\n        </div>\r\n        <DialogTrigger\r\n          type=\"modal\"\r\n          onClose={newTranslation => {\r\n            if (newTranslation) {\r\n              const newLines = {...lines};\r\n              newLines[newTranslation.key] = newTranslation.value;\r\n              setLines(newLines);\r\n            }\r\n          }}\r\n        >\r\n          {!isMobile && (\r\n            <Button\r\n              className=\"ml-auto\"\r\n              variant=\"outline\"\r\n              color=\"primary\"\r\n              startIcon={<AddIcon />}\r\n            >\r\n              <Trans message=\"Add new\" />\r\n            </Button>\r\n          )}\r\n          <NewTranslationDialog />\r\n        </DialogTrigger>\r\n        <ActionsMenuTrigger locale={localization} />\r\n        <Button\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          disabled={isLoading}\r\n        >\r\n          {isMobile ? (\r\n            <Trans message=\"Save\" />\r\n          ) : (\r\n            <Trans message=\"Save translations\" />\r\n          )}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface LinesListProps {\r\n  searchQuery?: string;\r\n  lines: Lines;\r\n  setLines: (lines: Lines) => void;\r\n}\r\nfunction LinesList({searchQuery, lines, setLines}: LinesListProps) {\r\n  const filteredLines = useMemo(() => {\r\n    return Object.entries(lines).filter(([id, translation]) => {\r\n      const lowerCaseQuery = searchQuery?.toLowerCase();\r\n      return (\r\n        !lowerCaseQuery ||\r\n        id?.toLowerCase().includes(lowerCaseQuery) ||\r\n        translation?.toLowerCase().includes(lowerCaseQuery)\r\n      );\r\n    });\r\n  }, [lines, searchQuery]);\r\n\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const rowVirtualizer = useVirtualizer({\r\n    count: filteredLines.length,\r\n    getScrollElement: () => ref.current,\r\n    estimateSize: () => 123,\r\n  });\r\n\r\n  return (\r\n    <div className=\"flex-auto overflow-y-auto\" ref={ref}>\r\n      <div\r\n        className=\"relative w-full\"\r\n        style={{\r\n          height: `${rowVirtualizer.getTotalSize()}px`,\r\n        }}\r\n      >\r\n        {rowVirtualizer.getVirtualItems().map(virtualItem => {\r\n          const [id, translation] = filteredLines[virtualItem.index];\r\n          return (\r\n            <div\r\n              key={id}\r\n              className=\"absolute left-0 top-0 w-full\"\r\n              style={{\r\n                height: `${virtualItem.size}px`,\r\n                transform: `translateY(${virtualItem.start}px)`,\r\n              }}\r\n            >\r\n              <div className=\"mb-10 rounded border md:mr-10\">\r\n                <div className=\"flex items-center justify-between gap-24 border-b px-10 py-2\">\r\n                  <label\r\n                    className=\"flex-auto text-xs font-semibold\"\r\n                    htmlFor={id}\r\n                  >\r\n                    {id}\r\n                  </label>\r\n                  <IconButton\r\n                    size=\"xs\"\r\n                    className=\"text-muted\"\r\n                    onClick={() => {\r\n                      const newLines = {...lines};\r\n                      delete newLines[id];\r\n                      setLines(newLines);\r\n                    }}\r\n                  >\r\n                    <CloseIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div>\r\n                  <textarea\r\n                    id={id}\r\n                    name={id}\r\n                    defaultValue={translation}\r\n                    className=\"block w-full resize-none rounded bg-inherit p-10 text-sm outline-none focus-visible:ring-2\"\r\n                    rows={2}\r\n                    onChange={e => {\r\n                      const newLines = {...lines};\r\n                      newLines[id] = e.target.value;\r\n                      setLines(newLines);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface ActionsMenuTriggerProps {\r\n  locale: Localization;\r\n}\r\nfunction ActionsMenuTrigger({locale}: ActionsMenuTriggerProps) {\r\n  const uploadFile = useUploadTranslationFile();\r\n  return (\r\n    <MenuTrigger>\r\n      <IconButton\r\n        variant=\"outline\"\r\n        size=\"sm\"\r\n        color=\"primary\"\r\n        disabled={uploadFile.isPending}\r\n      >\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu>\r\n        <MenuItem\r\n          value=\"download\"\r\n          onSelected={() =>\r\n            downloadFileFromUrl(`api/v1/localizations/${locale.id}/download`)\r\n          }\r\n        >\r\n          <Trans message=\"Download\" />\r\n        </MenuItem>\r\n        <MenuItem\r\n          value=\"upload\"\r\n          onSelected={async () => {\r\n            const files = await openUploadWindow({\r\n              types: [UploadInputType.json],\r\n            });\r\n            if (files.length == 1) {\r\n              uploadFile.mutate({localeId: locale.id, file: files[0]});\r\n            }\r\n          }}\r\n        >\r\n          <Trans message=\"Upload\" />\r\n        </MenuItem>\r\n      </Menu>\r\n    </MenuTrigger>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {useDialogContext} from './dialog-context';\r\nimport {Dialog} from './dialog';\r\nimport {DialogBody} from './dialog-body';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {CloseIcon} from '@common/icons/material/Close';\r\nimport {KeyboardArrowLeftIcon} from '@common/icons/material/KeyboardArrowLeft';\r\nimport {KeyboardArrowRightIcon} from '@common/icons/material/KeyboardArrowRight';\r\nimport {useControlledState} from '@react-stately/utils';\r\n\r\ninterface Props {\r\n  image?: string;\r\n  images?: string[];\r\n  activeIndex?: number;\r\n  onActiveIndexChange?: (index: number) => void;\r\n  defaultActiveIndex?: number;\r\n}\r\nexport function ImageZoomDialog(props: Props) {\r\n  const {close} = useDialogContext();\r\n  const {image, images} = props;\r\n  const [activeIndex, setActiveIndex] = useControlledState(\r\n    props.activeIndex,\r\n    props.defaultActiveIndex,\r\n    props.onActiveIndexChange,\r\n  );\r\n  const src = image || images?.[activeIndex];\r\n\r\n  return (\r\n    <Dialog size=\"fullscreenTakeover\" background=\"bg-black/80\">\r\n      <DialogBody padding=\"p-0\" className=\"h-full w-full\">\r\n        <IconButton\r\n          size=\"lg\"\r\n          color=\"paper\"\r\n          className=\"absolute right-0 top-0 z-20 text-white\"\r\n          onClick={() => {\r\n            close();\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n        <div className=\"relative flex h-full w-full items-center justify-center p-40\">\r\n          {images?.length ? (\r\n            <IconButton\r\n              size=\"lg\"\r\n              color=\"white\"\r\n              variant=\"flat\"\r\n              className=\"absolute bottom-0 left-20 top-0 my-auto\"\r\n              disabled={activeIndex < 1}\r\n              onClick={() => {\r\n                setActiveIndex(activeIndex - 1);\r\n              }}\r\n            >\r\n              <KeyboardArrowLeftIcon />\r\n            </IconButton>\r\n          ) : null}\r\n          <img\r\n            src={src}\r\n            alt=\"\"\r\n            className=\"max-h-full w-auto object-contain shadow\"\r\n          />\r\n          {images?.length ? (\r\n            <IconButton\r\n              size=\"lg\"\r\n              color=\"white\"\r\n              variant=\"flat\"\r\n              className=\"absolute bottom-0 right-20 top-0 my-auto\"\r\n              disabled={activeIndex + 1 === images?.length}\r\n              onClick={() => {\r\n                setActiveIndex(activeIndex + 1);\r\n              }}\r\n            >\r\n              <KeyboardArrowRightIcon />\r\n            </IconButton>\r\n          ) : null}\r\n        </div>\r\n      </DialogBody>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {useContext} from 'react';\r\nimport {\r\n  AdConfig,\r\n  SiteConfigContext,\r\n} from '../../core/settings/site-config-context';\r\nimport {Form} from '../../ui/forms/form';\r\nimport {useForm} from 'react-hook-form';\r\nimport {FormTextField} from '../../ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {Button} from '../../ui/buttons/button';\r\nimport {FormSwitch} from '../../ui/forms/toggle/switch';\r\nimport {useAdminSettings} from '../settings/requests/use-admin-settings';\r\nimport {ProgressCircle} from '../../ui/progress/progress-circle';\r\nimport {Settings} from '../../core/settings/settings';\r\nimport {\r\n  AdminSettingsWithFiles,\r\n  useUpdateAdminSettings,\r\n} from '../settings/requests/update-admin-settings';\r\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\r\nimport {ImageZoomDialog} from '../../ui/overlays/dialog/image-zoom-dialog';\r\nimport {StaticPageTitle} from '../../seo/static-page-title';\r\n\r\nexport function AdsPage() {\r\n  const query = useAdminSettings();\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-12 md:p-24\">\r\n      <StaticPageTitle>\r\n        <Trans message=\"Ads\" />\r\n      </StaticPageTitle>\r\n      <h1 className=\"mb-20 text-2xl font-light md:mb-40 md:text-3xl\">\r\n        <Trans message=\"Predefined Ad slots\" />\r\n      </h1>\r\n      {query.isLoading ? (\r\n        <ProgressCircle isIndeterminate />\r\n      ) : (\r\n        <AdsForm defaultValues={query.data?.client.ads || {}} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface AdsFormProps {\r\n  defaultValues: Settings['ads'];\r\n}\r\nfunction AdsForm({defaultValues}: AdsFormProps) {\r\n  const {\r\n    admin: {ads},\r\n  } = useContext(SiteConfigContext);\r\n\r\n  const form = useForm<AdminSettingsWithFiles>({\r\n    defaultValues: {client: {ads: defaultValues}},\r\n  });\r\n  const updateSettings = useUpdateAdminSettings(form);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      onSubmit={value => {\r\n        updateSettings.mutate(value);\r\n      }}\r\n    >\r\n      {ads.map(ad => {\r\n        return <AdSection key={ad.slot} adConfig={ad} />;\r\n      })}\r\n      <FormSwitch\r\n        name=\"client.ads.disable\"\r\n        className=\"mb-30\"\r\n        description={\r\n          <Trans message=\"Disable all add related functionality across the site.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Disable ads\" />\r\n      </FormSwitch>\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"flat\"\r\n        color=\"primary\"\r\n        disabled={updateSettings.isPending}\r\n      >\r\n        <Trans message=\"Save\" />\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\ninterface AdSectionProps {\r\n  adConfig: AdConfig;\r\n}\r\nfunction AdSection({adConfig}: AdSectionProps) {\r\n  return (\r\n    <div className=\"flex items-center gap-24\">\r\n      <FormTextField\r\n        className=\"mb-30 flex-auto\"\r\n        name={`client.${adConfig.slot}`}\r\n        inputElementType=\"textarea\"\r\n        rows={8}\r\n        label={<Trans {...adConfig.description} />}\r\n      />\r\n      <DialogTrigger type=\"modal\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"cursor-zoom-in overflow-hidden rounded outline-none transition hover:scale-105 focus-visible:ring max-md:hidden\"\r\n        >\r\n          <img\r\n            src={adConfig.image}\r\n            className=\"h-[186px] w-auto border\"\r\n            alt=\"Ad slot example\"\r\n          />\r\n        </button>\r\n        <ImageZoomDialog image={adConfig.image} />\r\n      </DialogTrigger>\r\n    </div>\r\n  );\r\n}\r\n","import {NavLink} from 'react-router-dom';\r\nimport {AppearanceButton} from './appearance-button';\r\nimport {useAppearanceStore} from './appearance-store';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {Fragment, useMemo} from 'react';\r\n\r\nexport function SectionList() {\r\n  const sections = useAppearanceStore(s => s.config?.sections);\r\n  const sortedSection = useMemo(() => {\r\n    if (!sections) return [];\r\n    return Object.entries(sections || [])\r\n      .map(([key, value]) => {\r\n        return {\r\n          ...value,\r\n          key,\r\n        };\r\n      })\r\n      .sort((a, b) => (a?.position || 1) - (b?.position || 1));\r\n  }, [sections]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {sortedSection.map(section => {\r\n        return (\r\n          <AppearanceButton\r\n            key={section.key}\r\n            to={section.key}\r\n            elementType={NavLink}\r\n          >\r\n            <Trans {...section.label} />\r\n          </AppearanceButton>\r\n        );\r\n      })}\r\n    </Fragment>\r\n  );\r\n}\r\n","import {\r\n  BackendFilter,\r\n  FilterControlType,\r\n  FilterOperator,\r\n} from '../../datatable/filters/backend-filter';\r\nimport {message} from '../../i18n/message';\r\nimport {\r\n  createdAtFilter,\r\n  updatedAtFilter,\r\n} from '@common/datatable/filters/timestamp-filters';\r\n\r\nexport const RoleIndexPageFilters: BackendFilter[] = [\r\n  {\r\n    key: 'type',\r\n    label: message('Type'),\r\n    description: message('Type of the role'),\r\n    defaultOperator: FilterOperator.ne,\r\n    control: {\r\n      type: FilterControlType.Select,\r\n      defaultValue: '01',\r\n      options: [\r\n        {\r\n          key: '01',\r\n          label: message('Sitewide'),\r\n          value: 'sitewide',\r\n        },\r\n        {\r\n          key: '02',\r\n          label: message('Workspace'),\r\n          value: 'workspace',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  createdAtFilter({\r\n    description: message('Date role was created'),\r\n  }),\r\n  updatedAtFilter({\r\n    description: message('Date role was last updated'),\r\n  }),\r\n];\r\n","import React, {Fragment} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {DataTablePage} from '../../datatable/page/data-table-page';\r\nimport {IconButton} from '../../ui/buttons/icon-button';\r\nimport {EditIcon} from '../../icons/material/Edit';\r\nimport {FormattedDate} from '../../i18n/formatted-date';\r\nimport {ColumnConfig} from '../../datatable/column-config';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {Role} from '../../auth/role';\r\nimport teamSvg from './team.svg';\r\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\r\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\r\nimport {RoleIndexPageFilters} from './role-index-page-filters';\r\nimport {DataTableExportCsvButton} from '../../datatable/csv-export/data-table-export-csv-button';\r\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\r\n\r\nconst columnConfig: ColumnConfig<Role>[] = [\r\n  {\r\n    key: 'name',\r\n    allowsSorting: true,\r\n    visibleInMode: 'all',\r\n    header: () => <Trans message=\"Role\" />,\r\n    body: role => (\r\n      <div>\r\n        <div>\r\n          <Trans message={role.name} />\r\n        </div>\r\n        <div className=\"text-muted text-xs overflow-x-hidden overflow-ellipsis\">\r\n          {role.description ? <Trans message={role.description} /> : undefined}\r\n        </div>\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    key: 'type',\r\n    maxWidth: 'max-w-100',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Type\" />,\r\n    body: role => <Trans message={role.type} />,\r\n  },\r\n  {\r\n    key: 'updated_at',\r\n    maxWidth: 'max-w-100',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Last updated\" />,\r\n    body: role => <FormattedDate date={role.updated_at} />,\r\n  },\r\n  {\r\n    key: 'actions',\r\n    header: () => <Trans message=\"Actions\" />,\r\n    hideHeader: true,\r\n    visibleInMode: 'all',\r\n    align: 'end',\r\n    width: 'w-42 flex-shrink-0',\r\n    body: role => {\r\n      return (\r\n        <Link to={`${role.id}/edit`}>\r\n          <IconButton size=\"md\" className=\"text-muted\">\r\n            <EditIcon />\r\n          </IconButton>\r\n        </Link>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\nexport function RolesIndexPage() {\r\n  return (\r\n    <DataTablePage\r\n      endpoint=\"roles\"\r\n      title={<Trans message=\"Roles\" />}\r\n      columns={columnConfig}\r\n      filters={RoleIndexPageFilters}\r\n      actions={<Actions />}\r\n      selectedActions={<DeleteSelectedItemsAction />}\r\n      emptyStateMessage={\r\n        <DataTableEmptyStateMessage\r\n          image={teamSvg}\r\n          title={<Trans message=\"No roles have been created yet\" />}\r\n          filteringTitle={<Trans message=\"No matching roles\" />}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction Actions() {\r\n  return (\r\n    <Fragment>\r\n      <DataTableExportCsvButton endpoint=\"roles/csv/export\" />\r\n      <DataTableAddItemButton elementType={Link} to=\"new\">\r\n        <Trans message=\"Add new role\" />\r\n      </DataTableAddItemButton>\r\n    </Fragment>\r\n  );\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {Role} from '@common/auth/role';\r\nimport {useParams} from 'react-router-dom';\r\n\r\nconst Endpoint = (id: number | string) => `roles/${id}`;\r\n\r\nexport interface FetchRoleResponse extends BackendResponse {\r\n  role: Role;\r\n}\r\n\r\nexport function useRole() {\r\n  const {roleId} = useParams();\r\n  return useQuery({\r\n    queryKey: [Endpoint(roleId!)],\r\n    queryFn: () => fetchRole(roleId!),\r\n  });\r\n}\r\n\r\nfunction fetchRole(roleId: number | string): Promise<FetchRoleResponse> {\r\n  return apiClient.get(Endpoint(roleId)).then(response => response.data);\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '../../../http/query-client';\r\nimport {BackendResponse} from '../../../http/backend-response/backend-response';\r\nimport {toast} from '../../../ui/toast/toast';\r\nimport {Role} from '../../../auth/role';\r\nimport {useTrans} from '../../../i18n/use-trans';\r\nimport {message} from '../../../i18n/message';\r\nimport {DatatableDataQueryKey} from '../../../datatable/requests/paginated-resources';\r\nimport {showHttpErrorToast} from '../../../utils/http/show-http-error-toast';\r\nimport {useNavigate} from '../../../utils/hooks/use-navigate';\r\n\r\ninterface Response extends BackendResponse {\r\n  role: Role;\r\n}\r\n\r\ninterface Payload extends Partial<Role> {\r\n  id: number;\r\n}\r\n\r\nconst Endpoint = (id: number) => `roles/${id}`;\r\n\r\nexport function useUpdateRole() {\r\n  const {trans} = useTrans();\r\n  const navigate = useNavigate();\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => updateRole(payload),\r\n    onSuccess: response => {\r\n      toast(trans(message('Role updated')));\r\n      queryClient.invalidateQueries({queryKey: [Endpoint(response.role.id)]});\r\n      queryClient.invalidateQueries({queryKey: DatatableDataQueryKey('roles')});\r\n      navigate('/admin/roles');\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction updateRole({id, ...payload}: Payload): Promise<Response> {\r\n  return apiClient.put(Endpoint(id), payload).then(r => r.data);\r\n}\r\n","import {Role} from '../../../auth/role';\r\nimport {useTrans} from '../../../i18n/use-trans';\r\nimport {useFormContext} from 'react-hook-form';\r\nimport {FormTextField} from '../../../ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '../../../i18n/trans';\r\nimport {message} from '../../../i18n/message';\r\nimport {FormSelect} from '../../../ui/forms/select/select';\r\nimport {Item} from '../../../ui/forms/listbox/item';\r\nimport {FormSwitch} from '../../../ui/forms/toggle/switch';\r\nimport {FormPermissionSelector} from '../../../auth/ui/permission-selector';\r\nimport {useSettings} from '../../../core/settings/use-settings';\r\n\r\ninterface CrupdateRolePageSettingsPanelProps {\r\n  isInternal?: boolean;\r\n}\r\nexport function CrupdateRolePageSettingsPanel({\r\n  isInternal = false,\r\n}: CrupdateRolePageSettingsPanelProps) {\r\n  const {trans} = useTrans();\r\n  const {workspaces} = useSettings();\r\n  const {watch} = useFormContext<Role>();\r\n  const watchedType = watch('type');\r\n\r\n  return (\r\n    <>\r\n      <FormTextField\r\n        label={<Trans message=\"Name\" />}\r\n        name=\"name\"\r\n        className=\"mb-20\"\r\n        required\r\n      />\r\n      <FormTextField\r\n        label={<Trans message=\"Description\" />}\r\n        name=\"description\"\r\n        inputElementType=\"textarea\"\r\n        placeholder={trans(message('Role description...'))}\r\n        rows={4}\r\n        className=\"mb-20\"\r\n      />\r\n      {workspaces.integrated && (\r\n        <FormSelect\r\n          label={<Trans message=\"Type\" />}\r\n          name=\"type\"\r\n          selectionMode=\"single\"\r\n          className=\"mb-20\"\r\n          description={\r\n            <Trans message=\"Whether this role will be assigned to users globally on the site or only within workspaces.\" />\r\n          }\r\n        >\r\n          <Item value=\"sitewide\">\r\n            <Trans message=\"Sitewide\" />\r\n          </Item>\r\n          <Item value=\"workspace\">\r\n            <Trans message=\"Workspace\" />\r\n          </Item>\r\n        </FormSelect>\r\n      )}\r\n      {!isInternal && (\r\n        <>\r\n          <FormSwitch\r\n            name=\"default\"\r\n            className=\"mb-20\"\r\n            description={\r\n              <Trans message=\"Assign this role to new users automatically.\" />\r\n            }\r\n          >\r\n            <Trans message=\"Default\" />\r\n          </FormSwitch>\r\n          {watchedType === 'sitewide' && (\r\n            <FormSwitch\r\n              name=\"guests\"\r\n              description={\r\n                <Trans message=\"Assign this role to guests (not logged in users).\" />\r\n              }\r\n            >\r\n              <Trans message=\"Guests\" />\r\n            </FormSwitch>\r\n          )}\r\n        </>\r\n      )}\r\n      <h2 className=\"mb-10 mt-30 text-lg\">\r\n        <Trans message=\"Permissions\" />\r\n      </h2>\r\n      <FormPermissionSelector\r\n        name=\"permissions\"\r\n        valueListKey={\r\n          watchedType === 'sitewide' ? 'permissions' : 'workspacePermissions'\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import {Dialog} from '../ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '../ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '../i18n/trans';\r\nimport {DialogBody} from '../ui/overlays/dialog/dialog-body';\r\nimport {TextField} from '../ui/forms/input-field/text-field/text-field';\r\nimport {SearchIcon} from '../icons/material/Search';\r\nimport {useState} from 'react';\r\nimport {useTrans} from '../i18n/use-trans';\r\nimport {message} from '../i18n/message';\r\nimport {Avatar} from '../ui/images/avatar';\r\nimport {NormalizedModel} from '../datatable/filters/normalized-model';\r\nimport {IllustratedMessage} from '../ui/images/illustrated-message';\r\nimport {SvgImage} from '../ui/images/svg-image/svg-image';\r\nimport teamSvg from '../admin/roles/team.svg';\r\nimport {useDialogContext} from '../ui/overlays/dialog/dialog-context';\r\nimport {useNormalizedModels} from './queries/use-normalized-models';\r\n\r\ninterface SelectUserDialogProps {\r\n  onUserSelected: (user: NormalizedModel) => void;\r\n}\r\n\r\nexport function SelectUserDialog({onUserSelected}: SelectUserDialogProps) {\r\n  const {close} = useDialogContext();\r\n  const [searchTerm, setSearchTerm] = useState<string>('');\r\n  const {trans} = useTrans();\r\n  const query = useNormalizedModels('normalized-models/user', {\r\n    query: searchTerm,\r\n    perPage: 14,\r\n  });\r\n  const users = query.data?.results || [];\r\n\r\n  const emptyStateMessage = (\r\n    <IllustratedMessage\r\n      className=\"pt-20\"\r\n      size=\"sm\"\r\n      title={<Trans message=\"No matching users\" />}\r\n      description={<Trans message=\"Try another search query\" />}\r\n      image={<SvgImage src={teamSvg} />}\r\n    />\r\n  );\r\n\r\n  const selectUser = (user: NormalizedModel) => {\r\n    close();\r\n    onUserSelected(user);\r\n  };\r\n\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Select a user\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <TextField\r\n          autoFocus\r\n          className=\"mb-20\"\r\n          startAdornment={<SearchIcon />}\r\n          placeholder={trans(message('Search for user by name or email'))}\r\n          value={searchTerm}\r\n          onChange={e => {\r\n            setSearchTerm(e.target.value);\r\n          }}\r\n        />\r\n        {!query.isLoading && !users.length && emptyStateMessage}\r\n        <div className=\"grid grid-cols-2 gap-x-10\">\r\n          {users.map(user => (\r\n            <UserListItem\r\n              key={user.id}\r\n              user={user}\r\n              onUserSelected={selectUser}\r\n            />\r\n          ))}\r\n        </div>\r\n      </DialogBody>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\ninterface UserListItemProps {\r\n  user: NormalizedModel;\r\n  onUserSelected: (user: NormalizedModel) => void;\r\n}\r\nfunction UserListItem({user, onUserSelected}: UserListItemProps) {\r\n  return (\r\n    <div\r\n      key={user.id}\r\n      className=\"flex items-center gap-10 rounded p-10 outline-none ring-offset-4 hover:bg-hover focus-visible:ring\"\r\n      role=\"button\"\r\n      tabIndex={0}\r\n      onClick={() => {\r\n        onUserSelected(user);\r\n      }}\r\n      onKeyDown={e => {\r\n        if (e.key === 'Enter' || e.key === ' ') {\r\n          e.preventDefault();\r\n          onUserSelected(user);\r\n        }\r\n      }}\r\n    >\r\n      <Avatar src={user.image} />\r\n      <div className=\"overflow-hidden\">\r\n        <div className=\"overflow-hidden text-ellipsis\">{user.name}</div>\r\n        <div className=\"overflow-hidden text-ellipsis text-muted\">\r\n          {user.description}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient} from '../../../http/query-client';\r\nimport {BackendResponse} from '../../../http/backend-response/backend-response';\r\nimport {toast} from '../../../ui/toast/toast';\r\nimport {message} from '../../../i18n/message';\r\nimport {Role} from '../../../auth/role';\r\nimport {showHttpErrorToast} from '../../../utils/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\ninterface Payload {\r\n  userIds: number[];\r\n}\r\n\r\nexport function useRemoveUsersFromRole(role: Role) {\r\n  return useMutation({\r\n    mutationFn: ({userIds}: Payload) =>\r\n      removeUsersFromRole({userIds, roleId: role.id}),\r\n    onSuccess: (response, payload) => {\r\n      toast(\r\n        message('Removed [one 1 user|other :count users] from “{role}“', {\r\n          values: {count: payload.userIds.length, role: role.name},\r\n        }),\r\n      );\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction removeUsersFromRole({\r\n  roleId,\r\n  userIds,\r\n}: Payload & {roleId: number}): Promise<Response> {\r\n  return apiClient\r\n    .post(`roles/${roleId}/remove-users`, {userIds})\r\n    .then(r => r.data);\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient} from '../../../http/query-client';\r\nimport {BackendResponse} from '../../../http/backend-response/backend-response';\r\nimport {toast} from '../../../ui/toast/toast';\r\nimport {message} from '../../../i18n/message';\r\nimport {Role} from '../../../auth/role';\r\nimport {showHttpErrorToast} from '../../../utils/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\ninterface Payload {\r\n  userIds: number[];\r\n}\r\n\r\nexport function useAddUsersToRole(role: Role) {\r\n  return useMutation({\r\n    mutationFn: ({userIds}: Payload) =>\r\n      addUsersToRole({userIds, roleId: role.id}),\r\n    onSuccess: (response, payload) => {\r\n      toast(\r\n        message('Assigned [one 1 user|other :count users] to {role}', {\r\n          values: {count: payload.userIds.length, role: role.name},\r\n        }),\r\n      );\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction addUsersToRole({\r\n  roleId,\r\n  userIds,\r\n}: Payload & {roleId: number}): Promise<Response> {\r\n  return apiClient\r\n    .post(`roles/${roleId}/add-users`, {userIds})\r\n    .then(r => r.data);\r\n}\r\n","import {Role} from '../../../auth/role';\r\nimport {ColumnConfig} from '../../../datatable/column-config';\r\nimport {User} from '../../../auth/user';\r\nimport {Trans} from '../../../i18n/trans';\r\nimport {NameWithAvatar} from '../../../datatable/column-templates/name-with-avatar';\r\nimport {FormattedDate} from '../../../i18n/formatted-date';\r\nimport React from 'react';\r\nimport teamSvg from '../team.svg';\r\nimport {DialogTrigger} from '../../../ui/overlays/dialog/dialog-trigger';\r\nimport {Button} from '../../../ui/buttons/button';\r\nimport {SelectUserDialog} from '../../../users/select-user-dialog';\r\nimport {queryClient} from '../../../http/query-client';\r\nimport {DatatableDataQueryKey} from '../../../datatable/requests/paginated-resources';\r\nimport {DataTableEmptyStateMessage} from '../../../datatable/page/data-table-emty-state-message';\r\nimport {useDataTable} from '../../../datatable/page/data-table-context';\r\nimport {ConfirmationDialog} from '../../../ui/overlays/dialog/confirmation-dialog';\r\nimport {useRemoveUsersFromRole} from '../requests/use-remove-users-from-role';\r\nimport {useAddUsersToRole} from '../requests/use-add-users-to-role';\r\nimport {DataTable} from '../../../datatable/data-table';\r\nimport {useIsMobileMediaQuery} from '../../../utils/hooks/is-mobile-media-query';\r\n\r\nconst userColumn: ColumnConfig<User> = {\r\n  key: 'name',\r\n  allowsSorting: true,\r\n  sortingKey: 'email',\r\n  header: () => <Trans message=\"User\" />,\r\n  body: user => (\r\n    <NameWithAvatar\r\n      image={user.avatar}\r\n      label={user.display_name}\r\n      description={user.email}\r\n    />\r\n  ),\r\n  width: 'col-w-3',\r\n};\r\n\r\nconst desktopColumns: ColumnConfig<User>[] = [\r\n  userColumn,\r\n  {\r\n    key: 'first_name',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"First name\" />,\r\n    body: user => user.first_name,\r\n  },\r\n  {\r\n    key: 'last_name',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Last name\" />,\r\n    body: user => user.last_name,\r\n  },\r\n  {\r\n    key: 'created_at',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Assigned at\" />,\r\n    body: user => <FormattedDate date={user.created_at} />,\r\n  },\r\n];\r\n\r\nconst mobileColumns: ColumnConfig<User>[] = [userColumn];\r\n\r\ninterface CrupdateRolePageUsersPanelProps {\r\n  role: Role;\r\n}\r\nexport function EditRolePageUsersPanel({\r\n  role,\r\n}: CrupdateRolePageUsersPanelProps) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n\r\n  if (role.guests || role.type === 'workspace') {\r\n    return (\r\n      <div className=\"pt-30 pb-10\">\r\n        <DataTableEmptyStateMessage\r\n          image={teamSvg}\r\n          title={<Trans message=\"Users can't be assigned to this role\" />}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DataTable\r\n      endpoint=\"users\"\r\n      columns={isMobile ? mobileColumns : desktopColumns}\r\n      queryParams={{roleId: `${role.id}`}}\r\n      actions={<AssignUserAction role={role} />}\r\n      selectedActions={<RemoveUsersAction role={role} />}\r\n      emptyStateMessage={\r\n        <DataTableEmptyStateMessage\r\n          image={teamSvg}\r\n          title={\r\n            <Trans message=\"No users have been assigned to this role yet\" />\r\n          }\r\n          filteringTitle={<Trans message=\"No matching users\" />}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\ninterface AssignUserActionProps {\r\n  role: Role;\r\n}\r\nfunction AssignUserAction({role}: AssignUserActionProps) {\r\n  const addUsers = useAddUsersToRole(role);\r\n  return (\r\n    <DialogTrigger type=\"modal\">\r\n      <Button variant=\"flat\" color=\"primary\" disabled={addUsers.isPending}>\r\n        <Trans message=\"Assign user\" />\r\n      </Button>\r\n      <SelectUserDialog\r\n        onUserSelected={user => {\r\n          addUsers.mutate(\r\n            {userIds: [user.id as number]},\r\n            {\r\n              onSuccess: () => {\r\n                queryClient.invalidateQueries({\r\n                  queryKey: DatatableDataQueryKey('users', {\r\n                    roleId: `${role.id}`,\r\n                  }),\r\n                });\r\n              },\r\n            },\r\n          );\r\n        }}\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\ntype RemoveUsersActionProps = {\r\n  role: Role;\r\n};\r\nexport function RemoveUsersAction({role}: RemoveUsersActionProps) {\r\n  const removeUsers = useRemoveUsersFromRole(role);\r\n  const {selectedRows} = useDataTable();\r\n\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={isConfirmed => {\r\n        if (isConfirmed) {\r\n          removeUsers.mutate(\r\n            {userIds: selectedRows as number[]},\r\n            {\r\n              onSuccess: () => {\r\n                queryClient.invalidateQueries({\r\n                  queryKey: DatatableDataQueryKey('users', {\r\n                    roleId: `${role.id}`,\r\n                  }),\r\n                });\r\n              },\r\n            },\r\n          );\r\n        }\r\n      }}\r\n    >\r\n      <Button variant=\"flat\" color=\"danger\" disabled={removeUsers.isPending}>\r\n        <Trans message=\"Remove users\" />\r\n      </Button>\r\n      <ConfirmationDialog\r\n        title={\r\n          <Trans\r\n            message=\"Remove [one 1 user|other :count users] from “:name“ role?\"\r\n            values={{count: selectedRows.length, name: role.name}}\r\n          />\r\n        }\r\n        body={<Trans message=\"This will permanently remove the users.\" />}\r\n        confirm={<Trans message=\"Remove\" />}\r\n        isDanger\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n","import {useRole} from '../requests/use-role';\r\nimport {FullPageLoader} from '../../../ui/progress/full-page-loader';\r\nimport {Role} from '../../../auth/role';\r\nimport {Trans} from '../../../i18n/trans';\r\nimport {useForm} from 'react-hook-form';\r\nimport {Tabs} from '../../../ui/tabs/tabs';\r\nimport {Tab} from '../../../ui/tabs/tab';\r\nimport {TabList} from '../../../ui/tabs/tab-list';\r\nimport {TabPanel, TabPanels} from '../../../ui/tabs/tab-panels';\r\nimport {useUpdateRole} from '../requests/use-update-role';\r\nimport {CrupdateResourceLayout} from '../../crupdate-resource-layout';\r\nimport {CrupdateRolePageSettingsPanel} from './crupdate-role-settings-panel';\r\nimport {EditRolePageUsersPanel} from './edit-role-page-users-panel';\r\n\r\nexport function EditRolePage() {\r\n  const query = useRole();\r\n\r\n  if (query.status !== 'success') {\r\n    return <FullPageLoader />;\r\n  }\r\n\r\n  return <PageContent role={query.data.role} />;\r\n}\r\n\r\ninterface PageContentProps {\r\n  role: Role;\r\n}\r\nfunction PageContent({role}: PageContentProps) {\r\n  const form = useForm<Role>({defaultValues: role});\r\n  const updateRole = useUpdateRole();\r\n\r\n  return (\r\n    <CrupdateResourceLayout\r\n      form={form}\r\n      onSubmit={values => {\r\n        updateRole.mutate(values);\r\n      }}\r\n      title={<Trans message=\"Edit “:name“ role\" values={{name: role.name}} />}\r\n      isLoading={updateRole.isPending}\r\n    >\r\n      <Tabs isLazy>\r\n        <TabList>\r\n          <Tab>\r\n            <Trans message=\"Settings\" />\r\n          </Tab>\r\n          <Tab>\r\n            <Trans message=\"Users\" />\r\n          </Tab>\r\n        </TabList>\r\n        <TabPanels className=\"pt-20\">\r\n          <TabPanel>\r\n            <CrupdateRolePageSettingsPanel isInternal={role.internal} />\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <EditRolePageUsersPanel role={role} />\r\n          </TabPanel>\r\n        </TabPanels>\r\n      </Tabs>\r\n    </CrupdateResourceLayout>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '../../../http/query-client';\r\nimport {BackendResponse} from '../../../http/backend-response/backend-response';\r\nimport {toast} from '../../../ui/toast/toast';\r\nimport {Role} from '../../../auth/role';\r\nimport {useTrans} from '../../../i18n/use-trans';\r\nimport {message} from '../../../i18n/message';\r\nimport {DatatableDataQueryKey} from '../../../datatable/requests/paginated-resources';\r\nimport {onFormQueryError} from '../../../errors/on-form-query-error';\r\nimport {UseFormReturn} from 'react-hook-form';\r\n\r\ninterface Response extends BackendResponse {\r\n  role: Role;\r\n}\r\n\r\nexport interface CreateRolePayload extends Partial<Role> {}\r\n\r\nconst Endpoint = 'roles';\r\n\r\nexport function useCreateRole(form: UseFormReturn<CreateRolePayload>) {\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: (payload: CreateRolePayload) => createRole(payload),\r\n    onSuccess: () => {\r\n      toast(trans(message('Created new role')));\r\n      queryClient.invalidateQueries({queryKey: DatatableDataQueryKey('roles')});\r\n    },\r\n    onError: r => onFormQueryError(r, form),\r\n  });\r\n}\r\n\r\nfunction createRole({id, ...payload}: CreateRolePayload): Promise<Response> {\r\n  return apiClient.post(Endpoint, payload).then(r => r.data);\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport {CrupdateResourceLayout} from '../../crupdate-resource-layout';\r\nimport {Trans} from '../../../i18n/trans';\r\nimport {CrupdateRolePageSettingsPanel} from './crupdate-role-settings-panel';\r\nimport {CreateRolePayload, useCreateRole} from '../requests/user-create-role';\r\nimport {useNavigate} from '../../../utils/hooks/use-navigate';\r\n\r\nexport function CreateRolePage() {\r\n  const form = useForm<CreateRolePayload>({defaultValues: {type: 'sitewide'}});\r\n  const createRole = useCreateRole(form);\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <CrupdateResourceLayout\r\n      form={form}\r\n      onSubmit={values => {\r\n        createRole.mutate(values, {\r\n          onSuccess: response => {\r\n            navigate(`/admin/roles/${response.role.id}/edit`);\r\n          },\r\n        });\r\n      }}\r\n      title={<Trans message=\"Add new role\" />}\r\n      isLoading={createRole.isPending}\r\n    >\r\n      <CrupdateRolePageSettingsPanel />\r\n    </CrupdateResourceLayout>\r\n  );\r\n}\r\n","import {\r\n  BackendFilter,\r\n  FilterControlType,\r\n  FilterOperator,\r\n} from '../../datatable/filters/backend-filter';\r\nimport {message} from '../../i18n/message';\r\nimport {TagType} from '../../core/settings/site-config-context';\r\nimport {\r\n  createdAtFilter,\r\n  updatedAtFilter,\r\n} from '@common/datatable/filters/timestamp-filters';\r\n\r\nexport const TagIndexPageFilters = (types: TagType[]): BackendFilter[] => {\r\n  return [\r\n    {\r\n      key: 'type',\r\n      label: message('Type'),\r\n      description: message('Type of the tag'),\r\n      defaultOperator: FilterOperator.ne,\r\n      control: {\r\n        type: FilterControlType.Select,\r\n        defaultValue: types[0].name,\r\n        options: types.map(type => ({\r\n          key: type.name,\r\n          label: message(type.name),\r\n          value: type.name,\r\n        })),\r\n      },\r\n    },\r\n    createdAtFilter({\r\n      description: message('Date tag was created'),\r\n    }),\r\n    updatedAtFilter({\r\n      description: message('Date tag was last updated'),\r\n    }),\r\n  ];\r\n};\r\n","export default \"__VITE_ASSET__8de61ea9__\"","import {Tag} from '../../tags/tag';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {Form} from '../../ui/forms/form';\r\nimport {FormTextField} from '../../ui/forms/input-field/text-field/text-field';\r\nimport {FormSelect} from '../../ui/forms/select/select';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {Item} from '../../ui/forms/listbox/item';\r\nimport {useContext} from 'react';\r\nimport {SiteConfigContext} from '../../core/settings/site-config-context';\r\n\r\ninterface CrupdateTagFormProps {\r\n  onSubmit: (values: Partial<Tag>) => void;\r\n  formId: string;\r\n  form: UseFormReturn<Partial<Tag>>;\r\n}\r\nexport function CrupdateTagForm({\r\n  form,\r\n  onSubmit,\r\n  formId,\r\n}: CrupdateTagFormProps) {\r\n  const {\r\n    tags: {types},\r\n  } = useContext(SiteConfigContext);\r\n  const watchedType = form.watch('type');\r\n  const isSystem = !!types.find(t => t.name === watchedType && t.system);\r\n\r\n  return (\r\n    <Form id={formId} form={form} onSubmit={onSubmit}>\r\n      <FormTextField\r\n        name=\"name\"\r\n        label={<Trans message=\"Name\" />}\r\n        description={<Trans message=\"Unique tag identifier.\" />}\r\n        className=\"mb-20\"\r\n        required\r\n        autoFocus\r\n      />\r\n      <FormTextField\r\n        name=\"display_name\"\r\n        label={<Trans message=\"Display name\" />}\r\n        description={<Trans message=\"User friendly tag name.\" />}\r\n        className=\"mb-20\"\r\n      />\r\n      <FormSelect\r\n        label={<Trans message=\"Type\" />}\r\n        name=\"type\"\r\n        selectionMode=\"single\"\r\n        disabled={isSystem}\r\n      >\r\n        {types\r\n          .filter(t => !t.system)\r\n          .map(type => (\r\n            <Item key={type.name} value={type.name}>\r\n              <Trans message={type.name} />\r\n            </Item>\r\n          ))}\r\n      </FormSelect>\r\n    </Form>\r\n  );\r\n}\r\n","import slugify from 'slugify';\r\n\r\nexport function slugifyString(\r\n  text: string,\r\n  replacement = '-',\r\n  strict = false,\r\n): string {\r\n  if (!text) return text;\r\n  let slugified = slugify(text, {\r\n    lower: true,\r\n    replacement,\r\n    strict,\r\n    remove: /[*+~.()'\"!:@?\\|/\\\\#]/g,\r\n  });\r\n  // some chinese text might not get slugified properly,\r\n  // just replace whitespace with dash in that case\r\n  if (!slugified) {\r\n    slugified = text.replace(/\\s+/g, '-').toLowerCase();\r\n  }\r\n  return slugified;\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {message} from '@common/i18n/message';\r\nimport {Tag} from '@common/tags/tag';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {slugifyString} from '@common/utils/string/slugify-string';\r\n\r\ninterface Response extends BackendResponse {\r\n  tag: Tag;\r\n}\r\n\r\ninterface Payload extends Partial<Tag> {}\r\n\r\nexport function useCreateNewTag(form: UseFormReturn<Payload>) {\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: (props: Payload) => createNewTag(props),\r\n    onSuccess: () => {\r\n      toast(trans(message('Tag created')));\r\n      queryClient.invalidateQueries({queryKey: DatatableDataQueryKey('tags')});\r\n    },\r\n    onError: err => onFormQueryError(err, form),\r\n  });\r\n}\r\n\r\nfunction createNewTag(payload: Payload): Promise<Response> {\r\n  payload.name = slugifyString(payload.name!);\r\n  return apiClient.post('tags', payload).then(r => r.data);\r\n}\r\n","import {Dialog} from '../../ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '../../ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {DialogBody} from '../../ui/overlays/dialog/dialog-body';\r\nimport {CrupdateTagForm} from './crupdate-tag-form';\r\nimport {DialogFooter} from '../../ui/overlays/dialog/dialog-footer';\r\nimport {Button} from '../../ui/buttons/button';\r\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\r\nimport {useCreateNewTag} from './requests/use-create-new-tag';\r\nimport {useContext} from 'react';\r\nimport {SiteConfigContext} from '../../core/settings/site-config-context';\r\nimport {useForm} from 'react-hook-form';\r\nimport {Tag} from '../../tags/tag';\r\n\r\nexport function CreateTagDialog() {\r\n  const {close, formId} = useDialogContext();\r\n  const {\r\n    tags: {types},\r\n  } = useContext(SiteConfigContext);\r\n  const form = useForm<Partial<Tag>>({\r\n    defaultValues: {\r\n      type: types[0].name,\r\n    },\r\n  });\r\n  const createNewTag = useCreateNewTag(form);\r\n\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Add new tag\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <CrupdateTagForm\r\n          formId={formId}\r\n          form={form}\r\n          onSubmit={values => {\r\n            createNewTag.mutate(values, {\r\n              onSuccess: () => {\r\n                close();\r\n              },\r\n            });\r\n          }}\r\n        />\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button\r\n          onClick={() => {\r\n            close();\r\n          }}\r\n        >\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          form={formId}\r\n          disabled={createNewTag.isPending}\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n        >\r\n          <Trans message=\"Save\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {message} from '@common/i18n/message';\r\nimport {Tag} from '@common/tags/tag';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {slugifyString} from '@common/utils/string/slugify-string';\r\n\r\ninterface Response extends BackendResponse {\r\n  tag: Tag;\r\n}\r\n\r\nexport interface UpdateTagPayload extends Partial<Tag> {\r\n  id: number;\r\n}\r\n\r\nexport function useUpdateTag(form: UseFormReturn<UpdateTagPayload>) {\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: (props: UpdateTagPayload) => updateTag(props),\r\n    onSuccess: () => {\r\n      toast(trans(message('Tag updated')));\r\n      queryClient.invalidateQueries({queryKey: DatatableDataQueryKey('tags')});\r\n    },\r\n    onError: err => onFormQueryError(err, form),\r\n  });\r\n}\r\n\r\nfunction updateTag({id, ...payload}: UpdateTagPayload): Promise<Response> {\r\n  if (payload.name) {\r\n    payload.name = slugifyString(payload.name!);\r\n  }\r\n  return apiClient.put(`tags/${id}`, payload).then(r => r.data);\r\n}\r\n","import {Dialog} from '../../ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '../../ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {DialogBody} from '../../ui/overlays/dialog/dialog-body';\r\nimport {CrupdateTagForm} from './crupdate-tag-form';\r\nimport {DialogFooter} from '../../ui/overlays/dialog/dialog-footer';\r\nimport {Button} from '../../ui/buttons/button';\r\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\r\nimport {useForm} from 'react-hook-form';\r\nimport {Tag} from '../../tags/tag';\r\nimport {UpdateTagPayload, useUpdateTag} from './requests/use-update-tag';\r\n\r\ninterface UpdateTagDialogProps {\r\n  tag: Tag;\r\n}\r\nexport function UpdateTagDialog({tag}: UpdateTagDialogProps) {\r\n  const {close, formId} = useDialogContext();\r\n  const form = useForm<UpdateTagPayload>({\r\n    defaultValues: {\r\n      id: tag.id,\r\n      name: tag.name,\r\n      display_name: tag.display_name,\r\n      type: tag.type,\r\n    },\r\n  });\r\n  const updateTag = useUpdateTag(form);\r\n\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Update “:name“ tag\" values={{name: tag.name}} />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <CrupdateTagForm\r\n          formId={formId}\r\n          form={form as any}\r\n          onSubmit={values => {\r\n            updateTag.mutate(values as UpdateTagPayload, {\r\n              onSuccess: () => {\r\n                close();\r\n              },\r\n            });\r\n          }}\r\n        />\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button\r\n          onClick={() => {\r\n            close();\r\n          }}\r\n        >\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          form={formId}\r\n          disabled={updateTag.isPending}\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n        >\r\n          <Trans message=\"Save\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, {useContext, useMemo} from 'react';\r\nimport {DataTablePage} from '../../datatable/page/data-table-page';\r\nimport {IconButton} from '../../ui/buttons/icon-button';\r\nimport {EditIcon} from '../../icons/material/Edit';\r\nimport {FormattedDate} from '../../i18n/formatted-date';\r\nimport {ColumnConfig} from '../../datatable/column-config';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\r\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\r\nimport {Tag} from '../../tags/tag';\r\nimport {SiteConfigContext} from '../../core/settings/site-config-context';\r\nimport {TagIndexPageFilters} from './tag-index-page-filters';\r\nimport softwareEngineerSvg from './software-engineer.svg';\r\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\r\nimport {CreateTagDialog} from './create-tag-dialog';\r\nimport {UpdateTagDialog} from './update-tag-dialog';\r\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\r\n\r\nconst columnConfig: ColumnConfig<Tag>[] = [\r\n  {\r\n    key: 'name',\r\n    allowsSorting: true,\r\n    visibleInMode: 'all',\r\n    width: 'flex-3 min-w-200',\r\n    header: () => <Trans message=\"Name\" />,\r\n    body: tag => tag.name,\r\n  },\r\n  {\r\n    key: 'type',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Type\" />,\r\n    body: tag => tag.type,\r\n  },\r\n  {\r\n    key: 'display_name',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Display name\" />,\r\n    body: tag => tag.display_name,\r\n  },\r\n  {\r\n    key: 'updated_at',\r\n    allowsSorting: true,\r\n    width: 'w-100',\r\n    header: () => <Trans message=\"Last updated\" />,\r\n    body: tag => <FormattedDate date={tag.updated_at} />,\r\n  },\r\n  {\r\n    key: 'actions',\r\n    header: () => <Trans message=\"Actions\" />,\r\n    hideHeader: true,\r\n    align: 'end',\r\n    width: 'w-42 flex-shrink-0',\r\n    visibleInMode: 'all',\r\n    body: tag => {\r\n      return (\r\n        <DialogTrigger type=\"modal\">\r\n          <IconButton size=\"md\" className=\"text-muted\">\r\n            <EditIcon />\r\n          </IconButton>\r\n          <UpdateTagDialog tag={tag} />\r\n        </DialogTrigger>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\nexport function TagIndexPage() {\r\n  const {tags} = useContext(SiteConfigContext);\r\n  const filters = useMemo(() => {\r\n    return TagIndexPageFilters(tags.types);\r\n  }, [tags.types]);\r\n\r\n  return (\r\n    <DataTablePage\r\n      endpoint=\"tags\"\r\n      title={<Trans message=\"Tags\" />}\r\n      columns={columnConfig}\r\n      filters={filters}\r\n      actions={<Actions />}\r\n      selectedActions={<DeleteSelectedItemsAction />}\r\n      emptyStateMessage={\r\n        <DataTableEmptyStateMessage\r\n          image={softwareEngineerSvg}\r\n          title={<Trans message=\"No tags have been created yet\" />}\r\n          filteringTitle={<Trans message=\"No matching tags\" />}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction Actions() {\r\n  return (\r\n    <>\r\n      <DialogTrigger type=\"modal\">\r\n        <DataTableAddItemButton>\r\n          <Trans message=\"Add new tag\" />\r\n        </DataTableAddItemButton>\r\n        <CreateTagDialog />\r\n      </DialogTrigger>\r\n    </>\r\n  );\r\n}\r\n","import {Fragment, memo} from 'react';\r\nimport {prettyBytes} from './utils/pretty-bytes';\r\n\r\ninterface FormattedBytesProps {\r\n  bytes?: number;\r\n}\r\nexport const FormattedBytes = memo(({bytes}: FormattedBytesProps) => {\r\n  return <Fragment>{prettyBytes(bytes)}</Fragment>;\r\n});\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const VisibilityIcon = createSvgIcon(\r\n  <path d=\"M12 6c3.79 0 7.17 2.13 8.82 5.5C19.17 14.87 15.79 17 12 17s-7.17-2.13-8.82-5.5C4.83 8.13 8.21 6 12 6m0-2C7 4 2.73 7.11 1 11.5 2.73 15.89 7 19 12 19s9.27-3.11 11-7.5C21.27 7.11 17 4 12 4zm0 5c1.38 0 2.5 1.12 2.5 2.5S13.38 14 12 14s-2.5-1.12-2.5-2.5S10.62 9 12 9m0-2c-2.48 0-4.5 2.02-4.5 4.5S9.52 16 12 16s4.5-2.02 4.5-4.5S14.48 7 12 7z\" />\r\n, 'VisibilityOutlined');\r\n","export default \"__VITE_ASSET__31048831__\"","import React, {Fragment} from 'react';\r\nimport {DataTablePage} from '../../datatable/page/data-table-page';\r\nimport {IconButton} from '../../ui/buttons/icon-button';\r\nimport {FormattedDate} from '../../i18n/formatted-date';\r\nimport {ColumnConfig} from '../../datatable/column-config';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\r\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\r\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\r\nimport {FileEntry} from '../../uploads/file-entry';\r\nimport {NameWithAvatar} from '../../datatable/column-templates/name-with-avatar';\r\nimport {User} from '../../auth/user';\r\nimport {CheckIcon} from '../../icons/material/Check';\r\nimport {CloseIcon} from '../../icons/material/Close';\r\nimport {FormattedBytes} from '../../uploads/formatted-bytes';\r\nimport {VisibilityIcon} from '../../icons/material/Visibility';\r\nimport uploadSvg from './upload.svg';\r\nimport {FilePreviewDialog} from '../../uploads/preview/file-preview-dialog';\r\nimport {FILE_ENTRY_INDEX_FILTERS} from './file-entry-index-filters';\r\nimport {FileTypeIcon} from '../../uploads/file-type-icon/file-type-icon';\r\n\r\nconst columnConfig: ColumnConfig<FileEntry>[] = [\r\n  {\r\n    key: 'name',\r\n    allowsSorting: true,\r\n    visibleInMode: 'all',\r\n    width: 'flex-3 min-w-200',\r\n    header: () => <Trans message=\"Name\" />,\r\n    body: entry => (\r\n      <Fragment>\r\n        <div className=\"overflow-x-hidden overflow-ellipsis\">{entry.name}</div>\r\n        <div className=\"text-muted text-xs overflow-x-hidden overflow-ellipsis\">\r\n          {entry.file_name}\r\n        </div>\r\n      </Fragment>\r\n    ),\r\n  },\r\n  {\r\n    key: 'owner_id',\r\n    allowsSorting: true,\r\n    width: 'flex-3 min-w-200',\r\n    header: () => <Trans message=\"Uploader\" />,\r\n    body: entry => {\r\n      const user = entry.users?.[0] as User;\r\n      if (!user) return null;\r\n      return (\r\n        <NameWithAvatar\r\n          image={user.avatar}\r\n          label={user.display_name}\r\n          description={user.email}\r\n        />\r\n      );\r\n    },\r\n  },\r\n  {\r\n    key: 'type',\r\n    width: 'w-100 flex-shrink-0',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Type\" />,\r\n    body: entry => (\r\n      <div className=\"flex items-center gap-12\">\r\n        <FileTypeIcon type={entry.type} className=\"w-24 h-24 overflow-hidden\" />\r\n        <div className=\"capitalize\">{entry.type}</div>\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    key: 'public',\r\n    allowsSorting: true,\r\n    width: 'w-60 flex-shrink-0',\r\n    header: () => <Trans message=\"Public\" />,\r\n    body: entry =>\r\n      entry.public ? (\r\n        <CheckIcon className=\"icon-md text-positive\" />\r\n      ) : (\r\n        <CloseIcon className=\"icon-md text-danger\" />\r\n      ),\r\n  },\r\n  {\r\n    key: 'file_size',\r\n    allowsSorting: true,\r\n    maxWidth: 'max-w-100',\r\n    header: () => <Trans message=\"File size\" />,\r\n    body: entry => <FormattedBytes bytes={entry.file_size} />,\r\n  },\r\n  {\r\n    key: 'updated_at',\r\n    allowsSorting: true,\r\n    width: 'w-100',\r\n    header: () => <Trans message=\"Last updated\" />,\r\n    body: entry => <FormattedDate date={entry.updated_at} />,\r\n  },\r\n  {\r\n    key: 'actions',\r\n    header: () => <Trans message=\"Actions\" />,\r\n    hideHeader: true,\r\n    align: 'end',\r\n    width: 'w-42 flex-shrink-0',\r\n    visibleInMode: 'all',\r\n    body: entry => {\r\n      return (\r\n        <DialogTrigger type=\"modal\">\r\n          <IconButton size=\"md\" className=\"text-muted\">\r\n            <VisibilityIcon />\r\n          </IconButton>\r\n          <FilePreviewDialog entries={[entry]} />\r\n        </DialogTrigger>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\nexport function FileEntryIndexPage() {\r\n  return (\r\n    <DataTablePage\r\n      endpoint=\"file-entries\"\r\n      title={<Trans message=\"Uploaded files and folders\" />}\r\n      columns={columnConfig}\r\n      filters={FILE_ENTRY_INDEX_FILTERS}\r\n      selectedActions={<DeleteSelectedItemsAction />}\r\n      emptyStateMessage={\r\n        <DataTableEmptyStateMessage\r\n          image={uploadSvg}\r\n          title={<Trans message=\"Nothing has been uploaded yet\" />}\r\n          filteringTitle={<Trans message=\"No matching files or folders\" />}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import {\r\n  BackendFilter,\r\n  FilterControlType,\r\n  FilterOperator,\r\n} from '../../datatable/filters/backend-filter';\r\nimport {message} from '../../i18n/message';\r\nimport {\r\n  createdAtFilter,\r\n  timestampFilter,\r\n  updatedAtFilter,\r\n} from '../../datatable/filters/timestamp-filters';\r\n\r\nexport const SubscriptionIndexPageFilters: BackendFilter[] = [\r\n  {\r\n    key: 'ends_at',\r\n    label: message('Status'),\r\n    description: message('Whether subscription is active or cancelled'),\r\n    defaultOperator: FilterOperator.eq,\r\n    control: {\r\n      type: FilterControlType.Select,\r\n      defaultValue: 'active',\r\n      options: [\r\n        {\r\n          key: 'active',\r\n          label: message('Active'),\r\n          value: {value: null, operator: FilterOperator.eq},\r\n        },\r\n        {\r\n          key: 'cancelled',\r\n          label: message('Cancelled'),\r\n          value: {value: null, operator: FilterOperator.ne},\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    control: {\r\n      type: FilterControlType.Select,\r\n      defaultValue: 'stripe',\r\n      options: [\r\n        {\r\n          key: 'stripe',\r\n          label: message('Stripe'),\r\n          value: 'stripe',\r\n        },\r\n        {\r\n          key: 'paypal',\r\n          label: message('PayPal'),\r\n          value: 'paypal',\r\n        },\r\n        {\r\n          key: 'none',\r\n          label: message('None'),\r\n          value: 'none',\r\n        },\r\n      ],\r\n    },\r\n    key: 'gateway_name',\r\n    label: message('Gateway'),\r\n    description: message(\r\n      'With which payment provider was subscription created'\r\n    ),\r\n    defaultOperator: FilterOperator.eq,\r\n  },\r\n  timestampFilter({\r\n    key: 'renews_at',\r\n    label: message('Renew date'),\r\n    description: message('Date subscription will renew'),\r\n  }),\r\n  createdAtFilter({\r\n    description: message('Date subscription was created'),\r\n  }),\r\n  updatedAtFilter({\r\n    description: message('Date subscription was last updated'),\r\n  }),\r\n];\r\n","export default \"__VITE_ASSET__2e46d67b__\"","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '../../../http/query-client';\r\nimport {useTrans} from '../../../i18n/use-trans';\r\nimport {BackendResponse} from '../../../http/backend-response/backend-response';\r\nimport {toast} from '../../../ui/toast/toast';\r\nimport {message} from '../../../i18n/message';\r\nimport {DatatableDataQueryKey} from '../../../datatable/requests/paginated-resources';\r\nimport {onFormQueryError} from '../../../errors/on-form-query-error';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {Subscription} from '../../../billing/subscription';\r\n\r\ninterface Response extends BackendResponse {\r\n  subscription: Subscription;\r\n}\r\n\r\nexport interface UpdateSubscriptionPayload extends Partial<Subscription> {\r\n  id: number;\r\n}\r\n\r\nexport function useUpdateSubscription(\r\n  form: UseFormReturn<UpdateSubscriptionPayload>,\r\n) {\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: (props: UpdateSubscriptionPayload) => updateSubscription(props),\r\n    onSuccess: () => {\r\n      toast(trans(message('Subscription updated')));\r\n      queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey('billing/subscriptions'),\r\n      });\r\n    },\r\n    onError: err => onFormQueryError(err, form),\r\n  });\r\n}\r\n\r\nfunction updateSubscription({\r\n  id,\r\n  ...payload\r\n}: UpdateSubscriptionPayload): Promise<Response> {\r\n  return apiClient\r\n    .put(`billing/subscriptions/${id}`, payload)\r\n    .then(r => r.data);\r\n}\r\n","import {UseFormReturn} from 'react-hook-form';\r\nimport {Form} from '../../ui/forms/form';\r\nimport {FormTextField} from '../../ui/forms/input-field/text-field/text-field';\r\nimport {FormSelect} from '../../ui/forms/select/select';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {Item} from '../../ui/forms/listbox/item';\r\nimport {Subscription} from '../../billing/subscription';\r\nimport {FormDatePicker} from '../../ui/forms/input-field/date/date-picker/date-picker';\r\nimport {useProducts} from '../../billing/pricing-table/use-products';\r\nimport {FormattedPrice} from '../../i18n/formatted-price';\r\nimport {FormNormalizedModelField} from '../../ui/forms/normalized-model-field';\r\n\r\ninterface CrupdateSubscriptionForm {\r\n  onSubmit: (values: Partial<Subscription>) => void;\r\n  formId: string;\r\n  form: UseFormReturn<Partial<Subscription>>;\r\n}\r\nexport function CrupdateSubscriptionForm({\r\n  form,\r\n  onSubmit,\r\n  formId,\r\n}: CrupdateSubscriptionForm) {\r\n  const query = useProducts();\r\n  // @ts-ignore\r\n  const watchedProductId = form.watch('product_id');\r\n  const selectedProduct = query.data?.products.find(\r\n    p => p.id === watchedProductId,\r\n  );\r\n\r\n  return (\r\n    <Form id={formId} form={form} onSubmit={onSubmit}>\r\n      <FormNormalizedModelField\r\n        name=\"user_id\"\r\n        className=\"mb-20\"\r\n        endpoint=\"normalized-models/user\"\r\n        label={<Trans message=\"User\" />}\r\n      />\r\n      <FormSelect\r\n        name=\"product_id\"\r\n        selectionMode=\"single\"\r\n        className=\"mb-20\"\r\n        label={<Trans message=\"Plan\" />}\r\n      >\r\n        {query.data?.products\r\n          .filter(p => !p.free)\r\n          .map(product => (\r\n            <Item key={product.id} value={product.id}>\r\n              <Trans message={product.name} />\r\n            </Item>\r\n          ))}\r\n      </FormSelect>\r\n      {!selectedProduct?.free && (\r\n        <FormSelect\r\n          name=\"price_id\"\r\n          selectionMode=\"single\"\r\n          className=\"mb-20\"\r\n          label={<Trans message=\"Price\" />}\r\n        >\r\n          {selectedProduct?.prices.map(price => (\r\n            <Item key={price.id} value={price.id}>\r\n              <FormattedPrice price={price} />\r\n            </Item>\r\n          ))}\r\n        </FormSelect>\r\n      )}\r\n      <FormTextField\r\n        inputElementType=\"textarea\"\r\n        rows={3}\r\n        name=\"description\"\r\n        label={<Trans message=\"Description\" />}\r\n        className=\"mb-20\"\r\n      />\r\n      <FormDatePicker\r\n        className=\"mb-20\"\r\n        name=\"renews_at\"\r\n        granularity=\"day\"\r\n        label={<Trans message=\"Renews at\" />}\r\n        description={\r\n          <Trans message=\"This will only change local records. User will continue to be billed on their original cycle on the payment gateway.\" />\r\n        }\r\n      />\r\n      <FormDatePicker\r\n        className=\"mb-20\"\r\n        name=\"ends_at\"\r\n        granularity=\"day\"\r\n        label={<Trans message=\"Ends at\" />}\r\n        description={\r\n          <Trans message=\"This will only change local records. User will continue to be billed on their original cycle on the payment gateway.\" />\r\n        }\r\n      />\r\n    </Form>\r\n  );\r\n}\r\n","import {Dialog} from '../../ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '../../ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {DialogBody} from '../../ui/overlays/dialog/dialog-body';\r\nimport {DialogFooter} from '../../ui/overlays/dialog/dialog-footer';\r\nimport {Button} from '../../ui/buttons/button';\r\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\r\nimport {useForm} from 'react-hook-form';\r\nimport {Subscription} from '../../billing/subscription';\r\nimport {\r\n  UpdateSubscriptionPayload,\r\n  useUpdateSubscription,\r\n} from './requests/use-update-subscription';\r\nimport {CrupdateSubscriptionForm} from './crupdate-subscription-form';\r\n\r\ninterface UpdateSubscriptionDialogProps {\r\n  subscription: Subscription;\r\n}\r\nexport function UpdateSubscriptionDialog({\r\n  subscription,\r\n}: UpdateSubscriptionDialogProps) {\r\n  const {close, formId} = useDialogContext();\r\n  const form = useForm<UpdateSubscriptionPayload>({\r\n    defaultValues: {\r\n      id: subscription.id,\r\n      product_id: subscription.product_id,\r\n      price_id: subscription.price_id,\r\n      description: subscription.description,\r\n      renews_at: subscription.renews_at,\r\n      ends_at: subscription.ends_at,\r\n      user_id: subscription.user_id,\r\n    },\r\n  });\r\n  const updateSubscription = useUpdateSubscription(form);\r\n\r\n  return (\r\n    <Dialog size=\"md\">\r\n      <DialogHeader>\r\n        <Trans message=\"Update subscription\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <CrupdateSubscriptionForm\r\n          formId={formId}\r\n          form={form as any}\r\n          onSubmit={values => {\r\n            updateSubscription.mutate(values as UpdateSubscriptionPayload, {\r\n              onSuccess: () => {\r\n                close();\r\n              },\r\n            });\r\n          }}\r\n        />\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button\r\n          onClick={() => {\r\n            close();\r\n          }}\r\n        >\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          form={formId}\r\n          disabled={updateSubscription.isPending}\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n        >\r\n          <Trans message=\"Save\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '../../../http/query-client';\r\nimport {useTrans} from '../../../i18n/use-trans';\r\nimport {BackendResponse} from '../../../http/backend-response/backend-response';\r\nimport {toast} from '../../../ui/toast/toast';\r\nimport {message} from '../../../i18n/message';\r\nimport {Tag} from '../../../tags/tag';\r\nimport {DatatableDataQueryKey} from '../../../datatable/requests/paginated-resources';\r\nimport {onFormQueryError} from '../../../errors/on-form-query-error';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {Subscription} from '../../../billing/subscription';\r\n\r\nconst endpoint = 'billing/subscriptions';\r\n\r\ninterface Response extends BackendResponse {\r\n  tag: Tag;\r\n}\r\n\r\ninterface Payload extends Partial<Subscription> {}\r\n\r\nexport function useCreateSubscription(form: UseFormReturn<Payload>) {\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: (props: Payload) => createNewSubscription(props),\r\n    onSuccess: () => {\r\n      toast(trans(message('Subscription created')));\r\n      queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey(endpoint),\r\n      });\r\n    },\r\n    onError: err => onFormQueryError(err, form),\r\n  });\r\n}\r\n\r\nfunction createNewSubscription(payload: Payload): Promise<Response> {\r\n  return apiClient.post(endpoint, payload).then(r => r.data);\r\n}\r\n","import {Dialog} from '../../ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '../../ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {DialogBody} from '../../ui/overlays/dialog/dialog-body';\r\nimport {DialogFooter} from '../../ui/overlays/dialog/dialog-footer';\r\nimport {Button} from '../../ui/buttons/button';\r\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\r\nimport {useForm} from 'react-hook-form';\r\nimport {useCreateSubscription} from './requests/use-create-subscription';\r\nimport {Subscription} from '../../billing/subscription';\r\nimport {CrupdateSubscriptionForm} from './crupdate-subscription-form';\r\n\r\nexport function CreateSubscriptionDialog() {\r\n  const {close, formId} = useDialogContext();\r\n  const form = useForm<Partial<Subscription>>({});\r\n  const createSubscription = useCreateSubscription(form);\r\n\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Add new subscription\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <CrupdateSubscriptionForm\r\n          formId={formId}\r\n          form={form}\r\n          onSubmit={values => {\r\n            createSubscription.mutate(values, {\r\n              onSuccess: () => {\r\n                close();\r\n              },\r\n            });\r\n          }}\r\n        />\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button\r\n          onClick={() => {\r\n            close();\r\n          }}\r\n        >\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          form={formId}\r\n          disabled={createSubscription.isPending}\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n        >\r\n          <Trans message=\"Save\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const PauseIcon = createSvgIcon(\r\n  <path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\" />\r\n, 'PauseOutlined');\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const PlayArrowIcon = createSvgIcon(\r\n  <path d=\"M10 8.64 15.27 12 10 15.36V8.64M8 5v14l11-7L8 5z\" />\r\n, 'PlayArrowOutlined');\r\n","import React, {Fragment} from 'react';\r\nimport {DataTablePage} from '../../datatable/page/data-table-page';\r\nimport {IconButton} from '../../ui/buttons/icon-button';\r\nimport {EditIcon} from '../../icons/material/Edit';\r\nimport {ColumnConfig} from '../../datatable/column-config';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {DeleteSelectedItemsAction} from '../../datatable/page/delete-selected-items-action';\r\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\r\nimport {SubscriptionIndexPageFilters} from './subscription-index-page-filters';\r\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\r\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\r\nimport subscriptionsSvg from './subscriptions.svg';\r\nimport {NameWithAvatar} from '../../datatable/column-templates/name-with-avatar';\r\nimport {Subscription} from '../../billing/subscription';\r\nimport {CloseIcon} from '../../icons/material/Close';\r\nimport {FormattedDate} from '../../i18n/formatted-date';\r\nimport {UpdateSubscriptionDialog} from './update-subscription-dialog';\r\nimport {CreateSubscriptionDialog} from './create-subscription-dialog';\r\nimport {useCancelSubscription} from '../../billing/billing-page/requests/use-cancel-subscription';\r\nimport {PauseIcon} from '../../icons/material/Pause';\r\nimport {queryClient} from '../../http/query-client';\r\nimport {DatatableDataQueryKey} from '../../datatable/requests/paginated-resources';\r\nimport {Tooltip} from '../../ui/tooltip/tooltip';\r\nimport {useResumeSubscription} from '../../billing/billing-page/requests/use-resume-subscription';\r\nimport {PlayArrowIcon} from '../../icons/material/PlayArrow';\r\nimport {ConfirmationDialog} from '../../ui/overlays/dialog/confirmation-dialog';\r\nimport {Chip} from '../../ui/forms/input-field/chip-field/chip';\r\n\r\nconst endpoint = 'billing/subscriptions';\r\n\r\nconst columnConfig: ColumnConfig<Subscription>[] = [\r\n  {\r\n    key: 'user_id',\r\n    allowsSorting: true,\r\n    width: 'flex-3 min-w-200',\r\n    visibleInMode: 'all',\r\n    header: () => <Trans message=\"Customer\" />,\r\n    body: subscription =>\r\n      subscription.user && (\r\n        <NameWithAvatar\r\n          image={subscription.user.avatar}\r\n          label={subscription.user.display_name}\r\n          description={subscription.user.email}\r\n        />\r\n      ),\r\n  },\r\n  {\r\n    key: 'status',\r\n    width: 'w-100 flex-shrink-0',\r\n    header: () => <Trans message=\"Status\" />,\r\n    body: subscription => (\r\n      <Chip\r\n        size=\"xs\"\r\n        color={subscription.valid ? 'positive' : undefined}\r\n        radius=\"rounded\"\r\n        className=\"w-max\"\r\n      >\r\n        {subscription.gateway_status}\r\n      </Chip>\r\n    ),\r\n  },\r\n  {\r\n    key: 'product_id',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Plan\" />,\r\n    body: subscription => subscription.product?.name,\r\n  },\r\n  {\r\n    key: 'gateway_name',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Gateway\" />,\r\n    body: subscription => (\r\n      <span className=\"capitalize\">{subscription.gateway_name}</span>\r\n    ),\r\n  },\r\n  {\r\n    key: 'renews_at',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Renews at\" />,\r\n    body: subscription => <FormattedDate date={subscription.renews_at} />,\r\n  },\r\n  {\r\n    key: 'ends_at',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Ends at\" />,\r\n    body: subscription => <FormattedDate date={subscription.ends_at} />,\r\n  },\r\n  {\r\n    key: 'created_at',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Created at\" />,\r\n    body: subscription => <FormattedDate date={subscription.created_at} />,\r\n  },\r\n  {\r\n    key: 'actions',\r\n    header: () => <Trans message=\"Actions\" />,\r\n    hideHeader: true,\r\n    align: 'end',\r\n    visibleInMode: 'all',\r\n    width: 'w-128 flex-shrink-0',\r\n    body: subscription => {\r\n      return <SubscriptionActions subscription={subscription} />;\r\n    },\r\n  },\r\n];\r\n\r\nexport function SubscriptionsIndexPage() {\r\n  return (\r\n    <DataTablePage\r\n      endpoint={endpoint}\r\n      title={<Trans message=\"Subscriptions\" />}\r\n      columns={columnConfig}\r\n      filters={SubscriptionIndexPageFilters}\r\n      actions={<PageActions />}\r\n      enableSelection={false}\r\n      selectedActions={<DeleteSelectedItemsAction />}\r\n      queryParams={{with: 'product'}}\r\n      emptyStateMessage={\r\n        <DataTableEmptyStateMessage\r\n          image={subscriptionsSvg}\r\n          title={<Trans message=\"No subscriptions have been created yet\" />}\r\n          filteringTitle={<Trans message=\"No matching subscriptions\" />}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction PageActions() {\r\n  return (\r\n    <>\r\n      <DialogTrigger type=\"modal\">\r\n        <DataTableAddItemButton>\r\n          <Trans message=\"Add new subscription\" />\r\n        </DataTableAddItemButton>\r\n        <CreateSubscriptionDialog />\r\n      </DialogTrigger>\r\n    </>\r\n  );\r\n}\r\n\r\ninterface SubscriptionActionsProps {\r\n  subscription: Subscription;\r\n}\r\nfunction SubscriptionActions({subscription}: SubscriptionActionsProps) {\r\n  return (\r\n    <Fragment>\r\n      <DialogTrigger type=\"modal\">\r\n        <IconButton size=\"md\" className=\"text-muted\">\r\n          <EditIcon />\r\n        </IconButton>\r\n        <UpdateSubscriptionDialog subscription={subscription} />\r\n      </DialogTrigger>\r\n      {subscription.cancelled && subscription.on_grace_period ? (\r\n        <ResumeSubscriptionButton subscription={subscription} />\r\n      ) : null}\r\n      {subscription.active ? (\r\n        <SuspendSubscriptionButton subscription={subscription} />\r\n      ) : null}\r\n      <CancelSubscriptionButton subscription={subscription} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction SuspendSubscriptionButton({subscription}: SubscriptionActionsProps) {\r\n  const cancelSubscription = useCancelSubscription();\r\n\r\n  const handleSuspendSubscription = () => {\r\n    cancelSubscription.mutate(\r\n      {subscriptionId: subscription.id},\r\n      {\r\n        onSuccess: () => {\r\n          queryClient.invalidateQueries({\r\n            queryKey: DatatableDataQueryKey(endpoint),\r\n          });\r\n        },\r\n      },\r\n    );\r\n  };\r\n\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={confirmed => {\r\n        if (confirmed) {\r\n          handleSuspendSubscription();\r\n        }\r\n      }}\r\n    >\r\n      <Tooltip label={<Trans message=\"Cancel subscription\" />}>\r\n        <IconButton\r\n          size=\"md\"\r\n          className=\"text-muted\"\r\n          disabled={cancelSubscription.isPending}\r\n        >\r\n          <PauseIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <ConfirmationDialog\r\n        title={<Trans message=\"Cancel subscription\" />}\r\n        body={\r\n          <div>\r\n            <Trans message=\"Are you sure you want to cancel this subscription?\" />\r\n            <div className=\"mt-10 text-sm font-semibold\">\r\n              <Trans message=\"This will put user on grace period until their next scheduled renewal date. Subscription can be renewed until that date by user or from admin area.\" />\r\n            </div>\r\n          </div>\r\n        }\r\n        confirm={<Trans message=\"Confirm\" />}\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\nfunction ResumeSubscriptionButton({subscription}: SubscriptionActionsProps) {\r\n  const resumeSubscription = useResumeSubscription();\r\n  const handleResumeSubscription = () => {\r\n    resumeSubscription.mutate(\r\n      {subscriptionId: subscription.id},\r\n      {\r\n        onSuccess: () => {\r\n          queryClient.invalidateQueries({\r\n            queryKey: DatatableDataQueryKey(endpoint),\r\n          });\r\n        },\r\n      },\r\n    );\r\n  };\r\n\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={confirmed => {\r\n        if (confirmed) {\r\n          handleResumeSubscription();\r\n        }\r\n      }}\r\n    >\r\n      <Tooltip label={<Trans message=\"Renew subscription\" />}>\r\n        <IconButton\r\n          size=\"md\"\r\n          className=\"text-muted\"\r\n          onClick={handleResumeSubscription}\r\n          disabled={resumeSubscription.isPending}\r\n        >\r\n          <PlayArrowIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <ConfirmationDialog\r\n        title={<Trans message=\"Resume subscription\" />}\r\n        body={\r\n          <div>\r\n            <Trans message=\"Are you sure you want to resume this subscription?\" />\r\n            <div className=\"mt-10 text-sm font-semibold\">\r\n              <Trans message=\"This will put user on their original plan and billing cycle.\" />\r\n            </div>\r\n          </div>\r\n        }\r\n        confirm={<Trans message=\"Confirm\" />}\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\nfunction CancelSubscriptionButton({subscription}: SubscriptionActionsProps) {\r\n  const cancelSubscription = useCancelSubscription();\r\n\r\n  const handleDeleteSubscription = () => {\r\n    cancelSubscription.mutate(\r\n      {subscriptionId: subscription.id, delete: true},\r\n      {\r\n        onSuccess: () => {\r\n          queryClient.invalidateQueries({\r\n            queryKey: DatatableDataQueryKey(endpoint),\r\n          });\r\n        },\r\n      },\r\n    );\r\n  };\r\n\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={confirmed => {\r\n        if (confirmed) {\r\n          handleDeleteSubscription();\r\n        }\r\n      }}\r\n    >\r\n      <Tooltip label={<Trans message=\"Delete subscription\" />}>\r\n        <IconButton\r\n          size=\"md\"\r\n          className=\"text-muted\"\r\n          disabled={cancelSubscription.isPending}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <ConfirmationDialog\r\n        isDanger\r\n        title={<Trans message=\"Delete subscription\" />}\r\n        body={\r\n          <div>\r\n            <Trans message=\"Are you sure you want to delete this subscription?\" />\r\n            <div className=\"mt-10 text-sm font-semibold\">\r\n              <Trans message=\"This will permanently delete the subscription and immediately cancel it on billing gateway. Subscription will not be renewable anymore.\" />\r\n            </div>\r\n          </div>\r\n        }\r\n        confirm={<Trans message=\"Confirm\" />}\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const SyncIcon = createSvgIcon(\r\n  <path d=\"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\" />\r\n, 'SyncOutlined');\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient} from '../../../http/query-client';\r\nimport {useTrans} from '../../../i18n/use-trans';\r\nimport {BackendResponse} from '../../../http/backend-response/backend-response';\r\nimport {toast} from '../../../ui/toast/toast';\r\nimport {message} from '../../../i18n/message';\r\nimport {showHttpErrorToast} from '../../../utils/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\nexport function useSyncProducts() {\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: () => syncPlans(),\r\n    onSuccess: () => {\r\n      toast(trans(message('Plans synced')));\r\n    },\r\n    onError: err => showHttpErrorToast(err, message('Could not sync plans')),\r\n  });\r\n}\r\n\r\nfunction syncPlans(): Promise<Response> {\r\n  return apiClient.post('billing/products/sync').then(r => r.data);\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '../../../http/query-client';\r\nimport {BackendResponse} from '../../../http/backend-response/backend-response';\r\nimport {toast} from '../../../ui/toast/toast';\r\nimport {useTrans} from '../../../i18n/use-trans';\r\nimport {message} from '../../../i18n/message';\r\nimport {DatatableDataQueryKey} from '../../../datatable/requests/paginated-resources';\r\nimport {showHttpErrorToast} from '../../../utils/http/show-http-error-toast';\r\n\r\nconst endpoint = (id: number) => `billing/products/${id}`;\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\ninterface Payload {\r\n  productId: number;\r\n}\r\n\r\nexport function useDeleteProduct() {\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => updateProduct(payload),\r\n    onSuccess: () => {\r\n      toast(trans(message('Plan deleted')));\r\n      queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey('billing/products'),\r\n      });\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction updateProduct({productId}: Payload): Promise<Response> {\r\n  return apiClient.delete(endpoint(productId)).then(r => r.data);\r\n}\r\n","import {\r\n  BackendFilter,\r\n  FilterControlType,\r\n  FilterOperator,\r\n} from '../../datatable/filters/backend-filter';\r\nimport {message} from '../../i18n/message';\r\nimport {\r\n  createdAtFilter,\r\n  updatedAtFilter,\r\n} from '@common/datatable/filters/timestamp-filters';\r\n\r\nexport const PlansIndexPageFilters: BackendFilter[] = [\r\n  {\r\n    key: 'subscriptions',\r\n    label: message('Subscriptions'),\r\n    description: message('Whether plan has any active subscriptions'),\r\n    defaultOperator: FilterOperator.eq,\r\n    control: {\r\n      type: FilterControlType.Select,\r\n      defaultValue: '01',\r\n      options: [\r\n        {\r\n          key: '01',\r\n          label: message('Has active subscriptions'),\r\n          value: {value: '*', operator: FilterOperator.has},\r\n        },\r\n        {\r\n          key: '02',\r\n          label: message('Does not have active subscriptions'),\r\n          value: {value: '*', operator: FilterOperator.doesntHave},\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  createdAtFilter({\r\n    description: message('Date plan was created'),\r\n  }),\r\n  updatedAtFilter({\r\n    description: message('Date plan was last updated'),\r\n  }),\r\n];\r\n","import React, {Fragment} from 'react';\r\nimport {DataTablePage} from '../../datatable/page/data-table-page';\r\nimport {IconButton} from '../../ui/buttons/icon-button';\r\nimport {EditIcon} from '../../icons/material/Edit';\r\nimport {FormattedDate} from '../../i18n/formatted-date';\r\nimport {ColumnConfig} from '../../datatable/column-config';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {DataTableEmptyStateMessage} from '../../datatable/page/data-table-emty-state-message';\r\nimport softwareEngineerSvg from './../tags/software-engineer.svg';\r\nimport {DataTableAddItemButton} from '../../datatable/data-table-add-item-button';\r\nimport {Product} from '../../billing/product';\r\nimport {NameWithAvatar} from '../../datatable/column-templates/name-with-avatar';\r\nimport {Link} from 'react-router-dom';\r\nimport {FormattedPrice} from '../../i18n/formatted-price';\r\nimport {SyncIcon} from '../../icons/material/Sync';\r\nimport {useSyncProducts} from './requests/use-sync-products';\r\nimport {Tooltip} from '../../ui/tooltip/tooltip';\r\nimport {useDeleteProduct} from './requests/use-delete-product';\r\nimport {DeleteIcon} from '../../icons/material/Delete';\r\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\r\nimport {ConfirmationDialog} from '../../ui/overlays/dialog/confirmation-dialog';\r\nimport {useNavigate} from '../../utils/hooks/use-navigate';\r\nimport {PlansIndexPageFilters} from './plans-index-page-filters';\r\n\r\nconst columnConfig: ColumnConfig<Product>[] = [\r\n  {\r\n    key: 'name',\r\n    allowsSorting: true,\r\n    visibleInMode: 'all',\r\n    header: () => <Trans message=\"Name\" />,\r\n    body: product => {\r\n      const price = product.prices[0];\r\n      return (\r\n        <NameWithAvatar\r\n          label={product.name}\r\n          description={\r\n            product.free ? (\r\n              <Trans message=\"Free\" />\r\n            ) : (\r\n              <FormattedPrice price={price} />\r\n            )\r\n          }\r\n        />\r\n      );\r\n    },\r\n  },\r\n  {\r\n    key: 'created_at',\r\n    allowsSorting: true,\r\n    maxWidth: 'max-w-100',\r\n    header: () => <Trans message=\"Created\" />,\r\n    body: product => <FormattedDate date={product.created_at} />,\r\n  },\r\n  {\r\n    key: 'updated_at',\r\n    allowsSorting: true,\r\n    maxWidth: 'max-w-100',\r\n    header: () => <Trans message=\"Last updated\" />,\r\n    body: product => <FormattedDate date={product.updated_at} />,\r\n  },\r\n  {\r\n    key: 'actions',\r\n    header: () => <Trans message=\"Actions\" />,\r\n    visibleInMode: 'all',\r\n    hideHeader: true,\r\n    align: 'end',\r\n    maxWidth: 'max-w-84',\r\n    body: product => {\r\n      return (\r\n        <Fragment>\r\n          <IconButton\r\n            size=\"md\"\r\n            className=\"text-muted\"\r\n            elementType={Link}\r\n            to={`/admin/plans/${product.id}/edit`}\r\n          >\r\n            <EditIcon />\r\n          </IconButton>\r\n          <DeleteProductButton product={product} />\r\n        </Fragment>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\nexport function PlansIndexPage() {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <DataTablePage\r\n      endpoint=\"billing/products\"\r\n      title={<Trans message=\"Subscription plans\" />}\r\n      columns={columnConfig}\r\n      actions={<Actions />}\r\n      enableSelection={false}\r\n      filters={PlansIndexPageFilters}\r\n      onRowAction={item => {\r\n        navigate(`/admin/plans/${item.id}/edit`);\r\n      }}\r\n      emptyStateMessage={\r\n        <DataTableEmptyStateMessage\r\n          image={softwareEngineerSvg}\r\n          title={<Trans message=\"No plans have been created yet\" />}\r\n          filteringTitle={<Trans message=\"No matching plans\" />}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\ninterface DeleteProductButtonProps {\r\n  product: Product;\r\n}\r\nfunction DeleteProductButton({product}: DeleteProductButtonProps) {\r\n  const deleteProduct = useDeleteProduct();\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={confirmed => {\r\n        if (confirmed) {\r\n          deleteProduct.mutate({productId: product.id});\r\n        }\r\n      }}\r\n    >\r\n      <Tooltip label={<Trans message=\"Delete plan\" />}>\r\n        <IconButton\r\n          size=\"md\"\r\n          className=\"text-muted\"\r\n          disabled={deleteProduct.isPending}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <ConfirmationDialog\r\n        title={<Trans message=\"Delete plan\" />}\r\n        body={<Trans message=\"Are you sure you want to delete this plan?\" />}\r\n        confirm={<Trans message=\"Delete\" />}\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\nfunction Actions() {\r\n  const syncPlans = useSyncProducts();\r\n  return (\r\n    <Fragment>\r\n      <Tooltip label={<Trans message=\"Sync plans with Stripe & PayPal\" />}>\r\n        <IconButton\r\n          color=\"primary\"\r\n          variant=\"outline\"\r\n          size=\"sm\"\r\n          disabled={syncPlans.isPending}\r\n          onClick={() => {\r\n            syncPlans.mutate();\r\n          }}\r\n        >\r\n          <SyncIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <DataTableAddItemButton elementType={Link} to=\"/admin/plans/new\">\r\n        <Trans message=\"Add new plan\" />\r\n      </DataTableAddItemButton>\r\n    </Fragment>\r\n  );\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {useParams} from 'react-router-dom';\r\nimport {Product} from '@common/billing/product';\r\n\r\nconst Endpoint = (id: number | string) => `billing/products/${id}`;\r\n\r\nexport interface FetchRoleResponse extends BackendResponse {\r\n  product: Product;\r\n}\r\n\r\nexport function useProduct() {\r\n  const {productId} = useParams();\r\n  return useQuery({\r\n    queryKey: [Endpoint(productId!)],\r\n    queryFn: () => fetchProduct(productId!),\r\n  });\r\n}\r\n\r\nfunction fetchProduct(productId: number | string): Promise<FetchRoleResponse> {\r\n  return apiClient.get(Endpoint(productId)).then(response => response.data);\r\n}\r\n","import {message} from '../../../i18n/message';\r\n\r\nexport const BillingPeriodPresets = [\r\n  {\r\n    key: 'day1',\r\n    label: message('Daily'),\r\n    interval: 'day',\r\n    interval_count: 1,\r\n  },\r\n  {\r\n    key: 'week1',\r\n    label: message('Weekly'),\r\n    interval: 'week',\r\n    interval_count: 1,\r\n  },\r\n  {\r\n    key: 'month1',\r\n    label: message('Monthly'),\r\n    interval: 'month',\r\n    interval_count: 1,\r\n  },\r\n  {\r\n    key: 'month3',\r\n    label: message('Every 3 months'),\r\n    interval: 'month',\r\n    interval_count: 3,\r\n  },\r\n  {\r\n    key: 'month6',\r\n    label: message('Every 6 months'),\r\n    interval: 'month',\r\n    interval_count: 6,\r\n  },\r\n  {\r\n    key: 'year1',\r\n    label: message('Yearly'),\r\n    interval: 'year',\r\n    interval_count: 1,\r\n  },\r\n  {\r\n    key: 'custom',\r\n    label: message('Custom'),\r\n    interval: null,\r\n    interval_count: null,\r\n  },\r\n];\r\n","import {useFormContext} from 'react-hook-form';\r\nimport {Product} from '@common/billing/product';\r\nimport React, {Fragment, useMemo, useState} from 'react';\r\nimport {useValueLists} from '@common/http/value-lists';\r\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Item} from '@common/ui/forms/listbox/item';\r\nimport {FormSelect, Select} from '@common/ui/forms/select/select';\r\nimport {Price} from '@common/billing/price';\r\nimport {BillingPeriodPresets} from '@common/admin/plans/crupdate-plan-page/billing-period-presets';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {message} from '@common/i18n/message';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\n\r\ninterface PriceFormProps {\r\n  index: number;\r\n  onRemovePrice: () => void;\r\n}\r\nexport function PriceForm({index, onRemovePrice}: PriceFormProps) {\r\n  const {trans} = useTrans();\r\n  const query = useValueLists(['currencies']);\r\n  const currencies = useMemo(() => {\r\n    return query.data?.currencies ? Object.values(query.data.currencies) : [];\r\n  }, [query.data]);\r\n  const {watch, getValues} = useFormContext<Product>();\r\n  const isNewProduct = !watch('id');\r\n  const isNewPrice = watch(`prices.${index}.id`) == null;\r\n  const subscriberCount = watch(`prices.${index}.subscriptions_count`) || 0;\r\n\r\n  // select billing period preset based on price \"interval\" and \"interval_count\"\r\n  const [billingPeriodPreset, setBillingPeriodPreset] = useState(() => {\r\n    const interval = getValues(`prices.${index}.interval`);\r\n    const intervalCount = getValues(`prices.${index}.interval_count`);\r\n    const preset = BillingPeriodPresets.find(\r\n      p => p.key === `${interval}${intervalCount}`\r\n    );\r\n    return preset ? preset.key : 'custom';\r\n  });\r\n\r\n  const allowPriceChanges = isNewProduct || isNewPrice || !subscriberCount;\r\n\r\n  return (\r\n    <Fragment>\r\n      {!allowPriceChanges && (\r\n        <p className=\"text-muted text-sm max-w-500 mb-20\">\r\n          <Trans\r\n            message=\"This price can't modified or deleted, because it has [one 1 subscriber|other :count subscribers]. You can instead add a new price.\"\r\n            values={{count: subscriberCount}}\r\n          />\r\n        </p>\r\n      )}\r\n\r\n      <FormTextField\r\n        required\r\n        disabled={!allowPriceChanges}\r\n        label={<Trans message=\"Amount\" />}\r\n        type=\"number\"\r\n        min={0.1}\r\n        step={0.01}\r\n        name={`prices.${index}.amount`}\r\n        className=\"mb-20\"\r\n      />\r\n      <FormSelect\r\n        required\r\n        disabled={!allowPriceChanges}\r\n        label={<Trans message=\"Currency\" />}\r\n        name={`prices.${index}.currency`}\r\n        items={currencies}\r\n        showSearchField\r\n        searchPlaceholder={trans(message('Search currencies'))}\r\n        selectionMode=\"single\"\r\n        className=\"mb-20\"\r\n      >\r\n        {item => (\r\n          <Item\r\n            value={item.code}\r\n            key={item.code}\r\n          >{`${item.code}: ${item.name}`}</Item>\r\n        )}\r\n      </FormSelect>\r\n      <BillingPeriodSelect\r\n        disabled={!allowPriceChanges}\r\n        index={index}\r\n        value={billingPeriodPreset}\r\n        onValueChange={setBillingPeriodPreset}\r\n      />\r\n      {billingPeriodPreset === 'custom' && (\r\n        <CustomBillingPeriodField disabled={!allowPriceChanges} index={index} />\r\n      )}\r\n      <div className=\"text-right\">\r\n        <Button\r\n          size=\"xs\"\r\n          variant=\"outline\"\r\n          color=\"danger\"\r\n          disabled={!allowPriceChanges}\r\n          onClick={() => {\r\n            onRemovePrice();\r\n          }}\r\n        >\r\n          <Trans message=\"Delete price\" />\r\n        </Button>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface BillingPeriodSelectProps {\r\n  index: number;\r\n  value: string;\r\n  onValueChange: (value: string) => void;\r\n  disabled: boolean;\r\n}\r\nfunction BillingPeriodSelect({\r\n  index,\r\n  value,\r\n  onValueChange,\r\n  disabled,\r\n}: BillingPeriodSelectProps) {\r\n  const {setValue: setFormValue} = useFormContext<Product>();\r\n\r\n  return (\r\n    <Select\r\n      label={<Trans message=\"Billing period\" />}\r\n      disabled={disabled}\r\n      className=\"mb-20\"\r\n      selectionMode=\"single\"\r\n      selectedValue={value}\r\n      onSelectionChange={value => {\r\n        onValueChange(value as string);\r\n        if (value === 'custom') {\r\n        } else {\r\n          const preset = BillingPeriodPresets.find(p => p.key === value);\r\n          if (preset) {\r\n            setFormValue(\r\n              `prices.${index}.interval`,\r\n              preset.interval as Price['interval']\r\n            );\r\n            setFormValue(\r\n              `prices.${index}.interval_count`,\r\n              preset.interval_count as number\r\n            );\r\n          }\r\n        }\r\n      }}\r\n    >\r\n      {BillingPeriodPresets.map(preset => (\r\n        <Item key={preset.key} value={preset.key}>\r\n          <Trans {...preset.label} />\r\n        </Item>\r\n      ))}\r\n    </Select>\r\n  );\r\n}\r\n\r\ninterface CustomBillingPeriodFieldProps {\r\n  index: number;\r\n  disabled: boolean;\r\n}\r\nfunction CustomBillingPeriodField({\r\n  index,\r\n  disabled,\r\n}: CustomBillingPeriodFieldProps) {\r\n  const {watch} = useFormContext<Product>();\r\n  const interval = watch(`prices.${index}.interval`);\r\n  let maxIntervalCount: number;\r\n\r\n  if (interval === 'day') {\r\n    maxIntervalCount = 365;\r\n  } else if (interval === 'week') {\r\n    maxIntervalCount = 52;\r\n  } else {\r\n    maxIntervalCount = 12;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex border rounded w-min\">\r\n      <div className=\"px-18 flex items-center text-sm\">\r\n        <Trans message=\"Every\" />\r\n      </div>\r\n      <FormTextField\r\n        inputShadow=\"shadow-none\"\r\n        inputBorder=\"border-none\"\r\n        className=\"border-l border-r w-80\"\r\n        name={`prices.${index}.interval_count`}\r\n        type=\"number\"\r\n        min={1}\r\n        max={maxIntervalCount}\r\n        disabled={disabled}\r\n        required\r\n      />\r\n      <FormSelect\r\n        inputShadow=\"shadow-none\"\r\n        inputBorder=\"border-none\"\r\n        name={`prices.${index}.interval`}\r\n        selectionMode=\"single\"\r\n        disabled={disabled}\r\n      >\r\n        <Item value=\"day\">\r\n          <Trans message=\"Days\" />\r\n        </Item>\r\n        <Item value=\"week\">\r\n          <Trans message=\"Weeks\" />\r\n        </Item>\r\n        <Item value=\"month\">\r\n          <Trans message=\"Months\" />\r\n        </Item>\r\n      </FormSelect>\r\n    </div>\r\n  );\r\n}\r\n","import {FormTextField} from '../../../ui/forms/input-field/text-field/text-field';\r\nimport {Trans} from '../../../i18n/trans';\r\nimport React, {Fragment, ReactNode} from 'react';\r\nimport {useFieldArray, useFormContext} from 'react-hook-form';\r\nimport {Accordion, AccordionItem} from '../../../ui/accordion/accordion';\r\nimport {FormattedPrice} from '../../../i18n/formatted-price';\r\nimport {FormPermissionSelector} from '../../../auth/ui/permission-selector';\r\nimport {PriceForm} from './price-form';\r\nimport {Button} from '../../../ui/buttons/button';\r\nimport {AddIcon} from '../../../icons/material/Add';\r\nimport {IconButton} from '../../../ui/buttons/icon-button';\r\nimport {CloseIcon} from '../../../icons/material/Close';\r\nimport {CreateProductPayload} from '../requests/use-create-product';\r\nimport {FormSwitch} from '../../../ui/forms/toggle/switch';\r\nimport {FormSelect} from '../../../ui/forms/select/select';\r\nimport {Item} from '../../../ui/forms/listbox/item';\r\nimport {FormFileSizeField} from '../../../ui/forms/input-field/file-size-field';\r\nimport {Link} from 'react-router-dom';\r\nimport {LinkStyle} from '../../../ui/buttons/external-link';\r\n\r\nexport function CrupdatePlanForm() {\r\n  return (\r\n    <Fragment>\r\n      <FormTextField\r\n        name=\"name\"\r\n        label={<Trans message=\"Name\" />}\r\n        className=\"mb-20\"\r\n        required\r\n        autoFocus\r\n      />\r\n      <FormTextField\r\n        name=\"description\"\r\n        label={<Trans message=\"Description\" />}\r\n        className=\"mb-20\"\r\n        inputElementType=\"textarea\"\r\n        rows={4}\r\n      />\r\n      <FormSelect\r\n        name=\"position\"\r\n        selectionMode=\"single\"\r\n        label={<Trans message=\"Position in pricing table\" />}\r\n        className=\"mb-20\"\r\n      >\r\n        <Item value={0}>\r\n          <Trans message=\"First\" />\r\n        </Item>\r\n        <Item value={1}>\r\n          <Trans message=\"Second\" />\r\n        </Item>\r\n        <Item value={2}>\r\n          <Trans message=\"Third\" />\r\n        </Item>\r\n        <Item value={3}>\r\n          <Trans message=\"Fourth\" />\r\n        </Item>\r\n        <Item value={4}>\r\n          <Trans message=\"Fifth\" />\r\n        </Item>\r\n      </FormSelect>\r\n      <FormFileSizeField\r\n        className=\"mb-30\"\r\n        name=\"available_space\"\r\n        label={<Trans message=\"Allowed storage space\" />}\r\n        description={\r\n          <Trans\r\n            values={{\r\n              a: parts => (\r\n                <Link\r\n                  className={LinkStyle}\r\n                  target=\"_blank\"\r\n                  to=\"/admin/settings/uploading\"\r\n                >\r\n                  {parts}\r\n                </Link>\r\n              ),\r\n            }}\r\n            message=\"Total storage space all user uploads are allowed to take up.\"\r\n          />\r\n        }\r\n      />\r\n      <FormSwitch\r\n        name=\"recommended\"\r\n        className=\"mb-20\"\r\n        description={\r\n          <Trans message=\"Plan will be displayed more prominently on pricing page.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Recommend\" />\r\n      </FormSwitch>\r\n      <FormSwitch\r\n        name=\"hidden\"\r\n        className=\"mb-20\"\r\n        description={\r\n          <Trans message=\"Plan will not be shown on pricing or upgrade pages.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Hidden\" />\r\n      </FormSwitch>\r\n      <FormSwitch\r\n        name=\"free\"\r\n        className=\"mb-20\"\r\n        description={\r\n          <Trans message=\"Will be assigned to all users, if they are not subscribed already.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Free\" />\r\n      </FormSwitch>\r\n      <Header>\r\n        <Trans message=\"Feature list\" />\r\n      </Header>\r\n      <FeatureListForm />\r\n      <PricingListForm />\r\n      <Header>\r\n        <Trans message=\"Permissions\" />\r\n      </Header>\r\n      <FormPermissionSelector name=\"permissions\" />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface HeaderProps {\r\n  children: ReactNode;\r\n}\r\nfunction Header({children}: HeaderProps) {\r\n  return <h2 className=\"mt-40 mb-20 text-base font-semibold\">{children}</h2>;\r\n}\r\n\r\nfunction FeatureListForm() {\r\n  const {fields, append, remove} = useFieldArray<CreateProductPayload>({\r\n    name: 'feature_list',\r\n  });\r\n  return (\r\n    <div>\r\n      {fields.map((field, index) => {\r\n        return (\r\n          <div key={field.id} className=\"flex gap-10 mb-10\">\r\n            <FormTextField\r\n              name={`feature_list.${index}.value`}\r\n              size=\"sm\"\r\n              className=\"flex-auto\"\r\n            />\r\n            <IconButton\r\n              size=\"sm\"\r\n              color=\"primary\"\r\n              className=\"flex-shrink-0\"\r\n              onClick={() => {\r\n                remove(index);\r\n              }}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n        );\r\n      })}\r\n      <Button\r\n        variant=\"text\"\r\n        color=\"primary\"\r\n        startIcon={<AddIcon />}\r\n        size=\"xs\"\r\n        onClick={() => {\r\n          append({value: ''});\r\n        }}\r\n      >\r\n        <Trans message=\"Add another line\" />\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PricingListForm() {\r\n  const {\r\n    watch,\r\n    formState: {errors},\r\n  } = useFormContext<CreateProductPayload>();\r\n  const {fields, append, remove} = useFieldArray<\r\n    CreateProductPayload,\r\n    'prices',\r\n    'key'\r\n  >({\r\n    name: 'prices',\r\n    keyName: 'key',\r\n  });\r\n\r\n  // if plan is marked as free, hide pricing form\r\n  if (watch('free')) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header>\r\n        <Trans message=\"Pricing\" />\r\n      </Header>\r\n      {errors.prices?.message && (\r\n        <div className=\"text-sm text-danger mb-20\">{errors.prices.message}</div>\r\n      )}\r\n      <Accordion variant=\"outline\" className=\"mb-10\">\r\n        {fields.map((field, index) => (\r\n          <AccordionItem\r\n            label={<FormattedPrice price={field} />}\r\n            key={field.key}\r\n          >\r\n            <PriceForm\r\n              index={index}\r\n              onRemovePrice={() => {\r\n                remove(index);\r\n              }}\r\n            />\r\n          </AccordionItem>\r\n        ))}\r\n      </Accordion>\r\n      <Button\r\n        variant=\"text\"\r\n        color=\"primary\"\r\n        startIcon={<AddIcon />}\r\n        size=\"xs\"\r\n        onClick={() => {\r\n          append({\r\n            currency: 'USD',\r\n            amount: 1,\r\n            interval_count: 1,\r\n            interval: 'month',\r\n          });\r\n        }}\r\n      >\r\n        <Trans message=\"Add another price\" />\r\n      </Button>\r\n    </Fragment>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '../../../http/query-client';\r\nimport {BackendResponse} from '../../../http/backend-response/backend-response';\r\nimport {toast} from '../../../ui/toast/toast';\r\nimport {useTrans} from '../../../i18n/use-trans';\r\nimport {message} from '../../../i18n/message';\r\nimport {DatatableDataQueryKey} from '../../../datatable/requests/paginated-resources';\r\nimport {Product} from '../../../billing/product';\r\nimport {useNavigate} from '../../../utils/hooks/use-navigate';\r\nimport {CreateProductPayload} from './use-create-product';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {onFormQueryError} from '../../../errors/on-form-query-error';\r\n\r\ninterface Response extends BackendResponse {\r\n  product: Product;\r\n}\r\n\r\nexport interface UpdateProductPayload extends CreateProductPayload {\r\n  id: number;\r\n}\r\n\r\nconst Endpoint = (id: number) => `billing/products/${id}`;\r\n\r\nexport function useUpdateProduct(form: UseFormReturn<UpdateProductPayload>) {\r\n  const {trans} = useTrans();\r\n  const navigate = useNavigate();\r\n  return useMutation({\r\n    mutationFn: (payload: UpdateProductPayload) => updateProduct(payload),\r\n    onSuccess: response => {\r\n      toast(trans(message('Plan updated')));\r\n      queryClient.invalidateQueries({\r\n        queryKey: [Endpoint(response.product.id)],\r\n      });\r\n      queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey('billing/products'),\r\n      });\r\n      navigate('/admin/plans');\r\n    },\r\n    onError: err => onFormQueryError(err, form),\r\n  });\r\n}\r\n\r\nfunction updateProduct({\r\n  id,\r\n  ...payload\r\n}: UpdateProductPayload): Promise<Response> {\r\n  const backendPayload = {\r\n    ...payload,\r\n    feature_list: payload.feature_list.map(feature => feature.value),\r\n  };\r\n  return apiClient.put(Endpoint(id), backendPayload).then(r => r.data);\r\n}\r\n","import {FullPageLoader} from '../../../ui/progress/full-page-loader';\r\nimport {Trans} from '../../../i18n/trans';\r\nimport {useForm} from 'react-hook-form';\r\nimport {CrupdateResourceLayout} from '../../crupdate-resource-layout';\r\nimport {useProduct} from '../requests/use-product';\r\nimport {Product} from '../../../billing/product';\r\nimport {CrupdatePlanForm} from './crupdate-plan-form';\r\nimport {\r\n  UpdateProductPayload,\r\n  useUpdateProduct,\r\n} from '../requests/use-update-product';\r\n\r\nexport function EditPlanPage() {\r\n  const query = useProduct();\r\n\r\n  if (query.status !== 'success') {\r\n    return <FullPageLoader />;\r\n  }\r\n\r\n  return <PageContent product={query.data.product} />;\r\n}\r\n\r\ninterface PageContentProps {\r\n  product: Product;\r\n}\r\nfunction PageContent({product}: PageContentProps) {\r\n  const form = useForm<UpdateProductPayload>({\r\n    defaultValues: {\r\n      ...product,\r\n      feature_list: product.feature_list.map(f => ({value: f})),\r\n    },\r\n  });\r\n  const updateProduct = useUpdateProduct(form);\r\n\r\n  return (\r\n    <CrupdateResourceLayout\r\n      form={form}\r\n      onSubmit={values => {\r\n        updateProduct.mutate(values);\r\n      }}\r\n      title={\r\n        <Trans message=\"Edit “:name“ plan\" values={{name: product.name}} />\r\n      }\r\n      isLoading={updateProduct.isPending}\r\n    >\r\n      <CrupdatePlanForm />\r\n    </CrupdateResourceLayout>\r\n  );\r\n}\r\n","import {Product} from '../../../billing/product';\r\nimport {useTrans} from '../../../i18n/use-trans';\r\nimport {useNavigate} from '../../../utils/hooks/use-navigate';\r\nimport {useMutation} from '@tanstack/react-query';\r\nimport {toast} from '../../../ui/toast/toast';\r\nimport {message} from '../../../i18n/message';\r\nimport {apiClient, queryClient} from '../../../http/query-client';\r\nimport {DatatableDataQueryKey} from '../../../datatable/requests/paginated-resources';\r\nimport {Price} from '../../../billing/price';\r\nimport {onFormQueryError} from '../../../errors/on-form-query-error';\r\nimport {UseFormReturn} from 'react-hook-form';\r\n\r\nconst endpoint = 'billing/products';\r\n\r\nexport interface CreateProductPayload\r\n  extends Omit<Partial<Product>, 'feature_list' | 'prices'> {\r\n  feature_list: {value: string}[];\r\n  prices: Omit<Price, 'id'>[];\r\n}\r\n\r\nexport function useCreateProduct(form: UseFormReturn<CreateProductPayload>) {\r\n  const {trans} = useTrans();\r\n  const navigate = useNavigate();\r\n  return useMutation({\r\n    mutationFn: (payload: CreateProductPayload) => createProduct(payload),\r\n    onSuccess: () => {\r\n      toast(trans(message('Plan created')));\r\n      queryClient.invalidateQueries({queryKey: [endpoint]});\r\n      queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey('billing/products'),\r\n      });\r\n      navigate('/admin/plans');\r\n    },\r\n    onError: err => onFormQueryError(err, form),\r\n  });\r\n}\r\n\r\nfunction createProduct(payload: CreateProductPayload): Promise<Response> {\r\n  const backendPayload = {\r\n    ...payload,\r\n    feature_list: payload.feature_list.map(feature => feature.value),\r\n  };\r\n  return apiClient.post(endpoint, backendPayload).then(r => r.data);\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport {CrupdateResourceLayout} from '../../crupdate-resource-layout';\r\nimport {Trans} from '../../../i18n/trans';\r\nimport {CrupdatePlanForm} from './crupdate-plan-form';\r\nimport {\r\n  CreateProductPayload,\r\n  useCreateProduct,\r\n} from '../requests/use-create-product';\r\n\r\nexport function CreatePlanPage() {\r\n  const form = useForm<CreateProductPayload>({\r\n    defaultValues: {\r\n      free: false,\r\n      recommended: false,\r\n    },\r\n  });\r\n  const createProduct = useCreateProduct(form);\r\n\r\n  return (\r\n    <CrupdateResourceLayout\r\n      form={form}\r\n      onSubmit={values => {\r\n        createProduct.mutate(values);\r\n      }}\r\n      title={<Trans message=\"Create new plan\" />}\r\n      isLoading={createProduct.isPending}\r\n    >\r\n      <CrupdatePlanForm />\r\n    </CrupdateResourceLayout>\r\n  );\r\n}\r\n","import {SettingsPanel} from '../settings-panel';\r\nimport {SettingsSeparator} from '../settings-separator';\r\nimport {Trans} from '../../../i18n/trans';\r\nimport {FormSwitch} from '../../../ui/forms/toggle/switch';\r\nimport {useFieldArray, useFormContext} from 'react-hook-form';\r\nimport {AdminSettings} from '../admin-settings';\r\nimport React, {Fragment} from 'react';\r\nimport {FormSelect} from '../../../ui/forms/select/select';\r\nimport {Item} from '../../../ui/forms/listbox/item';\r\nimport {MenuItemForm} from '../../menus/menu-item-form';\r\nimport {Button} from '../../../ui/buttons/button';\r\nimport {AddIcon} from '../../../icons/material/Add';\r\nimport {DialogTrigger} from '../../../ui/overlays/dialog/dialog-trigger';\r\nimport {AddMenuItemDialog} from '../../appearance/sections/menus/add-menu-item-dialog';\r\nimport {Accordion, AccordionItem} from '../../../ui/accordion/accordion';\r\nimport {IconButton} from '../../../ui/buttons/icon-button';\r\nimport {CloseIcon} from '../../../icons/material/Close';\r\n\r\nexport function GdprSettings() {\r\n  return (\r\n    <SettingsPanel\r\n      title={<Trans message=\"GDPR\" />}\r\n      description={\r\n        <Trans message=\"Configure settings related to EU General Data Protection Regulation.\" />\r\n      }\r\n    >\r\n      <CookieNoticeSection />\r\n      <SettingsSeparator />\r\n      <RegistrationPoliciesSection />\r\n    </SettingsPanel>\r\n  );\r\n}\r\n\r\nfunction CookieNoticeSection() {\r\n  const {watch} = useFormContext<AdminSettings>();\r\n  const noticeEnabled = watch('client.cookie_notice.enable');\r\n\r\n  return (\r\n    <div>\r\n      <FormSwitch\r\n        name=\"client.cookie_notice.enable\"\r\n        className=\"mb-20\"\r\n        description={\r\n          <Trans message=\"Whether cookie notice should be shown automatically to users from EU until it is accepted.\" />\r\n        }\r\n      >\r\n        <Trans message=\"Enable cookie notice\" />\r\n      </FormSwitch>\r\n      {noticeEnabled && (\r\n        <Fragment>\r\n          <div className=\"mb-20 border-b pb-6\">\r\n            <div className=\"mb-20 border-b pb-10 text-sm font-medium\">\r\n              <Trans message=\"Information button\" />\r\n            </div>\r\n            <MenuItemForm\r\n              hideRoleAndPermissionFields\r\n              formPathPrefix=\"client.cookie_notice.button\"\r\n            />\r\n          </div>\r\n          <FormSelect\r\n            name=\"client.cookie_notice.position\"\r\n            selectionMode=\"single\"\r\n            label={<Trans message=\"Cookie notice position\" />}\r\n            className=\"mb-20\"\r\n          >\r\n            <Item value=\"top\">\r\n              <Trans message=\"Top\" />\r\n            </Item>\r\n            <Item value=\"bottom\">\r\n              <Trans message=\"Bottom\" />\r\n            </Item>\r\n          </FormSelect>\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction RegistrationPoliciesSection() {\r\n  const {fields, append, remove} = useFieldArray<\r\n    AdminSettings,\r\n    'client.registration.policies'\r\n  >({\r\n    name: 'client.registration.policies',\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mb-6 text-sm\">\r\n        <Trans message=\"Registration policies\" />\r\n      </div>\r\n      <div className=\"text-xs text-muted\">\r\n        <Trans message=\"Create policies that will be shown on registration page. User will be required to accept them by toggling a checkbox.\" />\r\n      </div>\r\n      <Accordion className=\"mt-16\" variant=\"outline\">\r\n        {fields.map((field, index) => (\r\n          <AccordionItem\r\n            key={field.id}\r\n            label={field.label}\r\n            chevronPosition=\"left\"\r\n            endAppend={\r\n              <IconButton\r\n                variant=\"text\"\r\n                color=\"danger\"\r\n                size=\"sm\"\r\n                onClick={() => {\r\n                  remove(index);\r\n                }}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            }\r\n          >\r\n            <MenuItemForm\r\n              hideRoleAndPermissionFields\r\n              formPathPrefix={`client.register_policies.${index}`}\r\n            />\r\n          </AccordionItem>\r\n        ))}\r\n      </Accordion>\r\n      <DialogTrigger\r\n        type=\"modal\"\r\n        onClose={value => {\r\n          if (value) {\r\n            append(value);\r\n          }\r\n        }}\r\n      >\r\n        <Button\r\n          className=\"mt-12\"\r\n          variant=\"link\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          size=\"xs\"\r\n        >\r\n          <Trans message=\"Add another policy\" />\r\n        </Button>\r\n        <AddMenuItemDialog title={<Trans message=\"Add policy\" />} />\r\n      </DialogTrigger>\r\n    </Fragment>\r\n  );\r\n}\r\n","import {RouteObject} from 'react-router-dom';\r\n\r\nexport const AppAdminRoutes: RouteObject[] = [];\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {CustomPage} from '../custom-page';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {message} from '@common/i18n/message';\r\nimport {useParams} from 'react-router-dom';\r\nimport {CreateCustomPagePayload} from '@common/admin/custom-pages/requests/use-create-custom-page';\r\n\r\ninterface Response extends BackendResponse {\r\n  page: CustomPage;\r\n}\r\n\r\nexport function useUpdateCustomPage(endpoint?: string) {\r\n  const {pageId} = useParams();\r\n  const finalEndpoint = `${endpoint || 'custom-pages'}/${pageId}`;\r\n  return useMutation({\r\n    mutationFn: (payload: CreateCustomPagePayload) =>\r\n      updatePage(payload, finalEndpoint),\r\n    onError: err => showHttpErrorToast(err),\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({queryKey: ['custom-pages']});\r\n      await queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey(finalEndpoint),\r\n      });\r\n      toast(message('Page updated'));\r\n    },\r\n  });\r\n}\r\n\r\nfunction updatePage(\r\n  payload: CreateCustomPagePayload,\r\n  endpoint: string,\r\n): Promise<Response> {\r\n  return apiClient.put(`${endpoint}`, payload).then(r => r.data);\r\n}\r\n","import React, {useState} from 'react';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {useFormContext} from 'react-hook-form';\r\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport clsx from 'clsx';\r\nimport {EditIcon} from '@common/icons/material/Edit';\r\nimport {CreateCustomPagePayload} from '@common/admin/custom-pages/requests/use-create-custom-page';\r\n\r\nexport function ArticleEditorTitle() {\r\n  const [editingTitle, setEditingTitle] = useState(false);\r\n  const {trans} = useTrans();\r\n  const form = useFormContext<CreateCustomPagePayload>();\r\n  const watchedTitle = form.watch('title');\r\n\r\n  const titlePlaceholder = trans({message: 'Title'});\r\n\r\n  if (editingTitle) {\r\n    return (\r\n      <FormTextField\r\n        placeholder={titlePlaceholder}\r\n        autoFocus\r\n        className=\"mb-30\"\r\n        onBlur={() => {\r\n          setEditingTitle(false);\r\n        }}\r\n        name=\"title\"\r\n        required\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <h1\r\n      tabIndex={0}\r\n      onClick={() => {\r\n        setEditingTitle(true);\r\n      }}\r\n      onFocus={() => {\r\n        setEditingTitle(true);\r\n      }}\r\n      className={clsx(\r\n        'hover:bg-primary/focus rounded cursor-pointer',\r\n        !watchedTitle && 'text-muted'\r\n      )}\r\n    >\r\n      {watchedTitle || titlePlaceholder}\r\n      <EditIcon className=\"icon-sm mx-8 mt-8 align-top text-muted\" />\r\n    </h1>\r\n  );\r\n}\r\n","import React, {Fragment, useEffect, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport {RefCallBack} from 'react-hook-form';\r\nimport {Button} from './buttons/button';\r\nimport {LinkIcon} from '../icons/material/Link';\r\nimport {TextField} from './forms/input-field/text-field/text-field';\r\nimport {Trans} from '../i18n/trans';\r\nimport {useSettings} from '../core/settings/use-settings';\r\nimport {slugifyString} from '@common/utils/string/slugify-string';\r\n\r\nexport interface SlugEditorProps {\r\n  prefix?: string;\r\n  suffix?: string;\r\n  host?: string;\r\n  value?: string | null;\r\n  placeholder?: string;\r\n  onChange?: (value: string) => void;\r\n  className?: string;\r\n  inputRef?: RefCallBack;\r\n  onInputBlur?: () => void;\r\n  showLinkIcon?: boolean;\r\n  pattern?: string;\r\n  minLength?: number;\r\n  maxLength?: number;\r\n  hideButton?: boolean;\r\n}\r\nexport function SlugEditor({\r\n  host,\r\n  value: initialValue = '',\r\n  placeholder,\r\n  onChange,\r\n  className,\r\n  inputRef,\r\n  onInputBlur,\r\n  showLinkIcon = true,\r\n  pattern,\r\n  minLength,\r\n  maxLength,\r\n  hideButton,\r\n  ...props\r\n}: SlugEditorProps) {\r\n  const {base_url} = useSettings();\r\n  const prefix = props.prefix ? `/${props.prefix}` : '';\r\n  const suffix = props.suffix ? `/${props.suffix}` : '';\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [value, setValue] = useState(initialValue);\r\n  host = host || base_url;\r\n\r\n  useEffect(() => {\r\n    setValue(initialValue);\r\n  }, [initialValue]);\r\n\r\n  const handleSubmit = () => {\r\n    if (!isEditing) {\r\n      setIsEditing(true);\r\n    } else {\r\n      setIsEditing(false);\r\n      if (value) {\r\n        onChange?.(value);\r\n      }\r\n    }\r\n  };\r\n\r\n  let preview: string = '';\r\n  if (value) {\r\n    preview = value;\r\n  } else if (placeholder) {\r\n    preview = slugifyString(placeholder);\r\n  }\r\n\r\n  return (\r\n    // can't use <form/> here as component might be used inside another form\r\n    <div className={clsx('flex items-center', className)}>\r\n      {showLinkIcon && <LinkIcon className=\"icon-md text-muted\" />}\r\n      <div className=\"text-primary ml-6 mr-14\">\r\n        {host}\r\n        {prefix}\r\n        {!isEditing && preview && (\r\n          <Fragment>\r\n            <span>/</span>\r\n            <span className=\"font-medium\">{preview}</span>\r\n          </Fragment>\r\n        )}\r\n        {!isEditing ? suffix : null}\r\n      </div>\r\n      {isEditing && (\r\n        <TextField\r\n          pattern={pattern}\r\n          minLength={minLength}\r\n          maxLength={maxLength}\r\n          onKeyDown={e => {\r\n            if (e.key === 'Enter') {\r\n              handleSubmit();\r\n            }\r\n          }}\r\n          ref={inputRef}\r\n          aria-label=\"slug\"\r\n          autoFocus\r\n          className=\"mr-14\"\r\n          size=\"2xs\"\r\n          value={value as string}\r\n          onBlur={onInputBlur}\r\n          onChange={e => {\r\n            setValue(e.target.value);\r\n          }}\r\n        />\r\n      )}\r\n      {!hideButton && (\r\n        <Button\r\n          type=\"button\"\r\n          color=\"chip\"\r\n          variant=\"outline\"\r\n          size=\"2xs\"\r\n          onClick={() => {\r\n            handleSubmit();\r\n          }}\r\n        >\r\n          {isEditing ? <Trans message=\"Save\" /> : <Trans message=\"Edit\" />}\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const UndoIcon = createSvgIcon(\r\n  <path d=\"M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z\" />\r\n, 'UndoOutlined');\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const RedoIcon = createSvgIcon(\r\n  <path d=\"M18.4 10.6C16.55 8.99 14.15 8 11.5 8c-4.65 0-8.58 3.03-9.96 7.22L3.9 16c1.05-3.19 4.05-5.5 7.6-5.5 1.95 0 3.73.72 5.12 1.88L13 16h9V7l-3.6 3.6z\" />\r\n, 'RedoOutlined');\r\n","import React from 'react';\r\nimport {IconButton} from '../../ui/buttons/icon-button';\r\nimport {UndoIcon} from '../../icons/material/Undo';\r\nimport {RedoIcon} from '../../icons/material/Redo';\r\nimport {MenubarButtonProps} from './menubar-button-props';\r\n\r\nexport function HistoryButtons({editor}: MenubarButtonProps) {\r\n  return (\r\n    <span>\r\n      <IconButton\r\n        size=\"md\"\r\n        disabled={!editor.can().undo()}\r\n        onClick={() => {\r\n          editor.commands.focus();\r\n          editor.commands.undo();\r\n        }}\r\n      >\r\n        <UndoIcon />\r\n      </IconButton>\r\n      <IconButton\r\n        size=\"md\"\r\n        disabled={!editor.can().redo()}\r\n        onClick={() => {\r\n          editor.commands.focus();\r\n          editor.commands.redo();\r\n        }}\r\n      >\r\n        <RedoIcon />\r\n      </IconButton>\r\n    </span>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const CodeIcon = createSvgIcon(\r\n  <path d=\"M9.4 16.6 4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0 4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\" />\r\n, 'CodeOutlined');\r\n","import {Button} from '../../ui/buttons/button';\r\nimport {CodeIcon} from '../../icons/material/Code';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\r\nimport {AceDialog} from '../../ace-editor/ace-dialog';\r\nimport {Editor} from '@tiptap/react';\r\nimport React from 'react';\r\n\r\ninterface ModeButtonProps {\r\n  editor: Editor;\r\n}\r\nexport function ModeButton({editor}: ModeButtonProps) {\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={newValue => {\r\n        if (newValue != null) {\r\n          editor?.commands.setContent(newValue);\r\n        }\r\n      }}\r\n    >\r\n      <Button variant=\"text\" startIcon={<CodeIcon />}>\r\n        <Trans message=\"Source\" />\r\n      </Button>\r\n      <AceDialog\r\n        title={<Trans message=\"Source code\" />}\r\n        defaultValue={editor.getHTML()}\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n","export function Divider() {\r\n  return <div className=\"self-stretch mx-4 w-1 bg-divider flex-shrink-0\" />;\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FormatBoldIcon = createSvgIcon(\r\n  <path d=\"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\" />\r\n, 'FormatBoldOutlined');\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FormatItalicIcon = createSvgIcon(\r\n  <path d=\"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4h-8z\" />\r\n, 'FormatItalicOutlined');\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FormatUnderlinedIcon = createSvgIcon(\r\n  <path d=\"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\" />\r\n, 'FormatUnderlinedOutlined');\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {IconButton} from '../../ui/buttons/icon-button';\r\nimport {FormatBoldIcon} from '../../icons/material/FormatBold';\r\nimport {FormatItalicIcon} from '../../icons/material/FormatItalic';\r\nimport {FormatUnderlinedIcon} from '../../icons/material/FormatUnderlined';\r\nimport {MenubarButtonProps} from './menubar-button-props';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\nimport {Trans} from '@common/i18n/trans';\r\n\r\nexport function FontStyleButtons({editor, size}: MenubarButtonProps) {\r\n  return (\r\n    <span className={clsx('flex-shrink-0 whitespace-nowrap')}>\r\n      <Tooltip label={<Trans message=\"Bold\" />}>\r\n        <IconButton\r\n          size={size}\r\n          color={editor.isActive('bold') ? 'primary' : null}\r\n          onClick={() => {\r\n            editor.commands.focus();\r\n            editor.commands.toggleBold();\r\n          }}\r\n        >\r\n          <FormatBoldIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Tooltip label={<Trans message=\"Italic\" />}>\r\n        <IconButton\r\n          size={size}\r\n          color={editor.isActive('italic') ? 'primary' : null}\r\n          onClick={() => {\r\n            editor.commands.focus();\r\n            editor.commands.toggleItalic();\r\n          }}\r\n        >\r\n          <FormatItalicIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Tooltip label={<Trans message=\"Underline\" />}>\r\n        <IconButton\r\n          size={size}\r\n          color={editor.isActive('underline') ? 'primary' : null}\r\n          onClick={() => {\r\n            editor.commands.focus();\r\n            editor.commands.toggleUnderline();\r\n          }}\r\n        >\r\n          <FormatUnderlinedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </span>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FormatListBulletedIcon = createSvgIcon(\r\n  <path d=\"M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z\" />\r\n, 'FormatListBulletedOutlined');\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FormatListNumberedIcon = createSvgIcon(\r\n  <path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\" />\r\n, 'FormatListNumberedOutlined');\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {IconButton} from '../../ui/buttons/icon-button';\r\nimport {FormatListBulletedIcon} from '../../icons/material/FormatListBulleted';\r\nimport {FormatListNumberedIcon} from '../../icons/material/FormatListNumbered';\r\nimport {MenubarButtonProps} from './menubar-button-props';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\nimport {Trans} from '@common/i18n/trans';\r\n\r\nexport function ListButtons({editor, size}: MenubarButtonProps) {\r\n  const bulletActive = editor.isActive('bulletList');\r\n  const orderedActive = editor.isActive('orderedList');\r\n  return (\r\n    <span className={clsx('flex-shrink-0', 'whitespace-nowrap')}>\r\n      <Tooltip label={<Trans message=\"Bulleted list\" />}>\r\n        <IconButton\r\n          size={size}\r\n          color={bulletActive ? 'primary' : null}\r\n          onClick={() => {\r\n            editor.commands.focus();\r\n            editor.commands.toggleBulletList();\r\n          }}\r\n        >\r\n          <FormatListBulletedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Tooltip label={<Trans message=\"Numbered list\" />}>\r\n        <IconButton\r\n          size={size}\r\n          color={orderedActive ? 'primary' : null}\r\n          onClick={() => {\r\n            editor.commands.focus();\r\n            editor.commands.toggleOrderedList();\r\n          }}\r\n        >\r\n          <FormatListNumberedIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </span>\r\n  );\r\n}\r\n","import {Editor} from '@tiptap/react';\r\n\r\ninterface Props {\r\n  href: string;\r\n  target?: string;\r\n  text?: string;\r\n}\r\n\r\nexport function insertLinkIntoTextEditor(\r\n  editor: Editor,\r\n  {text, target, href}: Props\r\n) {\r\n  // no selection, insert new link with specified text\r\n  if (editor.state.selection.empty && text) {\r\n    editor.commands.insertContent(\r\n      `<a href=\"${href}\" target=\"${target}\">${text}</a>`\r\n    );\r\n  } else if (!editor.state.selection.empty) {\r\n    // no href provided, remove link from selection\r\n    if (!href) {\r\n      editor.chain().focus().extendMarkRange('link').unsetLink().run();\r\n    } else {\r\n      // add link to selection\r\n      editor\r\n        .chain()\r\n        .focus()\r\n        .extendMarkRange('link')\r\n        .setLink({href: href, target})\r\n        .run();\r\n    }\r\n  }\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport {Form} from '../../ui/forms/form';\r\nimport {FormTextField} from '../../ui/forms/input-field/text-field/text-field';\r\nimport {DialogFooter} from '../../ui/overlays/dialog/dialog-footer';\r\nimport {Button} from '../../ui/buttons/button';\r\nimport {IconButton} from '../../ui/buttons/icon-button';\r\nimport {LinkIcon} from '../../icons/material/Link';\r\nimport {MenubarButtonProps} from './menubar-button-props';\r\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\r\nimport {FormSelect, Option} from '../../ui/forms/select/select';\r\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\r\nimport {Dialog} from '../../ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '../../ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '../../ui/overlays/dialog/dialog-body';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\nimport {insertLinkIntoTextEditor} from '@common/text-editor/insert-link-into-text-editor';\r\n\r\ninterface FormValue {\r\n  href: string;\r\n  target?: string;\r\n  text?: string;\r\n}\r\n\r\nexport function LinkButton({editor, size}: MenubarButtonProps) {\r\n  return (\r\n    <DialogTrigger type=\"modal\">\r\n      <Tooltip label={<Trans message=\"Insert link\" />}>\r\n        <IconButton size={size} className={clsx('flex-shrink-0')}>\r\n          <LinkIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <LinkDialog editor={editor} />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\nfunction LinkDialog({editor}: MenubarButtonProps) {\r\n  const previousUrl = editor.getAttributes('link').href;\r\n  const previousText = editor.state.doc.textBetween(\r\n    editor.state.selection.from,\r\n    editor.state.selection.to,\r\n    '',\r\n  );\r\n\r\n  const form = useForm<FormValue>({\r\n    defaultValues: {href: previousUrl, text: previousText, target: '_blank'},\r\n  });\r\n  const {formId, close} = useDialogContext();\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Insert link\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Form\r\n          form={form}\r\n          id={formId}\r\n          onSubmit={value => {\r\n            insertLinkIntoTextEditor(editor, value);\r\n            close();\r\n          }}\r\n        >\r\n          <FormTextField\r\n            name=\"href\"\r\n            label={<Trans message=\"URL\" />}\r\n            autoFocus\r\n            type=\"url\"\r\n            className=\"mb-20\"\r\n          />\r\n          <FormTextField\r\n            name=\"text\"\r\n            label={<Trans message=\"Text to display\" />}\r\n            className=\"mb-20\"\r\n          />\r\n          <FormSelect\r\n            selectionMode=\"single\"\r\n            name=\"target\"\r\n            label={<Trans message=\"Open link in...\" />}\r\n          >\r\n            <Option value=\"_self\">\r\n              <Trans message=\"Current window\" />\r\n            </Option>\r\n            <Option value=\"_blank\">\r\n              <Trans message=\"New window\" />\r\n            </Option>\r\n          </FormSelect>\r\n        </Form>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button onClick={close} variant=\"text\">\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button type=\"submit\" form={formId} variant=\"flat\" color=\"primary\">\r\n          <Trans message=\"Save\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const ImageIcon = createSvgIcon(\r\n  <path d=\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4.86 8.86-3 3.87L9 13.14 6 17h12l-3.86-5.14z\" />\r\n, 'ImageOutlined');\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {IconButton} from '../../ui/buttons/icon-button';\r\nimport {ImageIcon} from '../../icons/material/Image';\r\nimport {MenubarButtonProps} from './menubar-button-props';\r\nimport {useActiveUpload} from '../../uploads/uploader/use-active-upload';\r\nimport {UploadInputType} from '../../uploads/types/upload-input-config';\r\nimport {Disk} from '../../uploads/types/backend-metadata';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\nimport {Trans} from '@common/i18n/trans';\r\n\r\nconst TwoMB = 2097152;\r\n\r\ninterface Props extends MenubarButtonProps {\r\n  diskPrefix?: string;\r\n}\r\n\r\nexport function ImageButton({editor, size, diskPrefix = 'page_media'}: Props) {\r\n  const {selectAndUploadFile} = useActiveUpload();\r\n\r\n  const handleUpload = () => {\r\n    selectAndUploadFile({\r\n      showToastOnRestrictionFail: true,\r\n      restrictions: {\r\n        allowedFileTypes: [UploadInputType.image],\r\n        maxFileSize: TwoMB,\r\n      },\r\n      metadata: {\r\n        diskPrefix: diskPrefix,\r\n        disk: Disk.public,\r\n      },\r\n      onSuccess: entry => {\r\n        editor.commands.focus();\r\n        editor.commands.setImage({\r\n          src: entry.url,\r\n        });\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Tooltip label={<Trans message=\"Insert image\" />}>\r\n      <IconButton\r\n        size={size}\r\n        onClick={handleUpload}\r\n        className={clsx('flex-shrink-0')}\r\n      >\r\n        <ImageIcon />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FormatClearIcon = createSvgIcon(\r\n  <path d=\"M20 8V5H6.39l3 3h1.83l-.55 1.28 2.09 2.1L14.21 8zM3.41 4.86 2 6.27l6.97 6.97L6.5 19h3l1.57-3.66L16.73 21l1.41-1.41z\" />\r\n, 'FormatClearOutlined');\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {FormatClearIcon} from '../../icons/material/FormatClear';\r\nimport {IconButton} from '../../ui/buttons/icon-button';\r\nimport {MenubarButtonProps} from './menubar-button-props';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\nimport {Trans} from '@common/i18n/trans';\r\n\r\nexport function ClearFormatButton({editor, size}: MenubarButtonProps) {\r\n  return (\r\n    <Tooltip label={<Trans message=\"Clear formatting\" />}>\r\n      <IconButton\r\n        className={clsx('flex-shrink-0')}\r\n        size={size}\r\n        onClick={() => {\r\n          editor.chain().focus().clearNodes().unsetAllMarks().run();\r\n        }}\r\n      >\r\n        <FormatClearIcon />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const HorizontalRuleIcon = createSvgIcon(\r\n  <path fillRule=\"evenodd\" d=\"M4 11h16v2H4z\" />\r\n, 'HorizontalRuleOutlined');\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const PriorityHighIcon = createSvgIcon(\r\n  [<circle cx=\"12\" cy=\"19\" r=\"2\" key=\"0\" />,<path d=\"M10 3h4v12h-4z\" key=\"1\" />,]\r\n, 'PriorityHighOutlined');\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const NoteIcon = createSvgIcon(\r\n  <path d=\"M16 4H4c-1.1 0-2 .9-2 2v12.01c0 1.1.9 1.99 2 1.99h16c1.1 0 2-.9 2-2v-8l-6-6zM4 18.01V6h11v5h5v7.01H4z\" />\r\n, 'NoteOutlined');\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const SmartDisplayIcon = createSvgIcon(\r\n  [<path d=\"M9.5 7.5v9l7-4.5z\" key=\"0\" />,<path d=\"M20 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14.01H4V5.99h16v12.02z\" key=\"1\" />,]\r\n, 'SmartDisplayOutlined');\r\n","import React, {useState} from 'react';\r\nimport {useForm} from 'react-hook-form';\r\nimport clsx from 'clsx';\r\nimport {HorizontalRuleIcon} from '../../icons/material/HorizontalRule';\r\nimport {PriorityHighIcon} from '../../icons/material/PriorityHigh';\r\nimport {WarningIcon} from '../../icons/material/Warning';\r\nimport {NoteIcon} from '../../icons/material/Note';\r\nimport {MenubarButtonProps} from './menubar-button-props';\r\nimport {IconButton} from '../../ui/buttons/icon-button';\r\nimport {MoreVertIcon} from '../../icons/material/MoreVert';\r\nimport {SmartDisplayIcon} from '../../icons/material/SmartDisplay';\r\nimport {Form} from '../../ui/forms/form';\r\nimport {FormTextField} from '../../ui/forms/input-field/text-field/text-field';\r\nimport {DialogFooter} from '../../ui/overlays/dialog/dialog-footer';\r\nimport {Button} from '../../ui/buttons/button';\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  MenuTrigger,\r\n} from '../../ui/navigation/menu/menu-trigger';\r\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\r\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\r\nimport {Dialog} from '../../ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '../../ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '../../ui/overlays/dialog/dialog-body';\r\nimport {Trans} from '../../i18n/trans';\r\n\r\nexport function InsertMenuTrigger({editor, size}: MenubarButtonProps) {\r\n  const [dialog, setDialog] = useState<'embed' | false>(false);\r\n  return (\r\n    <>\r\n      <MenuTrigger\r\n        onItemSelected={key => {\r\n          if (key === 'hr') {\r\n            editor.commands.focus();\r\n            editor.commands.setHorizontalRule();\r\n          } else if (key === 'embed') {\r\n            setDialog('embed');\r\n          } else {\r\n            editor.commands.focus();\r\n            editor.commands.addInfo({type: key as any});\r\n          }\r\n        }}\r\n      >\r\n        <IconButton\r\n          variant=\"text\"\r\n          size={size}\r\n          className={clsx('flex-shrink-0')}\r\n        >\r\n          <MoreVertIcon />\r\n        </IconButton>\r\n        <Menu>\r\n          <MenuItem value=\"hr\" startIcon={<HorizontalRuleIcon />}>\r\n            <Trans message=\"Horizontal rule\" />\r\n          </MenuItem>\r\n          <MenuItem value=\"embed\" startIcon={<SmartDisplayIcon />}>\r\n            <Trans message=\"Embed\" />\r\n          </MenuItem>\r\n          <MenuItem value=\"important\" startIcon={<PriorityHighIcon />}>\r\n            <Trans message=\"Important\" />\r\n          </MenuItem>\r\n          <MenuItem value=\"warning\" startIcon={<WarningIcon />}>\r\n            <Trans message=\"Warning\" />\r\n          </MenuItem>\r\n          <MenuItem value=\"success\" startIcon={<NoteIcon />}>\r\n            <Trans message=\"Note\" />\r\n          </MenuItem>\r\n        </Menu>\r\n      </MenuTrigger>\r\n      <DialogTrigger\r\n        type=\"modal\"\r\n        isOpen={!!dialog}\r\n        onClose={() => {\r\n          setDialog(false);\r\n        }}\r\n      >\r\n        <EmbedDialog editor={editor} />\r\n      </DialogTrigger>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction EmbedDialog({editor}: MenubarButtonProps) {\r\n  const previousSrc = editor.getAttributes('embed').src;\r\n  const form = useForm<{src: string}>({\r\n    defaultValues: {src: previousSrc},\r\n  });\r\n  const {formId, close} = useDialogContext();\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Insert link\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Form\r\n          form={form}\r\n          id={formId}\r\n          onSubmit={value => {\r\n            editor.commands.setEmbed(value);\r\n            close();\r\n          }}\r\n        >\r\n          <FormTextField\r\n            name=\"src\"\r\n            label={<Trans message=\"Embed URL\" />}\r\n            autoFocus\r\n            type=\"url\"\r\n            required\r\n          />\r\n        </Form>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button onClick={close} variant=\"text\">\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          type=\"submit\"\r\n          form={formId}\r\n          disabled={!form.formState.isValid}\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n        >\r\n          <Trans message=\"Add\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {ReactNode} from 'react';\r\nimport {isMac} from '@react-aria/utils';\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n  modifier?: boolean;\r\n  separator?: string;\r\n}\r\nexport function Keyboard({children, modifier, separator = '+'}: Props) {\r\n  const modKey = isMac() ? (\r\n    <span className=\"text-base align-middle\">⌘</span>\r\n  ) : (\r\n    'Ctrl'\r\n  );\r\n  return (\r\n    <kbd className=\"text-xs text-muted\">\r\n      {modifier && (\r\n        <>\r\n          {modKey}\r\n          {separator}\r\n        </>\r\n      )}\r\n      {children}\r\n    </kbd>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {Button} from '../../ui/buttons/button';\r\nimport {KeyboardArrowDownIcon} from '../../icons/material/KeyboardArrowDown';\r\nimport {Keyboard} from '../../ui/keyboard/keyboard';\r\nimport {MenubarButtonProps} from './menubar-button-props';\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  MenuTrigger,\r\n} from '../../ui/navigation/menu/menu-trigger';\r\nimport {Trans} from '../../i18n/trans';\r\n\r\ntype Level = 1 | 2 | 3 | 4;\r\n\r\nexport function FormatMenuTrigger({editor, size}: MenubarButtonProps) {\r\n  return (\r\n    <MenuTrigger\r\n      floatingMinWidth=\"w-256\"\r\n      onItemSelected={key => {\r\n        editor.commands.focus();\r\n        if (typeof key === 'string' && key.startsWith('h')) {\r\n          editor.commands.toggleHeading({\r\n            level: parseInt(key.replace('h', '')) as Level,\r\n          });\r\n        } else if (key === 'code') {\r\n          editor.commands.toggleCode();\r\n        } else if (key === 'strike') {\r\n          editor.commands.toggleStrike();\r\n        } else if (key === 'super') {\r\n          editor.commands.toggleSuperscript();\r\n        } else if (key === 'sub') {\r\n          editor.commands.toggleSubscript();\r\n        } else if (key === 'blockquote') {\r\n          editor.commands.toggleBlockquote();\r\n        } else if (key === 'paragraph') {\r\n          editor.commands.setParagraph();\r\n        }\r\n      }}\r\n    >\r\n      <Button\r\n        className={clsx('flex-shrink-0')}\r\n        variant=\"text\"\r\n        size={size}\r\n        endIcon={<KeyboardArrowDownIcon />}\r\n      >\r\n        <Trans message=\"Format\" />\r\n      </Button>\r\n      <Menu>\r\n        <MenuItem value=\"h1\" endSection={<Keyboard modifier>Alt+1</Keyboard>}>\r\n          <Trans message=\"Heading :number\" values={{number: 1}} />\r\n        </MenuItem>\r\n        <MenuItem value=\"h2\" endSection={<Keyboard modifier>Alt+2</Keyboard>}>\r\n          <Trans message=\"Heading :number\" values={{number: 2}} />\r\n        </MenuItem>\r\n        <MenuItem value=\"h3\" endSection={<Keyboard modifier>Alt+3</Keyboard>}>\r\n          <Trans message=\"Heading :number\" values={{number: 3}} />\r\n        </MenuItem>\r\n        <MenuItem value=\"h4\" endSection={<Keyboard modifier>Alt+4</Keyboard>}>\r\n          <Trans message=\"Heading :number\" values={{number: 4}} />\r\n        </MenuItem>\r\n        <MenuItem value=\"code\" endSection={<Keyboard modifier>E</Keyboard>}>\r\n          <Trans message=\"Code\" />\r\n        </MenuItem>\r\n        <MenuItem\r\n          value=\"strike\"\r\n          endSection={<Keyboard modifier>Shift+X</Keyboard>}\r\n        >\r\n          <Trans message=\"Strikethrough\" />\r\n        </MenuItem>\r\n        <MenuItem\r\n          value=\"super\"\r\n          endSection={\r\n            <Keyboard modifier separator=\" \">\r\n              .\r\n            </Keyboard>\r\n          }\r\n        >\r\n          <Trans message=\"Superscript\" />\r\n        </MenuItem>\r\n        <MenuItem\r\n          value=\"sub\"\r\n          endSection={\r\n            <Keyboard modifier separator=\" \">\r\n              ,\r\n            </Keyboard>\r\n          }\r\n        >\r\n          <Trans message=\"Subscript\" />\r\n        </MenuItem>\r\n        <MenuItem\r\n          value=\"blockquote\"\r\n          endSection={<Keyboard modifier>Shift+B</Keyboard>}\r\n        >\r\n          <Trans message=\"Blockquote\" />\r\n        </MenuItem>\r\n        <MenuItem\r\n          value=\"paragraph\"\r\n          endSection={<Keyboard modifier>Alt+0</Keyboard>}\r\n        >\r\n          <Trans message=\"Paragraph\" />\r\n        </MenuItem>\r\n      </Menu>\r\n    </MenuTrigger>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FormatColorTextIcon = createSvgIcon(\r\n  <path d=\"M2 20h20v4H2v-4zm3.49-3h2.42l1.27-3.58h5.65L16.09 17h2.42L13.25 3h-2.5L5.49 17zm4.42-5.61 2.03-5.79h.12l2.03 5.79H9.91z\" />\r\n, 'FormatColorTextOutlined');\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FormatColorFillIcon = createSvgIcon(\r\n  <path d=\"M16.56 8.94 7.62 0 6.21 1.41l2.38 2.38-5.15 5.15c-.59.59-.59 1.54 0 2.12l5.5 5.5c.29.29.68.44 1.06.44s.77-.15 1.06-.44l5.5-5.5c.59-.58.59-1.53 0-2.12zM5.21 10 10 5.21 14.79 10H5.21zM19 11.5s-2 2.17-2 3.5c0 1.1.9 2 2 2s2-.9 2-2c0-1.33-2-3.5-2-3.5zM2 20h20v4H2v-4z\" />\r\n, 'FormatColorFillOutlined');\r\n","import React, {Fragment, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport {FormatColorTextIcon} from '../../icons/material/FormatColorText';\r\nimport {ColorPickerDialog} from '../../ui/color-picker/color-picker-dialog';\r\nimport {MenubarButtonProps} from './menubar-button-props';\r\nimport {IconButton} from '../../ui/buttons/icon-button';\r\nimport {FormatColorFillIcon} from '../../icons/material/FormatColorFill';\r\nimport {DialogTrigger} from '../../ui/overlays/dialog/dialog-trigger';\r\n\r\nexport function ColorButtons({editor, size}: MenubarButtonProps) {\r\n  const [dialog, setDialog] = useState<'text' | 'bg' | false>(false);\r\n  const textActive = editor.getAttributes('textStyle').color;\r\n  const backgroundActive = editor.getAttributes('textStyle').backgroundColor;\r\n  return (\r\n    <Fragment>\r\n      <span className={clsx('flex-shrink-0 whitespace-nowrap')}>\r\n        <IconButton\r\n          size={size}\r\n          color={textActive ? 'primary' : null}\r\n          onClick={() => {\r\n            setDialog('text');\r\n          }}\r\n        >\r\n          <FormatColorTextIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          size={size}\r\n          color={backgroundActive ? 'primary' : null}\r\n          onClick={() => {\r\n            setDialog('bg');\r\n          }}\r\n        >\r\n          <FormatColorFillIcon />\r\n        </IconButton>\r\n      </span>\r\n      <DialogTrigger\r\n        defaultValue={dialog === 'text' ? '#000000' : '#FFFFFF'}\r\n        type=\"modal\"\r\n        isOpen={!!dialog}\r\n        onClose={newValue => {\r\n          if (newValue) {\r\n            if (dialog === 'text') {\r\n              editor.commands.setColor(newValue);\r\n            } else {\r\n              editor.commands.setBackgroundColor(newValue);\r\n            }\r\n          }\r\n          setDialog(false);\r\n        }}\r\n      >\r\n        <ColorPickerDialog />\r\n      </DialogTrigger>\r\n    </Fragment>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FormatAlignLeftIcon = createSvgIcon(\r\n  <path d=\"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\" />\r\n, 'FormatAlignLeftOutlined');\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FormatAlignCenterIcon = createSvgIcon(\r\n  <path d=\"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\" />\r\n, 'FormatAlignCenterOutlined');\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FormatAlignRightIcon = createSvgIcon(\r\n  <path d=\"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\" />\r\n, 'FormatAlignRightOutlined');\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FormatAlignJustifyIcon = createSvgIcon(\r\n  <path d=\"M3 21h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18V7H3v2zm0-6v2h18V3H3z\" />\r\n, 'FormatAlignJustifyOutlined');\r\n","import clsx from 'clsx';\r\nimport {ComponentType} from 'react';\r\nimport {FormatAlignLeftIcon} from '../../icons/material/FormatAlignLeft';\r\nimport {FormatAlignCenterIcon} from '../../icons/material/FormatAlignCenter';\r\nimport {FormatAlignRightIcon} from '../../icons/material/FormatAlignRight';\r\nimport {FormatAlignJustifyIcon} from '../../icons/material/FormatAlignJustify';\r\nimport {MenubarButtonProps} from './menubar-button-props';\r\nimport {IconButton} from '../../ui/buttons/icon-button';\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  MenuTrigger,\r\n} from '../../ui/navigation/menu/menu-trigger';\r\nimport {Trans} from '../../i18n/trans';\r\nimport {message} from '../../i18n/message';\r\n\r\nconst iconMap = {\r\n  left: {\r\n    icon: FormatAlignLeftIcon,\r\n    label: message('Align left'),\r\n  },\r\n  center: {\r\n    icon: FormatAlignCenterIcon,\r\n    label: message('Align center'),\r\n  },\r\n  right: {\r\n    icon: FormatAlignRightIcon,\r\n    label: message('Align right'),\r\n  },\r\n  justify: {\r\n    icon: FormatAlignJustifyIcon,\r\n    label: message('Justify'),\r\n  },\r\n};\r\n\r\nexport function AlignButtons({editor, size}: MenubarButtonProps) {\r\n  const activeKey = (Object.keys(iconMap).find(key => {\r\n    return editor.isActive({textAlign: key});\r\n  }) || 'left') as keyof typeof iconMap;\r\n  const ActiveIcon: ComponentType = activeKey\r\n    ? iconMap[activeKey].icon\r\n    : iconMap.left.icon;\r\n\r\n  return (\r\n    <MenuTrigger\r\n      floatingWidth=\"auto\"\r\n      selectionMode=\"single\"\r\n      selectedValue={activeKey}\r\n      onSelectionChange={key => {\r\n        editor.commands.focus();\r\n        editor.commands.setTextAlign(key as string);\r\n      }}\r\n    >\r\n      <IconButton\r\n        size={size}\r\n        color={activeKey ? 'primary' : null}\r\n        className={clsx('flex-shrink-0')}\r\n      >\r\n        <ActiveIcon />\r\n      </IconButton>\r\n      <Menu>\r\n        {Object.entries(iconMap).map(([name, config]) => {\r\n          const Icon = config.icon;\r\n          return (\r\n            <MenuItem\r\n              key={name}\r\n              value={name}\r\n              startIcon={<Icon size=\"md\" />}\r\n              capitalizeFirst\r\n            >\r\n              <Trans message={config.label.message} />\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Menu>\r\n    </MenuTrigger>\r\n  );\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FormatIndentDecreaseIcon = createSvgIcon(\r\n  <path d=\"M11 17h10v-2H11v2zm-8-5 4 4V8l-4 4zm0 9h18v-2H3v2zM3 3v2h18V3H3zm8 6h10V7H11v2zm0 4h10v-2H11v2z\" />\r\n, 'FormatIndentDecreaseOutlined');\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const FormatIndentIncreaseIcon = createSvgIcon(\r\n  <path d=\"M3 21h18v-2H3v2zM3 8v8l4-4-4-4zm8 9h10v-2H11v2zM3 3v2h18V3H3zm8 6h10V7H11v2zm0 4h10v-2H11v2z\" />\r\n, 'FormatIndentIncreaseOutlined');\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {IconButton} from '../../ui/buttons/icon-button';\r\nimport {FormatIndentDecreaseIcon} from '../../icons/material/FormatIndentDecrease';\r\nimport {FormatIndentIncreaseIcon} from '../../icons/material/FormatIndentIncrease';\r\nimport {MenubarButtonProps} from './menubar-button-props';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\nimport {Trans} from '@common/i18n/trans';\r\n\r\nexport function IndentButtons({editor, size}: MenubarButtonProps) {\r\n  return (\r\n    <span className={clsx('flex-shrink-0', 'whitespace-nowrap')}>\r\n      <Tooltip label={<Trans message=\"Decrease indent\" />}>\r\n        <IconButton\r\n          size={size}\r\n          onClick={() => {\r\n            editor.commands.focus();\r\n            editor.commands.outdent();\r\n          }}\r\n        >\r\n          <FormatIndentDecreaseIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Tooltip label={<Trans message=\"Increase indent\" />}>\r\n        <IconButton\r\n          size={size}\r\n          onClick={() => {\r\n            editor.commands.focus();\r\n            editor.commands.indent();\r\n          }}\r\n        >\r\n          <FormatIndentIncreaseIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </span>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {IconButton} from '../../ui/buttons/icon-button';\r\nimport {CodeIcon} from '../../icons/material/Code';\r\nimport {MenubarButtonProps} from './menubar-button-props';\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  MenuTrigger,\r\n} from '../../ui/navigation/menu/menu-trigger';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\nimport {Trans} from '@common/i18n/trans';\r\n\r\nexport function CodeBlockMenuTrigger({editor, size}: MenubarButtonProps) {\r\n  const language = editor.getAttributes('codeBlock').language || '';\r\n  return (\r\n    <MenuTrigger\r\n      selectionMode=\"single\"\r\n      selectedValue={language}\r\n      onSelectionChange={key => {\r\n        editor.commands.toggleCodeBlock({language: key as string});\r\n      }}\r\n    >\r\n      <Tooltip label={<Trans message=\"Codeblock\" />}>\r\n        <IconButton\r\n          className={clsx('flex-shrink-0')}\r\n          size={size}\r\n          color={language ? 'primary' : null}\r\n        >\r\n          <CodeIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Menu>\r\n        <MenuItem value=\"html\">HTML</MenuItem>\r\n        <MenuItem value=\"javascript\">JavaScript</MenuItem>\r\n        <MenuItem value=\"css\">CSS</MenuItem>\r\n        <MenuItem value=\"php\">PHP</MenuItem>\r\n        <MenuItem value=\"shell\">Shell</MenuItem>\r\n        <MenuItem value=\"bash\">Bash</MenuItem>\r\n        <MenuItem value=\"ruby\">Ruby</MenuItem>\r\n        <MenuItem value=\"python\">Python</MenuItem>\r\n        <MenuItem value=\"java\">Java</MenuItem>\r\n        <MenuItem value=\"c++\">C++</MenuItem>\r\n      </Menu>\r\n    </MenuTrigger>\r\n  );\r\n}\r\n","import React, {Fragment, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {Divider} from '@common/text-editor/menubar/divider';\r\nimport {FontStyleButtons} from '@common/text-editor/menubar/font-style-buttons';\r\nimport {ListButtons} from '@common/text-editor/menubar/list-buttons';\r\nimport {LinkButton} from '@common/text-editor/menubar/link-button';\r\nimport {ImageButton} from '@common/text-editor/menubar/image-button';\r\nimport {ClearFormatButton} from '@common/text-editor/menubar/clear-format-button';\r\nimport {InsertMenuTrigger} from '@common/text-editor/menubar/insert-menu-trigger';\r\nimport {FormatMenuTrigger} from '@common/text-editor/menubar/format-menu-trigger';\r\nimport {ColorButtons} from '@common/text-editor/menubar/color-buttons';\r\nimport {AlignButtons} from '@common/text-editor/menubar/align-buttons';\r\nimport {IndentButtons} from '@common/text-editor/menubar/indent-buttons';\r\nimport {CodeBlockMenuTrigger} from '@common/text-editor/menubar/code-block-menu-trigger';\r\nimport {MenubarButtonProps} from '@common/text-editor/menubar/menubar-button-props';\r\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {UnfoldMoreIcon} from '@common/icons/material/UnfoldMore';\r\nimport {UnfoldLessIcon} from '@common/icons/material/UnfoldLess';\r\n\r\nconst MenubarRowClassName =\r\n  'flex items-center px-4 h-42 text-muted border-b overflow-hidden';\r\n\r\ninterface Props extends MenubarButtonProps {\r\n  justify?: string;\r\n  hideInsertButton?: boolean;\r\n  imageDiskPrefix?: string;\r\n}\r\nexport function ArticleBodyEditorMenubar({\r\n  editor,\r\n  size = 'md',\r\n  justify = 'justify-center',\r\n  hideInsertButton = false,\r\n  imageDiskPrefix,\r\n}: Props) {\r\n  const isMobile = useIsMobileMediaQuery();\r\n  const [extendedVisible, setExtendedVisible] = useState(false);\r\n  return (\r\n    <div className={clsx(extendedVisible ? 'h-84' : 'h-42')}>\r\n      <div className={clsx(MenubarRowClassName, justify, 'relative z-20')}>\r\n        <FormatMenuTrigger editor={editor} size={size} />\r\n        <Divider />\r\n        <FontStyleButtons editor={editor} size={size} />\r\n        <Divider />\r\n        <AlignButtons editor={editor} size={size} />\r\n        <IndentButtons editor={editor} size={size} />\r\n        <Divider />\r\n        {isMobile ? (\r\n          <IconButton\r\n            className=\"flex-shrink-0\"\r\n            color={extendedVisible ? 'primary' : null}\r\n            size={size}\r\n            onClick={() => {\r\n              setExtendedVisible(!extendedVisible);\r\n            }}\r\n          >\r\n            {extendedVisible ? <UnfoldLessIcon /> : <UnfoldMoreIcon />}\r\n          </IconButton>\r\n        ) : (\r\n          <ExtendedButtons\r\n            editor={editor}\r\n            size={size}\r\n            hideInsertButton={hideInsertButton}\r\n            imageDiskPrefix={imageDiskPrefix}\r\n          />\r\n        )}\r\n      </div>\r\n      <AnimatePresence>\r\n        {extendedVisible && (\r\n          <m.div\r\n            className={clsx(\r\n              MenubarRowClassName,\r\n              justify,\r\n              'absolute flex h-full w-full',\r\n            )}\r\n            initial={{y: '-100%'}}\r\n            animate={{y: 0}}\r\n            exit={{y: '-100%'}}\r\n          >\r\n            <ExtendedButtons\r\n              editor={editor}\r\n              size={size}\r\n              imageDiskPrefix={imageDiskPrefix}\r\n            />\r\n          </m.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ExtendedButtons({\r\n  editor,\r\n  size = 'md',\r\n  hideInsertButton,\r\n  imageDiskPrefix,\r\n}: Props) {\r\n  return (\r\n    <Fragment>\r\n      <ListButtons editor={editor} size={size} />\r\n      <Divider />\r\n      <LinkButton editor={editor} size={size} />\r\n      <ImageButton editor={editor} size={size} diskPrefix={imageDiskPrefix} />\r\n      {!hideInsertButton && <InsertMenuTrigger editor={editor} size={size} />}\r\n      <Divider />\r\n      <ColorButtons editor={editor} size={size} />\r\n      <Divider />\r\n      <CodeBlockMenuTrigger editor={editor} size={size} />\r\n      <ClearFormatButton editor={editor} size={size} />\r\n    </Fragment>\r\n  );\r\n}\r\n","import {SlugEditor, SlugEditorProps} from '@common/ui/slug-editor';\r\nimport {useController, useFormContext} from 'react-hook-form';\r\nimport React, {Fragment, ReactNode, useEffect, useRef} from 'react';\r\nimport clsx from 'clsx';\r\nimport {useStickySentinel} from '@common/utils/hooks/sticky-sentinel';\r\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {Link} from 'react-router-dom';\r\nimport {ArrowBackIcon} from '@common/icons/material/ArrowBack';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {HistoryButtons} from '@common/text-editor/menubar/history-buttons';\r\nimport {ModeButton} from '@common/text-editor/menubar/mode-button';\r\nimport {ArticleBodyEditorMenubar} from './article-body-editor-menubar';\r\nimport {Editor} from '@tiptap/react';\r\nimport {CreateCustomPagePayload} from '@common/admin/custom-pages/requests/use-create-custom-page';\r\n\r\ninterface StickyHeaderProps {\r\n  editor: Editor;\r\n  allowSlugEditing?: boolean;\r\n  onSave?: (editorContent: string) => void;\r\n  saveButton?: ReactNode;\r\n  backLink: string;\r\n  isLoading?: boolean;\r\n  slugPrefix?: string;\r\n  imageDiskPrefix?: string;\r\n}\r\nexport function ArticleEditorStickyHeader({\r\n  editor,\r\n  allowSlugEditing = true,\r\n  onSave,\r\n  saveButton,\r\n  isLoading = false,\r\n  backLink,\r\n  slugPrefix = 'pages',\r\n  imageDiskPrefix,\r\n}: StickyHeaderProps) {\r\n  const {isSticky, sentinelRef} = useStickySentinel();\r\n  const isMobile = useIsMobileMediaQuery();\r\n\r\n  return (\r\n    <Fragment>\r\n      <div ref={sentinelRef} />\r\n      <div className={clsx('sticky top-0 z-10 mb-20 bg', isSticky && 'shadow')}>\r\n        <div className=\"flex items-center justify-between gap-20 border-b px-20 py-10 text-muted sm:justify-start\">\r\n          {!isMobile && (\r\n            <Fragment>\r\n              <Button\r\n                variant=\"text\"\r\n                size=\"sm\"\r\n                elementType={Link}\r\n                to={backLink}\r\n                relative=\"path\"\r\n                startIcon={<ArrowBackIcon />}\r\n              >\r\n                <Trans message=\"Back\" />\r\n              </Button>\r\n              <div className=\"mr-auto\">\r\n                {allowSlugEditing && (\r\n                  <FormSlugEditor\r\n                    name=\"slug\"\r\n                    showLinkIcon={false}\r\n                    prefix={slugPrefix}\r\n                  />\r\n                )}\r\n              </div>\r\n            </Fragment>\r\n          )}\r\n          {editor && <HistoryButtons editor={editor} />}\r\n          {!isMobile && <ModeButton editor={editor} />}\r\n          {onSave && (\r\n            <SaveButton\r\n              onSave={() => {\r\n                onSave(editor.getHTML());\r\n              }}\r\n              isLoading={isLoading}\r\n            />\r\n          )}\r\n          {saveButton}\r\n        </div>\r\n        <ArticleBodyEditorMenubar\r\n          editor={editor}\r\n          size=\"sm\"\r\n          imageDiskPrefix={imageDiskPrefix}\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface SaveButtonProps {\r\n  onSave: () => void;\r\n  isLoading: boolean;\r\n}\r\nfunction SaveButton({onSave, isLoading}: SaveButtonProps) {\r\n  const form = useFormContext();\r\n  const title = form.watch('title');\r\n\r\n  return (\r\n    <Button\r\n      variant=\"flat\"\r\n      size=\"sm\"\r\n      color=\"primary\"\r\n      className=\"min-w-90\"\r\n      disabled={isLoading || !title}\r\n      onClick={() => onSave()}\r\n    >\r\n      <Trans message=\"Save\" />\r\n    </Button>\r\n  );\r\n}\r\n\r\ninterface FormSlugEditorProps extends SlugEditorProps {\r\n  name: string;\r\n}\r\nfunction FormSlugEditor({name, ...other}: FormSlugEditorProps) {\r\n  const {\r\n    field: {onChange, onBlur, value = '', ref},\r\n  } = useController({\r\n    name,\r\n  });\r\n  const manuallyChanged = useRef(false);\r\n\r\n  const {watch, setValue} = useFormContext<CreateCustomPagePayload>();\r\n\r\n  useEffect(() => {\r\n    const subscription = watch((formVal, {name: fieldName}) => {\r\n      // if user has not changed slug manually, set it based on page title field changes\r\n      if (fieldName === 'title' && !manuallyChanged.current) {\r\n        setValue('slug', formVal.title);\r\n      }\r\n    });\r\n    return () => subscription.unsubscribe();\r\n  }, [watch, setValue]);\r\n\r\n  return (\r\n    <SlugEditor\r\n      className={clsx(!value && 'invisible')}\r\n      onChange={e => {\r\n        manuallyChanged.current = true;\r\n        onChange(e);\r\n      }}\r\n      onInputBlur={onBlur}\r\n      value={value}\r\n      inputRef={ref}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n","import {useCustomPage} from '@common/custom-page/use-custom-page';\r\nimport React, {Fragment, Suspense} from 'react';\r\nimport {PageMetaTags} from '@common/http/page-meta-tags';\r\nimport {PageStatus} from '@common/http/page-status';\r\nimport {CustomPage} from '@common/admin/custom-pages/custom-page';\r\nimport {FormProvider, useForm} from 'react-hook-form';\r\nimport {useUpdateCustomPage} from '@common/admin/custom-pages/requests/use-update-custom-page';\r\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\r\nimport {ArticleEditorTitle} from '@common/article-editor/article-editor-title';\r\nimport {ArticleEditorStickyHeader} from '@common/article-editor/article-editor-sticky-header';\r\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\r\nimport {CreateCustomPagePayload} from '@common/admin/custom-pages/requests/use-create-custom-page';\r\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\r\n\r\nconst ArticleBodyEditor = React.lazy(\r\n  () => import('@common/article-editor/article-body-editor'),\r\n);\r\n\r\nexport function EditCustomPage() {\r\n  const query = useCustomPage();\r\n\r\n  return query.data ? (\r\n    <Fragment>\r\n      <PageMetaTags query={query} />\r\n      <PageContent page={query.data.page} />\r\n    </Fragment>\r\n  ) : (\r\n    <div className=\"relative w-full h-full\">\r\n      <PageStatus query={query} />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface PageContentProps {\r\n  page: CustomPage;\r\n}\r\nfunction PageContent({page}: PageContentProps) {\r\n  const navigate = useNavigate();\r\n  const crupdatePage = useUpdateCustomPage();\r\n  const form = useForm<CreateCustomPagePayload>({\r\n    defaultValues: {\r\n      title: page.title,\r\n      slug: page.slug,\r\n      body: page.body,\r\n    },\r\n  });\r\n\r\n  const handleSave = (editorContent: string) => {\r\n    crupdatePage.mutate(\r\n      {\r\n        ...form.getValues(),\r\n        body: editorContent,\r\n      },\r\n      {\r\n        onSuccess: () => navigate('../..', {relative: 'path'}),\r\n      },\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Suspense fallback={<FullPageLoader />}>\r\n      <ArticleBodyEditor initialContent={page.body}>\r\n        {(content, editor) => (\r\n          <FileUploadProvider>\r\n            <FormProvider {...form}>\r\n              <ArticleEditorStickyHeader\r\n                editor={editor}\r\n                backLink=\"../..\"\r\n                isLoading={crupdatePage.isPending}\r\n                onSave={handleSave}\r\n              />\r\n              <div className=\"mx-20\">\r\n                <div className=\"prose dark:prose-invert mx-auto flex-auto\">\r\n                  <ArticleEditorTitle />\r\n                  {content}\r\n                </div>\r\n              </div>\r\n            </FormProvider>\r\n          </FileUploadProvider>\r\n        )}\r\n      </ArticleBodyEditor>\r\n    </Suspense>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {CustomPage} from '../custom-page';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {message} from '@common/i18n/message';\r\n\r\ninterface Response extends BackendResponse {\r\n  page: CustomPage;\r\n}\r\n\r\nexport interface CreateCustomPagePayload {\r\n  title?: string;\r\n  body?: string;\r\n  slug?: string;\r\n  hide_nav?: boolean;\r\n}\r\n\r\nexport function useCreateCustomPage(endpoint?: string) {\r\n  const finalEndpoint = endpoint || 'custom-pages';\r\n  return useMutation({\r\n    mutationFn: (payload: CreateCustomPagePayload) =>\r\n      createPage(payload, finalEndpoint),\r\n    onError: err => showHttpErrorToast(err),\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({queryKey: ['custom-pages']});\r\n      await queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey(finalEndpoint),\r\n      });\r\n      toast(message('Page created'));\r\n    },\r\n  });\r\n}\r\n\r\nfunction createPage(\r\n  payload: CreateCustomPagePayload,\r\n  endpoint: string,\r\n): Promise<Response> {\r\n  return apiClient.post(`${endpoint}`, payload).then(r => r.data);\r\n}\r\n","import React, {Suspense} from 'react';\r\nimport {FormProvider, useForm} from 'react-hook-form';\r\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\r\nimport {ArticleEditorTitle} from '@common/article-editor/article-editor-title';\r\nimport {ArticleEditorStickyHeader} from '@common/article-editor/article-editor-sticky-header';\r\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\r\nimport {\r\n  CreateCustomPagePayload,\r\n  useCreateCustomPage,\r\n} from '@common/admin/custom-pages/requests/use-create-custom-page';\r\nimport {FullPageLoader} from '@common/ui/progress/full-page-loader';\r\n\r\nconst ArticleBodyEditor = React.lazy(\r\n  () => import('@common/article-editor/article-body-editor'),\r\n);\r\n\r\nexport function CreateCustomPage() {\r\n  const navigate = useNavigate();\r\n  const createPage = useCreateCustomPage();\r\n  const form = useForm<CreateCustomPagePayload>();\r\n\r\n  const handleSave = (editorContent: string) => {\r\n    createPage.mutate(\r\n      {\r\n        ...form.getValues(),\r\n        body: editorContent,\r\n      },\r\n      {\r\n        onSuccess: () => navigate('../', {relative: 'path'}),\r\n      },\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Suspense fallback={<FullPageLoader />}>\r\n      <ArticleBodyEditor>\r\n        {(content, editor) => (\r\n          <FileUploadProvider>\r\n            <FormProvider {...form}>\r\n              <ArticleEditorStickyHeader\r\n                editor={editor}\r\n                isLoading={createPage.isPending}\r\n                onSave={handleSave}\r\n                backLink=\"../\"\r\n              />\r\n              <div className=\"mx-20\">\r\n                <div className=\"prose dark:prose-invert mx-auto flex-auto\">\r\n                  <ArticleEditorTitle />\r\n                  {content}\r\n                </div>\r\n              </div>\r\n            </FormProvider>\r\n          </FileUploadProvider>\r\n        )}\r\n      </ArticleBodyEditor>\r\n    </Suspense>\r\n  );\r\n}\r\n","export default \"__VITE_ASSET__03cbd387__\"","import {useTrans} from '@common/i18n/use-trans';\r\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {SearchIcon} from '@common/icons/material/Search';\r\nimport {message} from '@common/i18n/message';\r\nimport {Select} from '@common/ui/forms/select/select';\r\nimport {Item} from '@common/ui/forms/listbox/item';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport React from 'react';\r\nimport {FontSelectorState} from '@common/ui/font-selector/font-selector-state';\r\n\r\nexport interface FontSelectorFilterValue {\r\n  query: string;\r\n  category: string;\r\n}\r\n\r\ninterface FiltersHeaderProps {\r\n  state: FontSelectorState;\r\n}\r\nexport function FontSelectorFilters({\r\n  state: {filters, setFilters},\r\n}: FiltersHeaderProps) {\r\n  const {trans} = useTrans();\r\n  return (\r\n    <div className=\"mb-24 items-center gap-24 @xs:flex\">\r\n      <TextField\r\n        className=\"mb-12 flex-auto @xs:mb-0\"\r\n        value={filters.query}\r\n        onChange={e => {\r\n          setFilters({\r\n            ...filters,\r\n            query: e.target.value,\r\n          });\r\n        }}\r\n        startAdornment={<SearchIcon />}\r\n        placeholder={trans(message('Search fonts'))}\r\n      />\r\n      <Select\r\n        className=\"flex-auto\"\r\n        selectionMode=\"single\"\r\n        selectedValue={filters.category}\r\n        onSelectionChange={value => {\r\n          setFilters({\r\n            ...filters,\r\n            category: value as string,\r\n          });\r\n        }}\r\n      >\r\n        <Item value=\"\">\r\n          <Trans message=\"All categories\" />\r\n        </Item>\r\n        <Item value=\"serif\">\r\n          <Trans message=\"Serif\" />\r\n        </Item>\r\n        <Item value=\"sans-serif\">\r\n          <Trans message=\"Sans serif\" />\r\n        </Item>\r\n        <Item value=\"display\">\r\n          <Trans message=\"Display\" />\r\n        </Item>\r\n        <Item value=\"handwriting\">\r\n          <Trans message=\"Handwriting\" />\r\n        </Item>\r\n        <Item value=\"monospace\">\r\n          <Trans message=\"Monospace\" />\r\n        </Item>\r\n      </Select>\r\n    </div>\r\n  );\r\n}\r\n","import {useCollator} from './use-collator';\r\n\r\ninterface Filter {\r\n  /** Returns whether a string starts with a given substring. */\r\n  startsWith(string: string, substring: string): boolean;\r\n  /** Returns whether a string ends with a given substring. */\r\n  endsWith(string: string, substring: string): boolean;\r\n  /** Returns whether a string contains a given substring. */\r\n  contains(string: string, substring: string): boolean;\r\n}\r\n\r\nexport function useFilter(options?: Intl.CollatorOptions): Filter {\r\n  const collator = useCollator({\r\n    usage: 'search',\r\n    ...options,\r\n  });\r\n\r\n  return {\r\n    startsWith(string, substring) {\r\n      if (substring.length === 0) {\r\n        return true;\r\n      }\r\n\r\n      string = string.normalize('NFC');\r\n      substring = substring.normalize('NFC');\r\n      return (\r\n        collator.compare(string.slice(0, substring.length), substring) === 0\r\n      );\r\n    },\r\n    endsWith(string, substring) {\r\n      if (substring.length === 0) {\r\n        return true;\r\n      }\r\n\r\n      string = string.normalize('NFC');\r\n      substring = substring.normalize('NFC');\r\n      return collator.compare(string.slice(-substring.length), substring) === 0;\r\n    },\r\n    contains(string, substring) {\r\n      if (substring.length === 0) {\r\n        return true;\r\n      }\r\n\r\n      string = string.normalize('NFC');\r\n      substring = substring.normalize('NFC');\r\n\r\n      let scan = 0;\r\n      const sliceLen = substring.length;\r\n      for (; scan + sliceLen <= string.length; scan++) {\r\n        const slice = string.slice(scan, scan + sliceLen);\r\n        if (collator.compare(substring, slice) === 0) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    },\r\n  };\r\n}\r\n","import {FontConfig} from '@common/http/value-lists';\r\nimport {message} from '@common/i18n/message';\r\n\r\nexport const BrowserSafeFonts: FontConfig[] = [\r\n  {\r\n    label: message('System'),\r\n    family:\r\n      'ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"',\r\n    category: 'sans-serif',\r\n  },\r\n  {family: 'Impact, Charcoal, sans-serif', category: 'sans-serif'},\r\n  {family: 'Arial, Helvetica Neue, Helvetica, sans-serif', category: 'serif'},\r\n  {family: '\"Comic Sans MS\", cursive, sans-serif', category: 'Handwriting'},\r\n  {family: 'Century Gothic, sans-serif', category: 'sans-serif'},\r\n  {family: '\"Courier New\", Courier, monospace', category: 'monospace'},\r\n  {\r\n    family: '\"Lucida Sans Unicode\", \"Lucida Grande\", sans-serif',\r\n    category: 'sans-serif',\r\n  },\r\n  {family: '\"Times New Roman\", Times, serif', category: 'serif'},\r\n  {family: '\"Lucida Console\", Monaco, monospace', category: 'monospace'},\r\n  {family: '\"Andele Mono\", monospace, sans-serif', category: 'sans-serif'},\r\n  {family: 'Verdana, Geneva, sans-serif', category: 'sans-serif'},\r\n  {\r\n    family: '\"Helvetica Neue\", Helvetica, Arial, sans-serif',\r\n    category: 'sans-serif',\r\n  },\r\n];\r\n","import {useCallback, useEffect, useMemo, useState} from 'react';\r\nimport {FontSelectorFilterValue} from '@common/ui/font-selector/font-selector-filters';\r\nimport {FontConfig, useValueLists} from '@common/http/value-lists';\r\nimport {useFilter} from '@common/i18n/use-filter';\r\nimport {BrowserSafeFonts} from '@common/ui/font-picker/browser-safe-fonts';\r\nimport {chunkArray} from '@common/utils/array/chunk-array';\r\nimport {loadFonts} from '@common/ui/font-picker/load-fonts';\r\n\r\nexport interface FontSelectorState extends UseFontSelectorProps {\r\n  fonts: FontConfig[];\r\n  filteredFonts: FontConfig[];\r\n  pages: FontConfig[][];\r\n  isLoading: boolean;\r\n  filters: FontSelectorFilterValue;\r\n  setFilters: (filters: FontSelectorFilterValue) => void;\r\n  currentPage: number;\r\n  setCurrentPage: (page: number) => void;\r\n}\r\n\r\nexport interface UseFontSelectorProps {\r\n  value?: FontConfig;\r\n  onChange: (value: FontConfig) => void;\r\n}\r\nexport function useFontSelectorState({\r\n  value,\r\n  onChange,\r\n}: UseFontSelectorProps): FontSelectorState {\r\n  const {data, isLoading} = useValueLists(['googleFonts']);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const [filters, setFilterState] = useState<FontSelectorFilterValue>({\r\n    query: '',\r\n    category: value?.category ?? '',\r\n  });\r\n  const {contains} = useFilter({\r\n    sensitivity: 'base',\r\n  });\r\n\r\n  const setFilters = useCallback((filters: FontSelectorFilterValue) => {\r\n    setFilterState(filters);\r\n    // reset to first page when searching or changing category\r\n    setCurrentPage(0);\r\n  }, []);\r\n\r\n  const allFonts = useMemo(() => {\r\n    return BrowserSafeFonts.concat(data?.googleFonts ?? []);\r\n  }, [data?.googleFonts]);\r\n\r\n  const filteredFonts = useMemo(() => {\r\n    return allFonts.filter(font => {\r\n      return (\r\n        contains(font.family, filters.query) &&\r\n        (!filters.category ||\r\n          font.category?.toLowerCase() === filters.category.toLowerCase())\r\n      );\r\n    });\r\n  }, [allFonts, filters, contains]);\r\n\r\n  const pages = useMemo(() => {\r\n    return chunkArray(filteredFonts, 20);\r\n  }, [filteredFonts]);\r\n  const fonts = pages[currentPage];\r\n\r\n  useEffect(() => {\r\n    const id = 'font-selector';\r\n    if (fonts?.length) {\r\n      loadFonts(fonts, {id});\r\n    }\r\n  }, [fonts, currentPage]);\r\n\r\n  return {\r\n    fonts: fonts || [],\r\n    currentPage,\r\n    filteredFonts: filteredFonts || [],\r\n    setCurrentPage,\r\n    isLoading,\r\n    filters,\r\n    setFilters,\r\n    value,\r\n    onChange,\r\n    pages,\r\n  };\r\n}\r\n","import {Trans} from '@common/i18n/trans';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {KeyboardArrowLeftIcon} from '@common/icons/material/KeyboardArrowLeft';\r\nimport {KeyboardArrowRightIcon} from '@common/icons/material/KeyboardArrowRight';\r\nimport React from 'react';\r\nimport {FontSelectorState} from '@common/ui/font-selector/font-selector-state';\r\n\r\ninterface FontSelectorPaginationProps {\r\n  state: FontSelectorState;\r\n}\r\nexport function FontSelectorPagination({\r\n  state: {currentPage = 0, setCurrentPage, filteredFonts, pages},\r\n}: FontSelectorPaginationProps) {\r\n  const total = filteredFonts?.length || 0;\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-end gap-24 text-sm mt-30 pt-14 border-t\">\r\n      {total > 0 && (\r\n        <div>\r\n          <Trans\r\n            message=\":from - :to of :total\"\r\n            values={{\r\n              from: currentPage * 20 + 1,\r\n              to: Math.min((currentPage + 1) * 20, total),\r\n              total,\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n      <div className=\"text-muted\">\r\n        <IconButton\r\n          disabled={currentPage < 1}\r\n          onClick={() => {\r\n            setCurrentPage(Math.max(0, currentPage - 1));\r\n          }}\r\n        >\r\n          <KeyboardArrowLeftIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          disabled={currentPage >= pages.length - 1}\r\n          onClick={() => {\r\n            setCurrentPage(currentPage + 1);\r\n          }}\r\n        >\r\n          <KeyboardArrowRightIcon />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {Trans} from '@common/i18n/trans';\r\nimport React from 'react';\r\nimport {ButtonBase} from '@common/ui/buttons/button-base';\r\nimport clsx from 'clsx';\r\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\r\nimport fontImage from './font.svg';\r\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\r\nimport {FontSelectorFilters} from '@common/ui/font-selector/font-selector-filters';\r\nimport {\r\n  FontSelectorState,\r\n  UseFontSelectorProps,\r\n  useFontSelectorState,\r\n} from '@common/ui/font-selector/font-selector-state';\r\nimport {FontSelectorPagination} from '@common/ui/font-selector/font-selector-pagination';\r\nimport {FontConfig} from '@common/http/value-lists';\r\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\r\n\r\ninterface FontSelectorProps extends UseFontSelectorProps {\r\n  className?: string;\r\n}\r\nexport function FontSelector(props: FontSelectorProps) {\r\n  const state = useFontSelectorState(props);\r\n  return (\r\n    <div className={props.className}>\r\n      <FontSelectorFilters state={state} />\r\n      <AnimatePresence initial={false} mode=\"wait\">\r\n        <FontList state={state} />\r\n      </AnimatePresence>\r\n      <FontSelectorPagination state={state} />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface FontListProps {\r\n  state: FontSelectorState;\r\n}\r\nfunction FontList({state}: FontListProps) {\r\n  const {isLoading, fonts} = state;\r\n\r\n  const gridClassName =\r\n    'grid gap-24 grid-cols-[repeat(auto-fill,minmax(90px,1fr))] items-start';\r\n\r\n  if (isLoading) {\r\n    return <FontListSkeleton className={gridClassName} />;\r\n  }\r\n\r\n  if (!fonts?.length) {\r\n    return (\r\n      <IllustratedMessage\r\n        className=\"mt-60\"\r\n        size=\"sm\"\r\n        image={<SvgImage src={fontImage} />}\r\n        title={<Trans message=\"No matching fonts\" />}\r\n        description={\r\n          <Trans message=\"Try another search query or different category\" />\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <m.div key=\"font-list\" {...opacityAnimation} className={gridClassName}>\r\n      {fonts?.map(font => (\r\n        <FontButton key={font.family} font={font} state={state} />\r\n      ))}\r\n    </m.div>\r\n  );\r\n}\r\n\r\ninterface FontButtonProps {\r\n  font: FontConfig;\r\n  state: FontSelectorState;\r\n}\r\nfunction FontButton({font, state: {value, onChange}}: FontButtonProps) {\r\n  const isActive = value?.family === font.family;\r\n  const displayName = font.family.split(',')[0].replace(/\"/g, '');\r\n\r\n  return (\r\n    <ButtonBase\r\n      key={font.family}\r\n      display=\"block\"\r\n      onClick={() => {\r\n        onChange(font);\r\n      }}\r\n    >\r\n      <span\r\n        className={clsx(\r\n          'flex aspect-square items-center justify-center rounded-panel border text-4xl transition-bg-color hover:bg-hover md:text-5xl',\r\n          isActive && 'ring-2 ring-primary ring-offset-2',\r\n        )}\r\n      >\r\n        <span style={{fontFamily: font.family}}>Aa</span>\r\n      </span>\r\n      <span\r\n        className={clsx(\r\n          'mt-6 block overflow-hidden overflow-ellipsis whitespace-nowrap text-sm',\r\n          isActive && 'text-primary',\r\n        )}\r\n      >\r\n        {font.label ? <Trans {...font.label} /> : displayName}\r\n      </span>\r\n    </ButtonBase>\r\n  );\r\n}\r\n\r\ninterface FontListSkeletonProps {\r\n  className: string;\r\n}\r\nfunction FontListSkeleton({className}: FontListSkeletonProps) {\r\n  const items = Array.from(Array(20).keys());\r\n  return (\r\n    <m.div key=\"font-list-skeleton\" {...opacityAnimation} className={className}>\r\n      {items.map(index => (\r\n        <div key={index}>\r\n          <div className=\"aspect-square\">\r\n            <Skeleton display=\"block\" variant=\"rect\" />\r\n          </div>\r\n          <Skeleton className=\"mt-6 text-sm\" />\r\n        </div>\r\n      ))}\r\n    </m.div>\r\n  );\r\n}\r\n","import {FontSelector} from '@common/ui/font-selector/font-selector';\r\nimport {useFormContext} from 'react-hook-form';\r\nimport {\r\n  appearanceState,\r\n  AppearanceValues,\r\n} from '@common/admin/appearance/appearance-store';\r\nimport {useParams} from 'react-router-dom';\r\n\r\ntype Font = 'appearance.themes.all.1.font';\r\n\r\nexport function ThemeFontPanel() {\r\n  const {setValue, watch} = useFormContext<AppearanceValues>();\r\n  const {themeIndex} = useParams();\r\n  const key = `appearance.themes.all.${themeIndex}.font` as Font;\r\n  return (\r\n    <FontSelector\r\n      value={watch(key)}\r\n      onChange={font => {\r\n        setValue(key, font, {shouldDirty: true});\r\n        appearanceState().preview.setThemeFont(font);\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import {Trans} from '@common/i18n/trans';\r\nimport {ButtonBase} from '@common/ui/buttons/button-base';\r\nimport {ReactNode} from 'react';\r\nimport clsx from 'clsx';\r\nimport {useFormContext} from 'react-hook-form';\r\nimport {AppearanceValues} from '@common/admin/appearance/appearance-store';\r\nimport {message} from '@common/i18n/message';\r\nimport {useParams} from 'react-router-dom';\r\n\r\nconst radiusMap = {\r\n  'rounded-none': {\r\n    label: message('Square'),\r\n    value: '0px',\r\n  },\r\n  'rounded-sm': {\r\n    label: message('Small'),\r\n    value: '0.125rem',\r\n  },\r\n  'rounded-md': {\r\n    label: message('Medium'),\r\n    value: '0.25rem',\r\n  },\r\n  'rounded-lg': {\r\n    label: message('Large'),\r\n    value: '0.5rem',\r\n  },\r\n  'rounded-xl': {\r\n    label: message('Larger'),\r\n    value: '0.75rem',\r\n  },\r\n  'rounded-full': {\r\n    label: message('Pill'),\r\n    value: '9999px',\r\n  },\r\n};\r\n\r\nexport function ThemeRadiusPanel() {\r\n  return (\r\n    <div className=\"space-y-24\">\r\n      <RadiusSelector\r\n        label={<Trans message=\"Button rounding\" />}\r\n        name=\"button-radius\"\r\n      />\r\n      <RadiusSelector\r\n        label={<Trans message=\"Input rounding\" />}\r\n        name=\"input-radius\"\r\n      />\r\n      <RadiusSelector\r\n        label={<Trans message=\"Panel rounding\" />}\r\n        name=\"panel-radius\"\r\n        hidePill\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface RadiusSelectorProps {\r\n  label: ReactNode;\r\n  name: string;\r\n  hidePill?: boolean;\r\n}\r\nfunction RadiusSelector({label, name, hidePill}: RadiusSelectorProps) {\r\n  const {themeIndex} = useParams();\r\n  const {watch, setValue} = useFormContext<AppearanceValues>();\r\n  const formKey =\r\n    `appearance.themes.all.${themeIndex}.values.--be-${name}` as 'appearance.themes.all.1.values.--be-button-radius';\r\n  const currentValue = watch(formKey);\r\n  return (\r\n    <div>\r\n      <div className=\"mb-10 text-sm font-semibold\">{label}</div>\r\n      <div className=\"grid grid-cols-3 gap-10 text-sm\">\r\n        {Object.entries(radiusMap)\r\n          .filter(([key]) => !hidePill || !key.includes('full'))\r\n          .map(([key, {label, value}]) => (\r\n            <PreviewButton\r\n              key={key}\r\n              radius={key}\r\n              isActive={value === currentValue}\r\n              onClick={() => {\r\n                setValue(formKey, value, {shouldDirty: true});\r\n              }}\r\n            >\r\n              <Trans {...label} />\r\n            </PreviewButton>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface PreviewButtonProps {\r\n  radius: string;\r\n  children: ReactNode;\r\n  isActive: boolean;\r\n  onClick: () => void;\r\n}\r\nfunction PreviewButton({\r\n  radius,\r\n  children,\r\n  isActive,\r\n  onClick,\r\n}: PreviewButtonProps) {\r\n  return (\r\n    <ButtonBase\r\n      display=\"block\"\r\n      className={clsx(\r\n        'h-36 border-2 hover:bg-hover',\r\n        radius,\r\n        isActive && 'border-primary',\r\n      )}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </ButtonBase>\r\n  );\r\n}\r\n","import {Tabs} from '@common/ui/tabs/tabs';\r\nimport {Tab} from '@common/ui/tabs/tab';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {TabList} from '@common/ui/tabs/tab-list';\r\nimport {Link, Outlet, useLocation} from 'react-router-dom';\r\n\r\nconst tabs = ['schedule', 'error', 'outgoing-email'];\r\n\r\nexport function LogsPage() {\r\n  const {pathname} = useLocation();\r\n  const activeTab = pathname.split('/').pop() as string;\r\n  const activeIndex = tabs.includes(activeTab) ? tabs.indexOf(activeTab) : 0;\r\n  return (\r\n    <Tabs className=\"p-12 md:p-24\" selectedTab={activeIndex}>\r\n      <TabList>\r\n        <Tab elementType={Link} to=\"/admin/logs/schedule\" replace>\r\n          <Trans message=\"Schedule\" />\r\n        </Tab>\r\n        <Tab elementType={Link} to=\"/admin/logs/error\" replace>\r\n          <Trans message=\"Error\" />\r\n        </Tab>\r\n        <Tab elementType={Link} to=\"/admin/logs/outgoing-email\" replace>\r\n          <Trans message=\"Email\" />\r\n        </Tab>\r\n      </TabList>\r\n      <Outlet />\r\n    </Tabs>\r\n  );\r\n}\r\n","import {CheckIcon} from '@common/icons/material/Check';\r\nimport {CloseIcon} from '@common/icons/material/Close';\r\nimport React from 'react';\r\n\r\ninterface BooleanIndicatorProps {\r\n  value: boolean;\r\n}\r\nexport function BooleanIndicator({value}: BooleanIndicatorProps) {\r\n  if (value) {\r\n    return <CheckIcon className=\"icon-md text-positive\" />;\r\n  }\r\n  return <CloseIcon className=\"icon-md text-danger\" />;\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\nimport {message} from '@common/i18n/message';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\ninterface Payload {\r\n  id: number;\r\n}\r\n\r\nexport function useRerunScheduledCommand() {\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => rerunCommand(payload),\r\n    onSuccess: async (response, props) => {\r\n      await queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey('logs/schedule'),\r\n      });\r\n      toast.positive(trans(message('Command reran')));\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction rerunCommand({id}: Payload): Promise<Response> {\r\n  return apiClient.post(`logs/schedule/rerun/${id}`).then(r => r.data);\r\n}\r\n","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const EventRepeatIcon = createSvgIcon(\r\n  <path d=\"M21 12V6c0-1.1-.9-2-2-2h-1V2h-2v2H8V2H6v2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h7v-2H5V10h14v2h2zm-2-4H5V6h14v2zm-3.36 12c.43 1.45 1.77 2.5 3.36 2.5 1.93 0 3.5-1.57 3.5-3.5s-1.57-3.5-3.5-3.5c-.95 0-1.82.38-2.45 1H18V18h-4v-4h1.5v1.43c.9-.88 2.14-1.43 3.5-1.43 2.76 0 5 2.24 5 5s-2.24 5-5 5c-2.42 0-4.44-1.72-4.9-4h1.54z\" />\r\n, 'EventRepeatOutlined');\r\n","import {ColumnConfig} from '@common/datatable/column-config';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\r\nimport {BooleanIndicator} from '@common/datatable/column-templates/boolean-indicator';\r\nimport {FormattedNumber} from '@common/i18n/formatted-number';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport React from 'react';\r\nimport {ScheduleLogItem} from '@common/admin/logging/schedule/schedule-log-item';\r\nimport {useRerunScheduledCommand} from '@common/admin/logging/schedule/use-rerurun-scheduled-command';\r\nimport {EventRepeatIcon} from '@common/icons/material/EventRepeat';\r\nimport {FormattedRelativeTime} from '@common/i18n/formatted-relative-time';\r\n\r\nexport const ScheduleDatatableColumns: ColumnConfig<ScheduleLogItem>[] = [\r\n  {\r\n    key: 'command',\r\n    allowsSorting: true,\r\n    visibleInMode: 'all',\r\n    width: 'flex-3 min-w-200',\r\n    header: () => <Trans message=\"Name\" />,\r\n    body: item => (\r\n      <NameWithAvatar label={item.command} description={item.output} />\r\n    ),\r\n  },\r\n  {\r\n    key: 'ran_at',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Ran at\" />,\r\n    body: item => <FormattedRelativeTime date={item.ran_at} />,\r\n  },\r\n  {\r\n    key: 'duration',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Duration\" />,\r\n    body: item => `${item.duration}ms`,\r\n  },\r\n  {\r\n    key: 'exit_code',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Completed\" />,\r\n    body: item => <BooleanIndicator value={item.exit_code === 0} />,\r\n  },\r\n  {\r\n    key: 'count_in_last_hour',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Runs recently\" />,\r\n    body: item => <FormattedNumber value={item.count_in_last_hour} />,\r\n  },\r\n  {\r\n    key: 'actions',\r\n    header: () => <Trans message=\"Actions\" />,\r\n    hideHeader: true,\r\n    align: 'end',\r\n    width: 'w-42 flex-shrink-0',\r\n    visibleInMode: 'all',\r\n    body: item => <RerunButton item={item} />,\r\n  },\r\n];\r\n\r\ninterface RerunButtonProps {\r\n  item: ScheduleLogItem;\r\n}\r\nfunction RerunButton({item}: RerunButtonProps) {\r\n  const rerunCommand = useRerunScheduledCommand();\r\n  return (\r\n    <Tooltip label={<Trans message=\"Rerun now\" />}>\r\n      <IconButton\r\n        size=\"md\"\r\n        className=\"text-muted\"\r\n        disabled={rerunCommand.isPending}\r\n        onClick={() => {\r\n          rerunCommand.mutate({id: item.id});\r\n        }}\r\n      >\r\n        <EventRepeatIcon />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n","export default \"__VITE_ASSET__8c0e1462__\"","import {createSvgIcon} from '../create-svg-icon';\r\n\r\nexport const DownloadIcon = createSvgIcon(\r\n  <path d=\"M19 9h-4V3H9v6H5l7 7 7-7zm-8 2V5h2v6h1.17L12 13.17 9.83 11H11zm-6 7h14v2H5z\" />\r\n, 'DownloadOutlined');\r\n","import {DataTablePage} from '@common/datatable/page/data-table-page';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\r\nimport React from 'react';\r\nimport {ScheduleDatatableColumns} from '@common/admin/logging/schedule/schedule-datatable-columns';\r\nimport timelineImage from '@common/admin/logging/schedule/timeline.svg';\r\nimport {DataTableAddItemButton} from '@common/datatable/data-table-add-item-button';\r\nimport {DownloadIcon} from '@common/icons/material/Download';\r\n\r\nexport function ScheduleLogDatatable() {\r\n  return (\r\n    <DataTablePage\r\n      padding=\"pt-12 md:pt-24\"\r\n      endpoint=\"logs/schedule\"\r\n      title={<Trans message=\"CRON schedule log\" />}\r\n      columns={ScheduleDatatableColumns}\r\n      actions={<Actions />}\r\n      enableSelection={false}\r\n      emptyStateMessage={\r\n        <DataTableEmptyStateMessage\r\n          image={timelineImage}\r\n          title={<Trans message=\"No scheduled commands have ran yet\" />}\r\n          filteringTitle={<Trans message=\"No matching scheduled commands\" />}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction Actions() {\r\n  return (\r\n    <DataTableAddItemButton\r\n      elementType=\"a\"\r\n      href=\"api/v1/logs/schedule/download\"\r\n      download\r\n      icon={<DownloadIcon />}\r\n    >\r\n      <Trans message=\"Download log\" />\r\n    </DataTableAddItemButton>\r\n  );\r\n}\r\n","export default \"__VITE_ASSET__5350d2f0__\"","import {ColumnConfig} from '@common/datatable/column-config';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport React from 'react';\r\nimport {ErrorLogItem} from '@common/admin/logging/error/error-log-item';\r\nimport {InfoIcon} from '@common/icons/material/Info';\r\nimport {ErrorIcon} from '@common/icons/material/Error';\r\nimport clsx from 'clsx';\r\nimport {FormattedRelativeTime} from '@common/i18n/formatted-relative-time';\r\n\r\nexport const ErrorLogDatatableColumns: ColumnConfig<ErrorLogItem>[] = [\r\n  {\r\n    key: 'message',\r\n    visibleInMode: 'all',\r\n    width: 'flex-3 min-w-200',\r\n    header: () => <Trans message=\"Message\" />,\r\n    body: item => item.message,\r\n  },\r\n  {\r\n    key: 'datetime',\r\n    header: () => <Trans message=\"Date\" />,\r\n    body: item => <FormattedRelativeTime date={item.datetime} />,\r\n  },\r\n  {\r\n    key: 'severity',\r\n    header: () => <Trans message=\"Severity\" />,\r\n    body: item => {\r\n      return (\r\n        <span\r\n          className={clsx(\r\n            'flex items-center gap-6 text-xs capitalize',\r\n            item.level === 'error' ? 'text-danger' : 'text-primary',\r\n          )}\r\n        >\r\n          {item.level === 'error' ? (\r\n            <ErrorIcon size=\"sm\" />\r\n          ) : (\r\n            <InfoIcon size=\"sm\" />\r\n          )}\r\n          {item.level}\r\n        </span>\r\n      );\r\n    },\r\n  },\r\n];\r\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {ErrorLogItem} from '@common/admin/logging/error/error-log-item';\r\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\r\nimport {Button} from '@common/ui/buttons/button';\r\n\r\ninterface Props {\r\n  error: ErrorLogItem;\r\n}\r\nexport function ErrorLogEntryDialog({error}: Props) {\r\n  return (\r\n    <Dialog size=\"fullscreen\">\r\n      <DialogHeader\r\n        showDivider\r\n        padding=\"px-24 py-10\"\r\n        actions={\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"xs\"\r\n            onClick={() => downloadLogItem(error)}\r\n          >\r\n            <Trans message=\"Download\" />\r\n          </Button>\r\n        }\r\n      >\r\n        <Trans message=\"Error details\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <pre className=\"whitespace-pre-wrap break-words text-xs leading-5\">\r\n          {error.exception}\r\n        </pre>\r\n      </DialogBody>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nfunction downloadLogItem(item: ErrorLogItem) {\r\n  const el = document.createElement('a');\r\n  el.setAttribute(\r\n    'href',\r\n    'data:text/plain;charset=utf-8,' + encodeURIComponent(item.exception),\r\n  );\r\n  el.setAttribute('download', `error-${item.id}.log`);\r\n\r\n  el.style.display = 'none';\r\n  document.body.appendChild(el);\r\n  el.click();\r\n  document.body.removeChild(el);\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {message} from '@common/i18n/message';\r\nimport {DatatableDataQueryKey} from '@common/datatable/requests/paginated-resources';\r\n\r\ninterface Payload {\r\n  identifier: string;\r\n}\r\n\r\nexport function useDeleteErrorLog() {\r\n  const {trans} = useTrans();\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => deleteLogFile(payload),\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({\r\n        queryKey: DatatableDataQueryKey('logs/error'),\r\n      });\r\n      toast(trans(message('Log file deleted')));\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n\r\nfunction deleteLogFile({identifier}: Payload) {\r\n  return apiClient.delete(`logs/error/${identifier}`).then(r => r.data);\r\n}\r\n","import {DataTablePage} from '@common/datatable/page/data-table-page';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\r\nimport React, {Fragment, useEffect, useRef, useState} from 'react';\r\nimport bugFixingImage from '@common/admin/logging/error/bug-fixing.svg';\r\nimport {DataTableAddItemButton} from '@common/datatable/data-table-add-item-button';\r\nimport {DownloadIcon} from '@common/icons/material/Download';\r\nimport {ErrorLogDatatableColumns} from '@common/admin/logging/error/error-log-datatable-columns';\r\nimport {closeDialog, openDialog} from '@common/ui/overlays/store/dialog-store';\r\nimport {ErrorLogEntryDialog} from '@common/admin/logging/error/error-log-entry-dialog';\r\nimport {useDataTable} from '@common/datatable/page/data-table-context';\r\nimport {Select} from '@common/ui/forms/select/select';\r\nimport {Item} from '@common/ui/forms/listbox/item';\r\nimport {Skeleton} from '@common/ui/skeleton/skeleton';\r\nimport {ErrorLogItem} from '@common/admin/logging/error/error-log-item';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\r\nimport {useDeleteErrorLog} from '@common/admin/logging/error/use-delete-error-log';\r\nimport {FormattedBytes} from '@common/uploads/formatted-bytes';\r\n\r\ninterface ErrorLogFile {\r\n  name: string;\r\n  identifier: string;\r\n  size: number;\r\n}\r\n\r\nexport function ErrorLogDatatable() {\r\n  return (\r\n    <DataTablePage\r\n      padding=\"pt-12 md:pt-24\"\r\n      endpoint=\"logs/error\"\r\n      title={<Trans message=\"Error log\" />}\r\n      onRowAction={item => {\r\n        openDialog(ErrorLogEntryDialog, {error: item});\r\n      }}\r\n      columns={ErrorLogDatatableColumns}\r\n      actions={<Actions />}\r\n      enableSelection={false}\r\n      emptyStateMessage={\r\n        <DataTableEmptyStateMessage\r\n          image={bugFixingImage}\r\n          title={<Trans message=\"No errors have been logged yet\" />}\r\n          filteringTitle={<Trans message=\"No matching error log entries\" />}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction Actions() {\r\n  const {query, setParams} = useDataTable<\r\n    ErrorLogItem,\r\n    {files: ErrorLogFile[]; selectedFile?: string}\r\n  >();\r\n\r\n  const setOnce = useRef(false);\r\n  const [selectedFile, setSelectedFile] = useState<string | null>(null);\r\n\r\n  // set initial selected file once files are loaded\r\n  useEffect(() => {\r\n    if (query.data?.files?.length && !setOnce.current) {\r\n      setOnce.current = true;\r\n      const firstFile = query.data.files[0].identifier;\r\n      setSelectedFile(query.data.files[0].identifier);\r\n      // prevent unnecessary http call\r\n      if (firstFile !== query.data.selectedFile) {\r\n        setParams({file: query.data.files[0].identifier});\r\n      }\r\n    }\r\n  }, [query.data, setParams, setOnce]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <FileSelector\r\n        files={query.data?.files ?? null}\r\n        selectedFile={selectedFile}\r\n        onSelected={file => {\r\n          setSelectedFile(file.identifier);\r\n          setParams({file: file.identifier});\r\n        }}\r\n      />\r\n      <Button\r\n        variant=\"outline\"\r\n        color=\"danger\"\r\n        disabled={!selectedFile}\r\n        onClick={() =>\r\n          openDialog(ConfirmDeleteDialog, {identifier: selectedFile})\r\n        }\r\n      >\r\n        <Trans message=\"Delete\" />\r\n      </Button>\r\n      {selectedFile && (\r\n        <DataTableAddItemButton\r\n          elementType=\"a\"\r\n          download={\r\n            query.data?.files.find(f => f.identifier === selectedFile)?.name\r\n          }\r\n          href={`api/v1/logs/error/${selectedFile}/download`}\r\n          icon={<DownloadIcon />}\r\n        >\r\n          <Trans message=\"Download log\" />\r\n        </DataTableAddItemButton>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface FileSelectorProps {\r\n  files: ErrorLogFile[] | null;\r\n  selectedFile: string | null;\r\n  onSelected: (file: ErrorLogFile) => void;\r\n}\r\nfunction FileSelector({files, selectedFile, onSelected}: FileSelectorProps) {\r\n  // files have not loaded yet, show skeleton\r\n  if (!files) {\r\n    return <Skeleton variant=\"rect\" className=\"max-w-[210px]\" />;\r\n  }\r\n\r\n  // no error logs yet, hide select completely\r\n  if (!files.length) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Select\r\n      selectionMode=\"single\"\r\n      selectedValue={selectedFile}\r\n      size=\"sm\"\r\n      minWidth=\"min-w-[210px]\"\r\n    >\r\n      {files?.map(file => (\r\n        <Item\r\n          key={file.identifier}\r\n          value={file.identifier}\r\n          onSelected={() => onSelected(file)}\r\n        >\r\n          {file.name} (<FormattedBytes bytes={file.size} />)\r\n        </Item>\r\n      ))}\r\n    </Select>\r\n  );\r\n}\r\n\r\ninterface ConfirmDeleteDialogProps {\r\n  identifier: string;\r\n}\r\nfunction ConfirmDeleteDialog({identifier}: ConfirmDeleteDialogProps) {\r\n  const deleteLog = useDeleteErrorLog();\r\n  return (\r\n    <ConfirmationDialog\r\n      title={<Trans message=\"Delete log file\" />}\r\n      body={<Trans message=\"Are you sure you want to delete this log file?\" />}\r\n      confirm={<Trans message=\"Delete\" />}\r\n      onConfirm={() =>\r\n        deleteLog.mutate({identifier}, {onSuccess: () => closeDialog()})\r\n      }\r\n      isLoading={deleteLog.isPending}\r\n      isDanger\r\n    />\r\n  );\r\n}\r\n","export default \"__VITE_ASSET__a71f56b4__\"","import {useQuery} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {OutgoingEmailLogItem} from '@common/admin/logging/outgoing-email/outgoing-email-log-item';\r\n\r\ninterface Response extends BackendResponse {\r\n  logItem: OutgoingEmailLogItem;\r\n}\r\n\r\nexport function useOutgoingEmailLogItemWithMime(id: number) {\r\n  return useQuery({\r\n    queryKey: ['logs/outgoing-email', id],\r\n    queryFn: () => fetchLogItem(id),\r\n  });\r\n}\r\n\r\nfunction fetchLogItem(id: number) {\r\n  return apiClient.get<Response>(`logs/outgoing-email/${id}`).then(r => r.data);\r\n}\r\n","import {Dialog} from '@common/ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {useOutgoingEmailLogItemWithMime} from '@common/admin/logging/outgoing-email/use-outgoing-email-log-item-with-mime';\r\nimport {ProgressCircle} from '@common/ui/progress/progress-circle';\r\nimport {downloadFileFromUrl} from '@common/uploads/utils/download-file-from-url';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\n\r\ninterface Props {\r\n  logItemId: number;\r\n}\r\nexport function OutgoingEmailLogEntryDialog({logItemId}: Props) {\r\n  const {data} = useOutgoingEmailLogItemWithMime(logItemId);\r\n  const {base_url} = useSettings();\r\n  return (\r\n    <Dialog size=\"fullscreen\">\r\n      <DialogHeader\r\n        showDivider\r\n        padding=\"px-24 py-10\"\r\n        actions={\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"xs\"\r\n            disabled={!data}\r\n            type=\"button\"\r\n            onClick={\r\n              data\r\n                ? () =>\r\n                    downloadFileFromUrl(\r\n                      `${base_url}/api/v1/logs/outgoing-email/${logItemId}/download`,\r\n                    )\r\n                : undefined\r\n            }\r\n          >\r\n            <Trans message=\"Download\" />\r\n          </Button>\r\n        }\r\n      >\r\n        <Trans message=\"Email preview\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        {data ? (\r\n          <iframe\r\n            srcDoc={data.logItem.parsed_message!.body.html}\r\n            className=\"h-max w-full border-none\"\r\n            onLoad={e => {\r\n              const iframe = e.target as HTMLIFrameElement;\r\n              iframe.style.height =\r\n                iframe.contentWindow!.document.body.scrollHeight + 'px';\r\n            }}\r\n          />\r\n        ) : (\r\n          <div className=\"flex min-h-200 items-center justify-center\">\r\n            <ProgressCircle isIndeterminate />\r\n          </div>\r\n        )}\r\n      </DialogBody>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {ColumnConfig} from '@common/datatable/column-config';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {NameWithAvatar} from '@common/datatable/column-templates/name-with-avatar';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport React, {ReactNode} from 'react';\r\nimport {useRerunScheduledCommand} from '@common/admin/logging/schedule/use-rerurun-scheduled-command';\r\nimport {OutgoingEmailLogItem} from '@common/admin/logging/outgoing-email/outgoing-email-log-item';\r\nimport {FormattedRelativeTime} from '@common/i18n/formatted-relative-time';\r\nimport {Chip, ChipProps} from '@common/ui/forms/input-field/chip-field/chip';\r\nimport {VisibilityIcon} from '@common/icons/material/Visibility';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {OutgoingEmailLogEntryDialog} from '@common/admin/logging/outgoing-email/outgoing-email-log-entry-dialog';\r\n\r\nexport const OutgoingEmailLogDatatableColumns: ColumnConfig<OutgoingEmailLogItem>[] =\r\n  [\r\n    {\r\n      key: 'message_id',\r\n      allowsSorting: true,\r\n      visibleInMode: 'all',\r\n      width: 'flex-3 min-w-200',\r\n      header: () => <Trans message=\"Subject\" />,\r\n      body: item => (\r\n        <NameWithAvatar label={item.subject} description={item.message_id} />\r\n      ),\r\n    },\r\n    {\r\n      key: 'status',\r\n      allowsSorting: true,\r\n      header: () => <Trans message=\"Status\" />,\r\n      body: item => {\r\n        switch (item.status) {\r\n          case 'sent':\r\n            return (\r\n              <StatusChip color=\"positive\">\r\n                <Trans message=\"Sent\" />\r\n              </StatusChip>\r\n            );\r\n          case 'not-sent':\r\n            return (\r\n              <StatusChip color={undefined}>\r\n                <Trans message=\"Not sent\" />\r\n              </StatusChip>\r\n            );\r\n          case 'error':\r\n            return (\r\n              <StatusChip color=\"danger\">\r\n                <Trans message=\"Error\" />\r\n              </StatusChip>\r\n            );\r\n        }\r\n      },\r\n    },\r\n    {\r\n      key: 'from',\r\n      allowsSorting: true,\r\n      header: () => <Trans message=\"From\" />,\r\n      body: item => item.from,\r\n    },\r\n    {\r\n      key: 'to',\r\n      allowsSorting: true,\r\n      header: () => <Trans message=\"To\" />,\r\n      body: item => item.to,\r\n    },\r\n    {\r\n      key: 'created_at',\r\n      allowsSorting: true,\r\n      header: () => <Trans message=\"Date\" />,\r\n      body: item => <FormattedRelativeTime date={item.created_at} />,\r\n    },\r\n    {\r\n      key: 'actions',\r\n      header: () => <Trans message=\"Actions\" />,\r\n      hideHeader: true,\r\n      align: 'end',\r\n      width: 'w-42 flex-shrink-0',\r\n      visibleInMode: 'all',\r\n      body: item => <PreviewEmailButton item={item} />,\r\n    },\r\n  ];\r\n\r\ninterface PreviewButtonProps {\r\n  item: OutgoingEmailLogItem;\r\n}\r\nfunction PreviewEmailButton({item}: PreviewButtonProps) {\r\n  const rerunCommand = useRerunScheduledCommand();\r\n  return (\r\n    <DialogTrigger type=\"modal\">\r\n      <Tooltip label={<Trans message=\"Preview\" />}>\r\n        <IconButton\r\n          size=\"md\"\r\n          className=\"text-muted\"\r\n          disabled={rerunCommand.isPending}\r\n          onClick={() => {\r\n            rerunCommand.mutate({id: item.id});\r\n          }}\r\n        >\r\n          <VisibilityIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <OutgoingEmailLogEntryDialog logItemId={item.id} />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\ninterface StatusChipProps {\r\n  color: ChipProps['color'];\r\n  children: ReactNode;\r\n}\r\nfunction StatusChip({color, children}: StatusChipProps) {\r\n  return (\r\n    <Chip color={color} size=\"xs\" className=\"w-max min-w-50 text-center\">\r\n      {children}\r\n    </Chip>\r\n  );\r\n}\r\n","import {\r\n  BackendFilter,\r\n  FilterControlType,\r\n  FilterOperator,\r\n} from '@common/datatable/filters/backend-filter';\r\nimport {message} from '@common/i18n/message';\r\nimport {createdAtFilter} from '@common/datatable/filters/timestamp-filters';\r\n\r\nexport const OutgoingEmailLogDatatableFilters: BackendFilter[] = [\r\n  {\r\n    key: 'status',\r\n    label: message('Status'),\r\n    description: message('Status of the outgoing email'),\r\n    defaultOperator: FilterOperator.eq,\r\n    control: {\r\n      type: FilterControlType.Select,\r\n      defaultValue: '01',\r\n      options: [\r\n        {\r\n          key: '01',\r\n          label: message('Not sent'),\r\n          value: 'no-sent',\r\n        },\r\n        {\r\n          key: '02',\r\n          label: message('Sent'),\r\n          value: 'sent',\r\n        },\r\n        {\r\n          key: '03',\r\n          label: message('Error'),\r\n          value: 'error',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  createdAtFilter({\r\n    description: message('Date email send was attempted'),\r\n  }),\r\n];\r\n","import {DataTablePage} from '@common/datatable/page/data-table-page';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {DataTableEmptyStateMessage} from '@common/datatable/page/data-table-emty-state-message';\r\nimport React from 'react';\r\nimport openedImage from '@common/admin/logging/outgoing-email/opened.svg';\r\nimport {DataTableAddItemButton} from '@common/datatable/data-table-add-item-button';\r\nimport {DownloadIcon} from '@common/icons/material/Download';\r\nimport {OutgoingEmailLogDatatableColumns} from '@common/admin/logging/outgoing-email/outgoing-email-log-datatable-columns';\r\nimport {OutgoingEmailLogDatatableFilters} from '@common/admin/logging/outgoing-email/outgoing-email-log-datatable-filters';\r\n\r\nexport function OutgoingEmailLogDatatable() {\r\n  return (\r\n    <DataTablePage\r\n      padding=\"pt-12 md:pt-24\"\r\n      endpoint=\"logs/outgoing-email\"\r\n      title={<Trans message=\"Outgoing email\" />}\r\n      columns={OutgoingEmailLogDatatableColumns}\r\n      filters={OutgoingEmailLogDatatableFilters}\r\n      actions={<Actions />}\r\n      enableSelection={false}\r\n      emptyStateMessage={\r\n        <DataTableEmptyStateMessage\r\n          image={openedImage}\r\n          title={<Trans message=\"No outgoing emails have been logged yet\" />}\r\n          filteringTitle={<Trans message=\"No matching emails\" />}\r\n        />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction Actions() {\r\n  return (\r\n    <DataTableAddItemButton\r\n      elementType=\"a\"\r\n      href=\"api/v1/logs/outgoing-email/download\"\r\n      download\r\n      icon={<DownloadIcon />}\r\n    >\r\n      <Trans message=\"Download log\" />\r\n    </DataTableAddItemButton>\r\n  );\r\n}\r\n","import {Navigate, RouteObject, useRoutes} from 'react-router-dom';\r\nimport {AdminLayout} from './admin-layout';\r\nimport {UserDatatable} from './users/user-datatable';\r\nimport {AppearanceLayout} from './appearance/appearance-layout';\r\nimport {MenuList} from './appearance/sections/menus/menu-list';\r\nimport {MenuEditor} from './appearance/sections/menus/menu-editor';\r\nimport {MenuItemEditor} from './appearance/sections/menus/menu-item-editor';\r\nimport {GeneralSection} from './appearance/sections/general-section';\r\nimport {ThemeList} from './appearance/sections/themes/theme-list';\r\nimport {SeoSection} from './appearance/sections/seo/seo-section';\r\nimport {CustomCodeSection} from './appearance/sections/code/custom-code-section';\r\nimport {CustomPageDatablePage} from './custom-pages/custom-page-datable-page';\r\nimport {SettingsLayout} from './settings/settings-layout';\r\nimport {GeneralSettings} from './settings/pages/general-settings';\r\nimport {ThemeEditor} from './appearance/sections/themes/theme-editor';\r\nimport {AppSettingsRoutes} from '@app/admin/settings/app-settings-routes';\r\nimport {SubscriptionSettings} from './settings/pages/subscription-settings';\r\nimport {LocalizationSettings} from './settings/pages/localization-settings';\r\nimport {AuthenticationSettings} from './settings/pages/authentication-settings';\r\nimport {UploadingSettings} from './settings/pages/uploading-settings/uploading-settings';\r\nimport {OutgoingEmailSettings} from './settings/pages/mail-settings/outgoing-email-settings';\r\nimport {CacheSettings} from './settings/pages/cache-settings/cache-settings';\r\nimport {LoggingSettings} from './settings/pages/logging-settings';\r\nimport {QueueSettings} from './settings/pages/queue-settings';\r\nimport {RecaptchaSettings} from './settings/pages/recaptcha-settings';\r\nimport {ReportsSettings} from './settings/pages/reports-settings';\r\nimport {UpdateUserPage} from './users/update-user-page';\r\nimport {CreateUserPage} from './users/create-user-page';\r\nimport {LocalizationIndex} from './translations/localization-index';\r\nimport {TranslationManagementPage} from './translations/translation-management-page';\r\nimport {AdsPage} from './ads/ads-page';\r\nimport React from 'react';\r\nimport {FullPageLoader} from '../ui/progress/full-page-loader';\r\nimport {SectionList} from './appearance/section-list';\r\nimport {RolesIndexPage} from './roles/roles-index-page';\r\nimport {EditRolePage} from './roles/crupdate-role-page/edit-role-page';\r\nimport {CreateRolePage} from './roles/crupdate-role-page/create-role-page';\r\nimport {TagIndexPage} from './tags/tag-index-page';\r\nimport {FileEntryIndexPage} from './file-entry/file-entry-index-page';\r\nimport {SubscriptionsIndexPage} from './subscriptions/subscriptions-index-page';\r\nimport {PlansIndexPage} from './plans/plans-index-page';\r\nimport {EditPlanPage} from './plans/crupdate-plan-page/edit-plan-page';\r\nimport {CreatePlanPage} from './plans/crupdate-plan-page/create-plan-page';\r\nimport {GdprSettings} from './settings/pages/gdpr-settings';\r\nimport {AuthRoute} from '../auth/guards/auth-route';\r\nimport {NotFoundPage} from '../ui/not-found-page/not-found-page';\r\nimport {AppAppearanceConfig} from '@app/admin/appearance/app-appearance-config';\r\nimport {AppAdminRoutes} from '@app/admin/app-admin-routes';\r\nimport {EditCustomPage} from '@common/admin/custom-pages/edit-custom-page';\r\nimport {CreateCustomPage} from '@common/admin/custom-pages/create-custom-page';\r\nimport {ThemeFontPanel} from '@common/admin/appearance/sections/themes/theme-font-panel';\r\nimport {ThemeRadiusPanel} from '@common/admin/appearance/sections/themes/theme-radius-panel';\r\nimport {LogsPage} from '@common/admin/logging/logs-page';\r\nimport {ScheduleLogDatatable} from '@common/admin/logging/schedule/schedule-log-datatable';\r\nimport {ErrorLogDatatable} from '@common/admin/logging/error/error-log-datatable';\r\nimport {OutgoingEmailLogDatatable} from '@common/admin/logging/outgoing-email/outgoing-email-log-datatable';\r\n\r\nconst ReportsPage = React.lazy(() => import('./analytics/admin-report-page'));\r\n\r\nconst AdminRouteConfig: RouteObject[] = [\r\n  {\r\n    path: 'appearance',\r\n    element: (\r\n      <AuthRoute permission=\"appearance.update\">\r\n        <AppearanceLayout />\r\n      </AuthRoute>\r\n    ),\r\n    children: [\r\n      {index: true, element: <SectionList />},\r\n      {path: 'general', element: <GeneralSection />},\r\n      {path: 'seo-settings', element: <SeoSection />},\r\n      {path: 'custom-code', element: <CustomCodeSection />},\r\n      {path: 'themes', element: <ThemeList />},\r\n      {path: 'themes/:themeIndex', element: <ThemeEditor />},\r\n      {path: 'themes/:themeIndex/font', element: <ThemeFontPanel />},\r\n      {path: 'themes/:themeIndex/radius', element: <ThemeRadiusPanel />},\r\n      {path: 'menus', element: <MenuList />},\r\n      {path: 'menus/:menuIndex', element: <MenuEditor />},\r\n      {\r\n        path: 'menus/:menuIndex/items/:menuItemIndex',\r\n        element: <MenuItemEditor />,\r\n      },\r\n      ...Object.values(AppAppearanceConfig.sections).flatMap(\r\n        s => s.routes || [],\r\n      ),\r\n    ],\r\n  },\r\n\r\n  {\r\n    path: '/',\r\n    element: <AdminLayout />,\r\n    children: [\r\n      ...AppAdminRoutes,\r\n      // REPORT PAGE\r\n      {\r\n        path: '/',\r\n        element: (\r\n          <React.Suspense fallback={<FullPageLoader screen />}>\r\n            <ReportsPage />\r\n          </React.Suspense>\r\n        ),\r\n      },\r\n      // USERS\r\n      {\r\n        path: 'users',\r\n        element: (\r\n          <AuthRoute permission=\"users.update\">\r\n            <UserDatatable />\r\n          </AuthRoute>\r\n        ),\r\n      },\r\n      {\r\n        path: 'users/new',\r\n        element: (\r\n          <AuthRoute permission=\"users.update\">\r\n            <CreateUserPage />\r\n          </AuthRoute>\r\n        ),\r\n      },\r\n      {\r\n        path: 'users/:userId/edit',\r\n        element: (\r\n          <AuthRoute permission=\"users.update\">\r\n            <UpdateUserPage />\r\n          </AuthRoute>\r\n        ),\r\n      },\r\n      // ROLES\r\n      {\r\n        path: 'roles',\r\n        element: (\r\n          <AuthRoute permission=\"roles.update\">\r\n            <RolesIndexPage />\r\n          </AuthRoute>\r\n        ),\r\n      },\r\n      {\r\n        path: 'roles/new',\r\n        element: (\r\n          <AuthRoute permission=\"roles.update\">\r\n            <CreateRolePage />\r\n          </AuthRoute>\r\n        ),\r\n      },\r\n      {\r\n        path: 'roles/:roleId/edit',\r\n        element: (\r\n          <AuthRoute permission=\"roles.update\">\r\n            <EditRolePage />\r\n          </AuthRoute>\r\n        ),\r\n      },\r\n      // SUBSCRIPTIONS and PLANS\r\n      {\r\n        path: 'subscriptions',\r\n        element: (\r\n          <AuthRoute permission=\"subscriptions.update\">\r\n            <SubscriptionsIndexPage />\r\n          </AuthRoute>\r\n        ),\r\n      },\r\n      {\r\n        path: 'plans',\r\n        element: (\r\n          <AuthRoute permission=\"plans.update\">\r\n            <PlansIndexPage />\r\n          </AuthRoute>\r\n        ),\r\n      },\r\n      {\r\n        path: 'plans/new',\r\n        element: (\r\n          <AuthRoute permission=\"plans.update\">\r\n            <CreatePlanPage />\r\n          </AuthRoute>\r\n        ),\r\n      },\r\n      {\r\n        path: 'plans/:productId/edit',\r\n        element: (\r\n          <AuthRoute permission=\"plans.update\">\r\n            <EditPlanPage />\r\n          </AuthRoute>\r\n        ),\r\n      },\r\n      // CUSTOM PAGES\r\n      {\r\n        path: 'custom-pages',\r\n        element: (\r\n          <AuthRoute permission=\"custom_pages.update\">\r\n            <CustomPageDatablePage />\r\n          </AuthRoute>\r\n        ),\r\n      },\r\n      {\r\n        path: 'custom-pages/new',\r\n        element: (\r\n          <AuthRoute permission=\"custom_pages.update\">\r\n            <CreateCustomPage />\r\n          </AuthRoute>\r\n        ),\r\n      },\r\n      {\r\n        path: 'custom-pages/:pageId/edit',\r\n        element: (\r\n          <AuthRoute permission=\"custom_pages.update\">\r\n            <EditCustomPage />\r\n          </AuthRoute>\r\n        ),\r\n      },\r\n      // TAGS\r\n      {\r\n        path: 'tags',\r\n        element: (\r\n          <AuthRoute permission=\"tags.update\">\r\n            <TagIndexPage />\r\n          </AuthRoute>\r\n        ),\r\n      },\r\n      // LOCALIZATIONS\r\n      {\r\n        path: 'localizations',\r\n        element: (\r\n          <AuthRoute permission=\"localizations.update\">\r\n            <LocalizationIndex />\r\n          </AuthRoute>\r\n        ),\r\n      },\r\n      {\r\n        path: 'localizations/:localeId/translate',\r\n        element: <TranslationManagementPage />,\r\n      },\r\n      // FILE ENTRIES\r\n      {\r\n        path: 'files',\r\n        element: (\r\n          <AuthRoute permission=\"files.update\">\r\n            <FileEntryIndexPage />\r\n          </AuthRoute>\r\n        ),\r\n      },\r\n      // ADS\r\n      {\r\n        path: 'ads',\r\n        element: (\r\n          <AuthRoute permission=\"settings.update\">\r\n            <AdsPage />\r\n          </AuthRoute>\r\n        ),\r\n      },\r\n      // SETTINGS\r\n      {\r\n        path: 'settings',\r\n        element: (\r\n          <AuthRoute permission=\"settings.update\">\r\n            <SettingsLayout />\r\n          </AuthRoute>\r\n        ),\r\n        children: [\r\n          {index: true, element: <Navigate to=\"general\" replace />},\r\n          {path: 'general', element: <GeneralSettings />},\r\n          {path: 'subscriptions', element: <SubscriptionSettings />},\r\n          {path: 'localization', element: <LocalizationSettings />},\r\n          {path: 'authentication', element: <AuthenticationSettings />},\r\n          {path: 'uploading', element: <UploadingSettings />},\r\n          {path: 'outgoing-email', element: <OutgoingEmailSettings />},\r\n          {path: 'cache', element: <CacheSettings />},\r\n          {path: 'analytics', element: <ReportsSettings />},\r\n          {path: 'logging', element: <LoggingSettings />},\r\n          {path: 'queue', element: <QueueSettings />},\r\n          {path: 'recaptcha', element: <RecaptchaSettings />},\r\n          {path: 'gdpr', element: <GdprSettings />},\r\n          ...AppSettingsRoutes,\r\n        ],\r\n      },\r\n      // LOGS\r\n      {\r\n        path: 'logs',\r\n        element: (\r\n          <AuthRoute permission=\"logs.view\">\r\n            <LogsPage />\r\n          </AuthRoute>\r\n        ),\r\n        children: [\r\n          {index: true, element: <ScheduleLogDatatable />},\r\n          {path: 'schedule', element: <ScheduleLogDatatable />},\r\n          {path: 'error', element: <ErrorLogDatatable />},\r\n          {path: 'outgoing-email', element: <OutgoingEmailLogDatatable />},\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {path: '*', element: <NotFoundPage />},\r\n];\r\n\r\nexport default function AdminRoutes() {\r\n  return useRoutes(AdminRouteConfig);\r\n}\r\n"],"names":["endpoint","response","_a","Select","Form","query","FilterList","deleteSelectedRows","exportCsv","banUser","Actions","id","Fragment","ColorPickerTrigger","PermissionSelector","Option","FeatureForm","document","window","Header","sortSession","m","useNavigate","queryClient","updateTags","MenuItem","uploadCors","clearCache","updateUser","createUser","createLocalization","columnConfig","uploadFile","Endpoint","PageContent","updateRole","createRole","createNewTag","updateTag","updateSubscription","updateProduct","syncPlans","value","createProduct","ArticleBodyEditor","createPage","filters","pages","label","rerunCommand","_b"],"mappings":"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"}