{"version":3,"file":"drive-routes-3c22d40d.js","sources":["../../../node_modules/@tanstack/query-core/build/modern/infiniteQueryObserver.js","../../../node_modules/@tanstack/react-query/build/modern/useInfiniteQuery.js","../../../resources/client/drive/drive-query-keys.ts","../../../resources/client/drive/shareable-link/shareable-link-page/link-page-store.ts","../../../resources/client/drive/shareable-link/queries/use-shareable-link-page.ts","../../../resources/client/drive/shareable-link/shareable-link-page/queries/check-link-password.ts","../../../resources/client/drive/shareable-link/shareable-link-page/queries/import-into-own-drive.ts","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-page-action-buttons.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-navbar.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/password-page.tsx","../../../resources/client/drive/file-view/file-grid/base-file-grid-item.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-grid.tsx","../../../resources/client/drive/drive-store.ts","../../../resources/client/drive/shareable-link/queries/create-shareable-link.ts","../../../resources/client/drive/files/queries/use-add-star-to-entries.ts","../../../resources/client/drive/files/queries/use-remove-star-from-entries.ts","../../../resources/client/drive/files/queries/use-duplicate-entries.ts","../../../resources/client/drive/drive-page/add-files.svg","../../../resources/client/drive/drive-page/time-management.svg","../../../resources/client/drive/drive-page/file-searching.svg","../../../resources/client/drive/drive-page/throw-away.svg","../../../resources/client/drive/drive-page/loving-it.svg","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/share.svg","../../../resources/client/drive/drive-page/drive-page.tsx","../../../resources/client/drive/files/queries/use-delete-entries.ts","../../../resources/client/drive/share-dialog/queries/use-unshare-entries.ts","../../../resources/client/drive/files/queries/use-restore-entries.ts","../../../resources/client/drive/entry-actions/use-entry-actions.ts","../../../resources/client/drive/layout/sidebar/storage-summary/storage-summary.ts","../../../resources/client/drive/uploading/use-drive-upload-queue.ts","../../../resources/client/drive/entry-actions/use-drive-page-actions.ts","../../../resources/client/drive/entry-actions/entry-action-menu-trigger.tsx","../../../resources/client/drive/file-view/file-table/file-table-columns.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-table.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/use-navigate-to-subfolder.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-file-view.tsx","../../../common/resources/client/ui/layout/dashboard-content-header.tsx","../../../resources/client/drive/files/queries/use-folder-path.ts","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-breadcrumb.tsx","../../../resources/client/drive/layout/sorting/available-sorts.ts","../../../resources/client/drive/layout/sorting/entries-sort-button.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview-header.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/folder-preview/folder-preview.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-page-file-preview.tsx","../../../resources/client/drive/shareable-link/shareable-link-page/shareable-link-page.tsx","../../../common/resources/client/ui/progress/meter.tsx","../../../resources/client/drive/layout/sidebar/storage-summary/storage-meter.tsx","../../../common/resources/client/workspace/requests/create-workspace.ts","../../../common/resources/client/workspace/new-workspace-dialog.tsx","../../../common/resources/client/workspace/requests/workspace-with-members.ts","../../../common/resources/client/workspace/requests/invite-members.ts","../../../common/resources/client/workspace/requests/resend-invite.ts","../../../common/resources/client/utils/string/is-email.ts","../../../common/resources/client/workspace/requests/change-role.ts","../../../common/resources/client/workspace/requests/remove-member.ts","../../../common/resources/client/workspace/leave-workspace-confirmation.tsx","../../../common/resources/client/workspace/workspace-members-dialog.tsx","../../../common/resources/client/workspace/requests/update-workspace.ts","../../../common/resources/client/workspace/rename-workspace-dialog.tsx","../../../common/resources/client/workspace/requests/delete-workspace.ts","../../../common/resources/client/billing/upgrade/policy-fail-message.tsx","../../../common/resources/client/workspace/workspace-selector.tsx","../../../resources/client/drive/menu-positions.ts","../../../node_modules/performant-array-to-tree/build/arrayToTree.min.js","../../../resources/client/drive/files/queries/use-folders.ts","../../../resources/client/drive/files/queries/use-move-entries.ts","../../../resources/client/drive/files/utils/can-move-entries-into.ts","../../../resources/client/drive/files/use-folder-drop-action.ts","../../../resources/client/drive/layout/sidebar/folder-tree-drag-id.ts","../../../resources/client/drive/layout/sidebar/use-sidebar-tree-drop-target.ts","../../../common/resources/client/ui/tree/tree-context.tsx","../../../common/resources/client/ui/tree/render-tree.ts","../../../common/resources/client/ui/tree/tree-label.tsx","../../../common/resources/client/ui/tree/tree-item.tsx","../../../common/resources/client/ui/tree/tree.tsx","../../../resources/client/drive/layout/sidebar/folder-tree.tsx","../../../resources/client/drive/layout/sidebar/sidebar-menu.tsx","../../../resources/client/drive/layout/create-new-button.tsx","../../../resources/client/drive/layout/sidebar/sidebar.tsx","../../../resources/client/drive/files/queries/use-paginated-entries.ts","../../../resources/client/drive/search/drive-search-filters.ts","../../../resources/client/drive/search/search-filter-list.tsx","../../../common/resources/client/ui/interactions/utils/restrict-resizable-within-boundary.ts","../../../common/resources/client/ui/interactions/dnd/mouse-selection/use-mouse-selectable.ts","../../../common/resources/client/ui/interactions/utils/rects-intersect.ts","../../../common/resources/client/ui/interactions/dnd/mouse-selection/use-mouse-selection-box.ts","../../../resources/client/drive/files/queries/use-entries.ts","../../../resources/client/drive/files/use-selected-entries.ts","../../../resources/client/drive/entry-actions/entry-action-list.tsx","../../../resources/client/drive/files/drive-context-menu.tsx","../../../common/resources/client/utils/hooks/is-touch-device.ts","../../../resources/client/drive/file-view/use-file-view-dnd.ts","../../../resources/client/drive/file-view/file-table/file-table-row.tsx","../../../resources/client/drive/file-view/use-view-item-action-handler.ts","../../../resources/client/drive/file-view/file-table/file-table.tsx","../../../resources/client/drive/file-view/file-grid/file-grid-item.tsx","../../../resources/client/drive/file-view/file-grid/file-grid.tsx","../../../resources/client/drive/layout/sorting/drive-sort-button.tsx","../../../resources/client/drive/page-breadcrumbs.tsx","../../../common/resources/client/ui/infinite-scroll/infinite-scroll-sentinel.tsx","../../../resources/client/drive/drop-target-mask.tsx","../../../resources/client/drive/file-view/file-view.tsx","../../../resources/client/drive/uploading/upload-queue-item.tsx","../../../resources/client/drive/uploading/upload-queue.tsx","../../../resources/client/drive/details-sidebar/detailed-examination.svg","../../../resources/client/drive/details-sidebar/details-sidebar-header.tsx","../../../resources/client/drive/details-sidebar/details-sidebar-section-header.tsx","../../../resources/client/drive/details-sidebar/requests/use-sync-entry-tags.ts","../../../resources/client/drive/details-sidebar/requests/use-file-entry-tags.ts","../../../resources/client/drive/details-sidebar/details-sidebar-tags.tsx","../../../resources/client/drive/details-sidebar/details-sidebar-properties.tsx","../../../resources/client/drive/details-sidebar/details-sidebar.tsx","../../../resources/client/drive/files/queries/use-rename-entry.ts","../../../resources/client/drive/files/dialogs/rename-entry-dialog.tsx","../../../resources/client/drive/files/queries/create-folder.ts","../../../resources/client/drive/files/dialogs/new-folder-dialog.tsx","../../../resources/client/drive/files/dialogs/entry-preview-dialog.tsx","../../../resources/client/drive/share-dialog/queries/use-share-entry.ts","../../../resources/client/drive/files/drive-entry.ts","../../../resources/client/drive/share-dialog/permission-selector.tsx","../../../resources/client/drive/share-dialog/queries/use-change-permission.ts","../../../common/resources/client/ui/images/user-avatar.tsx","../../../resources/client/drive/share-dialog/member-list.tsx","../../../resources/client/drive/share-dialog/share-panel.tsx","../../../resources/client/drive/shareable-link/queries/use-entry-shareable-link.ts","../../../resources/client/drive/shareable-link/queries/use-delete-shareable-link.ts","../../../common/resources/client/utils/string/random-string.ts","../../../resources/client/drive/share-dialog/link-panel/shareable-link-panel.tsx","../../../resources/client/drive/shareable-link/queries/use-update-shareable-link.ts","../../../resources/client/drive/share-dialog/link-panel/link-settings-dialog.tsx","../../../resources/client/drive/share-dialog/share-dialog.tsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog-search.tsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog-breadcrumbs.tsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/my-files.svg","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog-folder-list.tsx","../../../resources/client/drive/files/dialogs/move-entries-dialog/move-entries-dialog.tsx","../../../resources/client/drive/files/dialogs/delete-entries-forever-dialog.tsx","../../../resources/client/drive/files/dialogs/block-trash-folder-view-dialog.tsx","../../../resources/client/drive/files/dialogs/drive-dialogs-container.tsx","../../../resources/client/drive/search/navbar-search.tsx","../../../common/resources/client/ui/interactions/dnd/use-drag-monitor.ts","../../../resources/client/drive/file-view/entry-drag-preview.tsx","../../../resources/client/drive/layout/drive-content-header.tsx","../../../resources/client/drive/layout/drive-layout.tsx","../../../resources/client/drive/drive-routes.tsx"],"sourcesContent":["// src/infiniteQueryObserver.ts\nimport { QueryObserver } from \"./queryObserver.js\";\nimport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n} from \"./infiniteQueryBehavior.js\";\nvar InfiniteQueryObserver = class extends QueryObserver {\n  constructor(client, options) {\n    super(client, options);\n  }\n  bindMethods() {\n    super.bindMethods();\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  }\n  setOptions(options, notifyOptions) {\n    super.setOptions(\n      {\n        ...options,\n        behavior: infiniteQueryBehavior()\n      },\n      notifyOptions\n    );\n  }\n  getOptimisticResult(options) {\n    options.behavior = infiniteQueryBehavior();\n    return super.getOptimisticResult(options);\n  }\n  fetchNextPage(options) {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: \"forward\" }\n      }\n    });\n  }\n  fetchPreviousPage(options) {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: \"backward\" }\n      }\n    });\n  }\n  createResult(query, options) {\n    const { state } = query;\n    const parentResult = super.createResult(query, options);\n    const { isFetching, isRefetching, isError, isRefetchError } = parentResult;\n    const fetchDirection = state.fetchMeta?.fetchMore?.direction;\n    const isFetchNextPageError = isError && fetchDirection === \"forward\";\n    const isFetchingNextPage = isFetching && fetchDirection === \"forward\";\n    const isFetchPreviousPageError = isError && fetchDirection === \"backward\";\n    const isFetchingPreviousPage = isFetching && fetchDirection === \"backward\";\n    const result = {\n      ...parentResult,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, state.data),\n      hasPreviousPage: hasPreviousPage(options, state.data),\n      isFetchNextPageError,\n      isFetchingNextPage,\n      isFetchPreviousPageError,\n      isFetchingPreviousPage,\n      isRefetchError: isRefetchError && !isFetchNextPageError && !isFetchPreviousPageError,\n      isRefetching: isRefetching && !isFetchingNextPage && !isFetchingPreviousPage\n    };\n    return result;\n  }\n};\nexport {\n  InfiniteQueryObserver\n};\n//# sourceMappingURL=infiniteQueryObserver.js.map","\"use client\";\n\n// src/useInfiniteQuery.ts\nimport { InfiniteQueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nfunction useInfiniteQuery(options, queryClient) {\n  return useBaseQuery(\n    options,\n    InfiniteQueryObserver,\n    queryClient\n  );\n}\nexport {\n  useInfiniteQuery\n};\n//# sourceMappingURL=useInfiniteQuery.js.map","import type {DriveApiIndexParams} from './files/queries/use-paginated-entries';\r\nimport type {UserFoldersApiParams} from './files/queries/use-folders';\r\nimport {queryClient} from '@common/http/query-client';\r\nimport {Key} from 'react';\r\n\r\nexport const DriveQueryKeys = {\r\n  fetchEntries: (params?: DriveApiIndexParams) => {\r\n    const key: ('drive-entries' | DriveApiIndexParams)[] = ['drive-entries'];\r\n    if (params) key.push(params);\r\n    return key;\r\n  },\r\n  fetchUserFolders(params?: UserFoldersApiParams) {\r\n    const key: (string | UserFoldersApiParams)[] = ['user-folders'];\r\n    if (params) {\r\n      key.push(params);\r\n    }\r\n    return key;\r\n  },\r\n  fetchShareableLink: (params?: {hash?: string; sort?: string}) => {\r\n    const key: (string | object)[] = ['shareable-link'];\r\n    if (params) {\r\n      key.push(params);\r\n    }\r\n    return key;\r\n  },\r\n  fetchFolderPath(\r\n    hash?: string,\r\n    params?: Record<string, string | number | null>,\r\n  ) {\r\n    const key: (string | any)[] = ['folder-path'];\r\n    if (hash) {\r\n      key.push(hash);\r\n    }\r\n    if (params) {\r\n      key.push(params);\r\n    }\r\n    return key;\r\n  },\r\n  fetchEntryShareableLink: (entryId: number) => {\r\n    return ['file-entries', entryId, 'shareable-link'];\r\n  },\r\n  fetchFileEntry: (id?: number) => {\r\n    const key: Key[] = ['drive/file-entries/model'];\r\n    if (id) key.push(id);\r\n    return key;\r\n  },\r\n  fetchStorageSummary: ['storage-summary'],\r\n};\r\n\r\nexport function invalidateEntryQueries() {\r\n  return Promise.all([\r\n    queryClient.invalidateQueries({queryKey: DriveQueryKeys.fetchEntries()}),\r\n    queryClient.invalidateQueries({queryKey: DriveQueryKeys.fetchFolderPath()}),\r\n    queryClient.invalidateQueries({\r\n      queryKey: DriveQueryKeys.fetchUserFolders(),\r\n    }),\r\n    // fetching model for single file entry in \"useFileEntry\"\r\n    queryClient.invalidateQueries({queryKey: DriveQueryKeys.fetchFileEntry()}),\r\n  ]);\r\n}\r\n","import {create} from 'zustand';\r\nimport {immer} from 'zustand/middleware/immer';\r\nimport {DriveSortDescriptor} from '../../drive-store';\r\nimport {\r\n  getFromLocalStorage,\r\n  setInLocalStorage,\r\n} from '@common/utils/hooks/local-storage';\r\n\r\ninterface LinkPageState {\r\n  password: string | null;\r\n  setPassword: (value: string) => void;\r\n  isPasswordProtected: boolean;\r\n  setIsPasswordProtected: (value: boolean) => void;\r\n  activeSort: DriveSortDescriptor;\r\n  setActiveSort: (value: DriveSortDescriptor) => void;\r\n  viewMode: 'grid' | 'list';\r\n  setViewMode: (mode: 'grid' | 'list') => void;\r\n}\r\n\r\nexport const useLinkPageStore = create<LinkPageState>()(\r\n  immer(set => ({\r\n    password: null,\r\n    viewMode: getFromLocalStorage<'list' | 'grid'>('drive.viewMode'),\r\n    activeSort: {\r\n      orderBy: 'updated_at',\r\n      orderDir: 'desc',\r\n    },\r\n    setPassword: value => {\r\n      set(state => {\r\n        state.password = value;\r\n      });\r\n    },\r\n    isPasswordProtected: false,\r\n    setIsPasswordProtected: value => {\r\n      set(state => {\r\n        state.isPasswordProtected = value;\r\n      });\r\n    },\r\n\r\n    setViewMode: mode => {\r\n      set(state => {\r\n        state.viewMode = mode;\r\n        setInLocalStorage('drive.viewMode', mode);\r\n      });\r\n    },\r\n    setActiveSort: value => {\r\n      set(state => {\r\n        state.activeSort = value;\r\n      });\r\n    },\r\n  }))\r\n);\r\n\r\nexport function linkPageState() {\r\n  return useLinkPageStore.getState();\r\n}\r\n","import {keepPreviousData, useInfiniteQuery} from '@tanstack/react-query';\r\nimport {useParams} from 'react-router-dom';\r\nimport type {FetchShareableLinkResponse} from './use-entry-shareable-link';\r\nimport type {DriveEntry} from '../../files/drive-entry';\r\nimport {DriveQueryKeys} from '../../drive-query-keys';\r\nimport {\r\n  linkPageState,\r\n  useLinkPageStore,\r\n} from '../shareable-link-page/link-page-store';\r\nimport {LengthAwarePaginationResponse} from '@common/http/backend-response/pagination-response';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\r\n\r\nexport interface FetchShareableLinkPageResponse\r\n  extends FetchShareableLinkResponse {\r\n  folderChildren: LengthAwarePaginationResponse<DriveEntry>;\r\n  passwordInvalid: boolean;\r\n}\r\n\r\nexport function useShareableLinkPage() {\r\n  const {hash} = useParams();\r\n  const {orderBy, orderDir} = useLinkPageStore(s => s.activeSort);\r\n  const order = `${orderBy}:${orderDir}`;\r\n  const isPasswordProtected = useLinkPageStore(s => s.isPasswordProtected);\r\n  const password = useLinkPageStore(s => s.password);\r\n\r\n  const query = useInfiniteQuery({\r\n    queryKey: DriveQueryKeys.fetchShareableLink({hash, sort: order}),\r\n    queryFn: async ({pageParam = 1}) => {\r\n      const response = await fetchLinkByHash({\r\n        hash: hash!,\r\n        page: pageParam,\r\n        order,\r\n        password,\r\n      });\r\n      if (response.passwordInvalid) {\r\n        linkPageState().setIsPasswordProtected(true);\r\n      }\r\n      return response;\r\n    },\r\n    initialData: () => {\r\n      const data = getBootstrapData().loaders?.shareableLinkPage;\r\n      if (data && data.link?.hash === hash) {\r\n        if (data.passwordInvalid) {\r\n          linkPageState().setIsPasswordProtected(true);\r\n        }\r\n        return {\r\n          pageParams: [undefined, 1],\r\n          pages: [data],\r\n        };\r\n      }\r\n    },\r\n    initialPageParam: 1,\r\n    getNextPageParam: lastResponse => {\r\n      if (!lastResponse.folderChildren) return undefined;\r\n      const currentPage = lastResponse.folderChildren.current_page;\r\n      const lastPage = lastResponse.folderChildren.last_page;\r\n      if (currentPage >= lastPage) {\r\n        return undefined;\r\n      }\r\n      return currentPage + 1;\r\n    },\r\n    // disable query if link is password protected and correct\r\n    // password was not entered yet, to prevent unnecessary requests\r\n    enabled: (!!hash && !isPasswordProtected) || password != null,\r\n    placeholderData: keepPreviousData,\r\n  });\r\n\r\n  return {\r\n    ...query,\r\n    link: query.data?.pages[0].link,\r\n    entries: query.data?.pages.flatMap(p => p.folderChildren?.data),\r\n  };\r\n}\r\n\r\ninterface FetchLinkByHashParams {\r\n  hash: string;\r\n  page?: number;\r\n  order?: string;\r\n  password?: string | null;\r\n}\r\nfunction fetchLinkByHash({\r\n  hash,\r\n  page = 1,\r\n  order,\r\n  password,\r\n}: FetchLinkByHashParams): Promise<FetchShareableLinkPageResponse> {\r\n  return apiClient\r\n    .get(`shareable-links/${hash}`, {\r\n      params: {loader: 'shareableLinkPage', page, order, password},\r\n    })\r\n    .then(response => response.data);\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {linkPageState} from '../link-page-store';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\nimport {message} from '@common/i18n/message';\r\n\r\ninterface Response extends BackendResponse {\r\n  matches: boolean;\r\n}\r\n\r\ninterface Props {\r\n  password: string;\r\n  linkHash: string;\r\n}\r\n\r\nfunction checkLinkPassword({password, linkHash}: Props): Promise<Response> {\r\n  return apiClient\r\n    .post(`shareable-links/${linkHash}/check-password`, {password})\r\n    .then(r => r.data);\r\n}\r\n\r\nexport function useCheckLinkPassword() {\r\n  return useMutation({\r\n    mutationFn: (props: Props) => checkLinkPassword(props),\r\n    onSuccess: (response, props) => {\r\n      if (response.matches) {\r\n        linkPageState().setPassword(props.password);\r\n      }\r\n    },\r\n    onError: err => showHttpErrorToast(err, message('Could not create link')),\r\n  });\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {DriveEntryUser} from '../../../files/drive-entry';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {useLinkPageStore} from '../link-page-store';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {DriveQueryKeys} from '../../../drive-query-keys';\r\nimport {message} from '@common/i18n/message';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {\r\n  users: DriveEntryUser[];\r\n}\r\n\r\ninterface Props {\r\n  password: string | null;\r\n  linkId: number;\r\n}\r\n\r\nfunction importIntoOwnDrive({linkId, password}: Props): Promise<Response> {\r\n  return apiClient\r\n    .post(`shareable-links/${linkId}/import`, {password})\r\n    .then(r => r.data);\r\n}\r\n\r\nexport function useImportIntoOwnDrive() {\r\n  const password = useLinkPageStore(s => s.password);\r\n  return useMutation({\r\n    mutationFn: (props: Omit<Props, 'password'>) =>\r\n      importIntoOwnDrive({...props, password}),\r\n    onSuccess: async () => {\r\n      await queryClient.invalidateQueries({\r\n        queryKey: DriveQueryKeys.fetchShareableLink(),\r\n      });\r\n      toast(message('Item imported into your drive'));\r\n    },\r\n    onError: err => showHttpErrorToast(err, message('Could not create link')),\r\n  });\r\n}\r\n","import {useShareableLinkPage} from '../queries/use-shareable-link-page';\r\nimport {useAuth} from '@common/auth/use-auth';\r\nimport {useFileEntryUrls} from '@common/uploads/hooks/file-entry-urls';\r\nimport {useImportIntoOwnDrive} from './queries/import-into-own-drive';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {FileDownloadIcon} from '@common/icons/material/FileDownload';\r\nimport {downloadFileFromUrl} from '@common/uploads/utils/download-file-from-url';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  MenuTrigger,\r\n} from '@common/ui/navigation/menu/menu-trigger';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {KeyboardArrowDownIcon} from '@common/icons/material/KeyboardArrowDown';\r\nimport {ImportExportIcon} from '@common/icons/material/ImportExport';\r\nimport React, {Fragment} from 'react';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\n\r\nexport function ShareableLinkPageActionButtons() {\r\n  const {link} = useShareableLinkPage();\r\n  const {user, isLoggedIn} = useAuth();\r\n  const {downloadUrl} = useFileEntryUrls(link?.entry);\r\n  const importIntoOwnDrive = useImportIntoOwnDrive();\r\n  const alreadyImported = link?.entry?.users!.find(u => u.id === user?.id);\r\n\r\n  if (!link?.entry) return null;\r\n\r\n  return (\r\n    <div>\r\n      {link.allow_download && <DownloadButton downloadUrl={downloadUrl} />}\r\n      {!alreadyImported && isLoggedIn && link.allow_edit && (\r\n        <MenuTrigger\r\n          onItemSelected={key => {\r\n            if (key === 'import') {\r\n              importIntoOwnDrive.mutate({linkId: link.id});\r\n            } else if (key === 'download') {\r\n              if (downloadUrl) {\r\n                downloadFileFromUrl(downloadUrl);\r\n              }\r\n            }\r\n          }}\r\n        >\r\n          <IconButton className=\"ml-6\" disabled={importIntoOwnDrive.isPending}>\r\n            <KeyboardArrowDownIcon />\r\n          </IconButton>\r\n          <Menu>\r\n            <MenuItem value=\"download\" startIcon={<FileDownloadIcon />}>\r\n              <Trans message=\"Download\" />\r\n            </MenuItem>\r\n            <MenuItem value=\"import\" startIcon={<ImportExportIcon />}>\r\n              <Trans message=\"Save a copy to your own drive\" />\r\n            </MenuItem>\r\n          </Menu>\r\n        </MenuTrigger>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface DownloadButtonProps {\r\n  downloadUrl: string | undefined;\r\n}\r\nfunction DownloadButton({downloadUrl}: DownloadButtonProps) {\r\n  return (\r\n    <Fragment>\r\n      <Tooltip label={<Trans message=\"Download\" />}>\r\n        <IconButton\r\n          className=\"md:hidden\"\r\n          onClick={() => {\r\n            if (downloadUrl) {\r\n              downloadFileFromUrl(downloadUrl);\r\n            }\r\n          }}\r\n        >\r\n          <FileDownloadIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Button\r\n        className=\"max-md:hidden\"\r\n        size=\"sm\"\r\n        variant=\"flat\"\r\n        color=\"chip\"\r\n        startIcon={<FileDownloadIcon />}\r\n        onClick={() => {\r\n          if (downloadUrl) {\r\n            downloadFileFromUrl(downloadUrl);\r\n          }\r\n        }}\r\n      >\r\n        <Trans message=\"Download\" />\r\n      </Button>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {FileTypeIcon} from '@common/uploads/file-type-icon/file-type-icon';\r\nimport {Navbar} from '@common/ui/navigation/navbar/navbar';\r\nimport {useShareableLinkPage} from '../queries/use-shareable-link-page';\r\nimport {ShareableLinkPageActionButtons} from './shareable-link-page-action-buttons';\r\nimport {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\r\n\r\nexport function ShareableLinkNavbar() {\r\n  const {link} = useShareableLinkPage();\r\n  const isMobile = useIsMobileMediaQuery();\r\n  return (\r\n    <Navbar\r\n      size=\"md\"\r\n      color=\"bg\"\r\n      className=\"flex-shrink-0\"\r\n      rightChildren={link?.entry && <ShareableLinkPageActionButtons />}\r\n      menuPosition=\"shareable-link-page\"\r\n      hideLogo={isMobile}\r\n    >\r\n      {link?.entry && link.entry.type !== 'folder' && (\r\n        <div className=\"fex-auto flex min-w-0 items-center gap-10\">\r\n          <FileTypeIcon className=\"flex-shrink-0\" type={link.entry.type} />\r\n          <div className=\"flex-auto overflow-hidden overflow-ellipsis whitespace-nowrap font-medium\">\r\n            {link.entry.name}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Navbar>\r\n  );\r\n}\r\n","import {useState} from 'react';\r\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\r\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {useCheckLinkPassword} from './queries/check-link-password';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {ShareableLinkNavbar} from './shareable-link-navbar';\r\nimport {useParams} from 'react-router-dom';\r\nimport secureFilesSvg from '@common/auth/ui/account-settings/access-token-panel/secure-files.svg';\r\n\r\nexport function PasswordPage() {\r\n  const {trans} = useTrans();\r\n  const {hash} = useParams();\r\n  const fieldLabel = trans({message: 'Password'});\r\n  const [password, setPassword] = useState<string>('');\r\n  const checkPassword = useCheckLinkPassword();\r\n  const linkHash = hash ? hash.split(':')[0] : null;\r\n\r\n  const passwordIsInvalid = checkPassword.data && !checkPassword.data.matches;\r\n\r\n  return (\r\n    <div className=\"flex h-screen flex-col bg-alt\">\r\n      <ShareableLinkNavbar />\r\n      <div className=\"mx-auto my-80 px-10 md:px-20\">\r\n        <div className=\"flex max-w-[560px] flex-col items-center gap-40 rounded border bg p-24 md:flex-row md:gap-14\">\r\n          <div className=\"h-132 w-[165px]\">\r\n            <SvgImage src={secureFilesSvg} />\r\n          </div>\r\n          <form\r\n            onSubmit={e => {\r\n              e.preventDefault();\r\n              checkPassword.mutate({\r\n                linkHash: linkHash!,\r\n                password,\r\n              });\r\n            }}\r\n          >\r\n            <span className=\"text-sm\">\r\n              <Trans message=\"The link you are trying to access is password protected.\" />\r\n            </span>\r\n            <TextField\r\n              autoFocus\r\n              placeholder={fieldLabel}\r\n              aria-label={fieldLabel}\r\n              className=\"mb-20 mt-10\"\r\n              type=\"password\"\r\n              value={password}\r\n              required\r\n              errorMessage={\r\n                passwordIsInvalid && <Trans message=\"Password is not valid\" />\r\n              }\r\n              onChange={e => {\r\n                setPassword(e.target.value);\r\n              }}\r\n            />\r\n            <div className=\"text-right\">\r\n              <Button\r\n                variant=\"flat\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                className=\"w-full md:w-auto\"\r\n                disabled={checkPassword.isPending}\r\n              >\r\n                <Trans message=\"Enter\" />\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {ComponentPropsWithoutRef, ReactNode} from 'react';\r\nimport clsx from 'clsx';\r\nimport {FileThumbnail} from '@common/uploads/file-type-icon/file-thumbnail';\r\nimport {DriveEntry} from '../../files/drive-entry';\r\n\r\ninterface BaseFileGridItemProps extends ComponentPropsWithoutRef<'div'> {\r\n  entry: DriveEntry;\r\n  className?: string;\r\n  isSelected?: boolean;\r\n  isMobileMode?: boolean;\r\n  footerAdornment?: ReactNode;\r\n}\r\n\r\nexport const BaseFileGridItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  BaseFileGridItemProps\r\n>(\r\n  (\r\n    {entry, className, isSelected, isMobileMode, footerAdornment, ...domProps},\r\n    ref\r\n  ) => {\r\n    return (\r\n      <div\r\n        {...domProps}\r\n        ref={ref}\r\n        className={clsx(\r\n          'shadow rounded border aspect-square flex flex-col grid-item transition-shadow-opacity select-none overflow-hidden outline-none dark:bg-alt',\r\n          isSelected && 'border-primary',\r\n          className\r\n        )}\r\n      >\r\n        <div className=\"flex-auto relative min-h-0\">\r\n          <FileThumbnail\r\n            className=\"h-full w-full\"\r\n            iconClassName=\"block w-70 h-70 absolute m-auto inset-0\"\r\n            file={entry}\r\n          />\r\n        </div>\r\n        <Footer\r\n          entry={entry}\r\n          isSelected={isSelected}\r\n          isMobile={isMobileMode}\r\n          adornment={footerAdornment}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\ninterface FooterProps {\r\n  entry: DriveEntry;\r\n  isSelected?: boolean;\r\n  isMobile?: boolean;\r\n  adornment?: ReactNode;\r\n}\r\nfunction Footer({entry, isSelected, isMobile, adornment}: FooterProps) {\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        'text-sm h-48 flex-shrink-0 flex items-center',\r\n        isMobile ? 'justify-between gap-10 pl-18 pr-2' : 'justify-center px-16',\r\n        isSelected && 'bg-primary-light/20'\r\n      )}\r\n    >\r\n      <div className=\"min-w-0 whitespace-nowrap overflow-hidden overflow-ellipsis\">\r\n        {entry.name}\r\n      </div>\r\n      {adornment}\r\n    </div>\r\n  );\r\n}\r\n","import {BaseFileGridItem} from '../../../file-view/file-grid/base-file-grid-item';\r\nimport React from 'react';\r\nimport {DriveEntry} from '../../../files/drive-entry';\r\n\r\nexport interface FolderPreviewGridProps {\r\n  entries: DriveEntry[];\r\n  onEntrySelected: (entry: DriveEntry, index: number) => void;\r\n}\r\nexport function FolderPreviewFileGrid({\r\n  entries,\r\n  onEntrySelected,\r\n}: FolderPreviewGridProps) {\r\n  return (\r\n    <div className=\"file-grid\">\r\n      {entries.map((entry, index) => (\r\n        <BaseFileGridItem\r\n          tabIndex={-1}\r\n          className=\"hover:shadow-md cursor-pointer bg\"\r\n          entry={entry}\r\n          key={entry.id}\r\n          onContextMenu={e => {\r\n            e.preventDefault();\r\n          }}\r\n          onKeyDown={e => {\r\n            if (e.key === 'Enter' || e.key === ' ') {\r\n              onEntrySelected(entry, index);\r\n            }\r\n          }}\r\n          onClick={() => {\r\n            onEntrySelected(entry, index);\r\n          }}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import {enableMapSet} from 'immer';\r\nimport {create} from 'zustand';\r\nimport {immer} from 'zustand/middleware/immer';\r\nimport type {DrivePage} from './drive-page/drive-page';\r\nimport {Key} from 'react';\r\nimport {DriveEntry} from './files/drive-entry';\r\nimport {SortColumn, SortDirection} from './layout/sorting/available-sorts';\r\nimport {\r\n  getFromLocalStorage,\r\n  setInLocalStorage,\r\n} from '@common/utils/hooks/local-storage';\r\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\r\n\r\nconst stableArray: DriveEntry[] = [];\r\nenableMapSet();\r\n\r\nexport type DriveDialog =\r\n  | 'rename'\r\n  | 'newFolder'\r\n  | 'preview'\r\n  | 'share'\r\n  | 'getLink'\r\n  | 'moveTo'\r\n  | 'confirmAndDeleteForever'\r\n  | 'trashFolderBlock';\r\n\r\nexport interface ActiveActionDialog {\r\n  name: DriveDialog;\r\n  entries: DriveEntry[];\r\n}\r\n\r\nexport interface DriveSortDescriptor {\r\n  orderBy?: SortColumn;\r\n  orderDir?: SortDirection;\r\n}\r\n\r\ninterface State {\r\n  uploadQueueIsOpen: boolean;\r\n  selectedEntries: Set<number>;\r\n  sidebarExpandedKeys: Key[];\r\n  activePage?: DrivePage;\r\n  activeActionDialog?: {\r\n    name: DriveDialog;\r\n    entries: DriveEntry[];\r\n  } | null;\r\n  entriesBeingDragged: number[];\r\n  viewMode: 'grid' | 'list';\r\n  sortDescriptor: DriveSortDescriptor;\r\n  contextMenuData: {x: number; y: number; entry?: DriveEntry} | null;\r\n}\r\n\r\ninterface Actions {\r\n  setUploadQueueIsOpen: (isOpen: boolean) => void;\r\n  setSidebarExpandedKeys: (keys: Key[]) => void;\r\n  expandSidebarItem: (key: Key) => void;\r\n  collapseSidebarItem: (key: Key) => void;\r\n  toggleSidebarItem: (key: Key) => void;\r\n  setActivePage: (page: DrivePage) => void;\r\n  setActiveActionDialog: (\r\n    name: DriveDialog | null,\r\n    entries?: DriveEntry[],\r\n  ) => void;\r\n  setViewMode: (mode: 'grid' | 'list') => void;\r\n  setSortDescriptor: (value: DriveSortDescriptor) => void;\r\n  setContextMenuData: (\r\n    position: {x: number; y: number; entry?: DriveEntry} | null,\r\n  ) => void;\r\n  setEntriesBeingDragged: (value: number[]) => void;\r\n  selectEntries: (\r\n    entries: (number | undefined | null)[],\r\n    merge?: boolean,\r\n  ) => void;\r\n  deselectEntries: (entries: number[] | 'all') => void;\r\n  reset: () => void;\r\n}\r\n\r\nconst initialState: State = {\r\n  uploadQueueIsOpen: false,\r\n  contextMenuData: null,\r\n  selectedEntries: new Set(),\r\n  entriesBeingDragged: [],\r\n  activeActionDialog: null,\r\n  sidebarExpandedKeys: [],\r\n  viewMode: getFromLocalStorage<'list' | 'grid'>(\r\n    'drive.viewMode',\r\n    getBootstrapData().settings?.drive?.default_view || 'grid',\r\n  ),\r\n  sortDescriptor: {\r\n    orderBy: 'updated_at',\r\n    orderDir: 'desc',\r\n  },\r\n};\r\n\r\nexport const useDriveStore = create<State & Actions>()(\r\n  immer((set, get) => ({\r\n    ...initialState,\r\n    setUploadQueueIsOpen: isOpen => {\r\n      set(state => {\r\n        state.uploadQueueIsOpen = isOpen;\r\n      });\r\n    },\r\n    setContextMenuData: data => {\r\n      set(state => {\r\n        state.contextMenuData = data;\r\n      });\r\n    },\r\n    setSortDescriptor: value => {\r\n      set(state => {\r\n        const activePageId = get().activePage?.uniqueId;\r\n        if (activePageId) {\r\n          setInLocalStorage('selectedSorting', {\r\n            ...getFromLocalStorage('selectedSorting'),\r\n            [activePageId]: value,\r\n          });\r\n        }\r\n        state.sortDescriptor = value;\r\n      });\r\n    },\r\n    setActivePage: value => {\r\n      set(state => {\r\n        state.activePage = value;\r\n\r\n        const storedDescriptor =\r\n          getFromLocalStorage('selectedSorting')?.[value.uniqueId];\r\n        state.sortDescriptor = storedDescriptor\r\n          ? storedDescriptor\r\n          : value.sortDescriptor;\r\n      });\r\n    },\r\n    setEntriesBeingDragged: value => {\r\n      set(state => {\r\n        state.entriesBeingDragged = value;\r\n      });\r\n    },\r\n    setActiveActionDialog: (name, entries = stableArray) => {\r\n      set(state => {\r\n        const current = get().activeActionDialog;\r\n        // prevent creating a new object, if neither name nor entries changed\r\n        if (current?.name !== name || current.entries !== entries) {\r\n          state.activeActionDialog = name ? {name, entries} : null;\r\n        }\r\n      });\r\n    },\r\n    setViewMode: mode => {\r\n      set(state => {\r\n        state.viewMode = mode;\r\n        setInLocalStorage('drive.viewMode', mode);\r\n      });\r\n    },\r\n    setSidebarExpandedKeys: value =>\r\n      set(state => {\r\n        state.sidebarExpandedKeys = value;\r\n      }),\r\n    expandSidebarItem: key =>\r\n      set(state => {\r\n        if (!state.sidebarExpandedKeys.includes(key)) {\r\n          state.sidebarExpandedKeys.push(key);\r\n        }\r\n      }),\r\n    collapseSidebarItem: key =>\r\n      set(state => {\r\n        const index = state.sidebarExpandedKeys.indexOf(key);\r\n        if (index > -1) {\r\n          state.sidebarExpandedKeys.splice(index, 1);\r\n        }\r\n      }),\r\n    toggleSidebarItem: key =>\r\n      set(state => {\r\n        if (state.sidebarExpandedKeys.includes(key)) {\r\n          state.expandSidebarItem(key);\r\n        } else {\r\n          state.collapseSidebarItem(key);\r\n        }\r\n      }),\r\n    selectEntries: (entries, merge) => {\r\n      set(state => {\r\n        if (!merge) {\r\n          state.selectedEntries.clear();\r\n        }\r\n        entries.forEach(e => e && state.selectedEntries.add(e));\r\n      });\r\n    },\r\n    deselectEntries: entries => {\r\n      set(state => {\r\n        if (!state.selectedEntries.size) return;\r\n        if (entries === 'all') {\r\n          state.selectedEntries = new Set();\r\n        } else {\r\n          entries.forEach(e => state.selectedEntries.delete(e));\r\n        }\r\n      });\r\n    },\r\n    reset: () => {\r\n      set(initialState);\r\n    },\r\n  })),\r\n);\r\n\r\nexport function driveState() {\r\n  return useDriveStore.getState();\r\n}\r\n\r\nexport function useActiveDialogEntry() {\r\n  const dialog = useDriveStore(s => s.activeActionDialog);\r\n  // this will only be used inside dialog, so entry will always be set in that case\r\n  return dialog?.entries[0]!;\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {FetchShareableLinkResponse} from './use-entry-shareable-link';\r\nimport {DriveQueryKeys} from '../../drive-query-keys';\r\nimport {message} from '@common/i18n/message';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\n\r\nfunction createShareableLink(\r\n  entryId?: number | null,\r\n): Promise<FetchShareableLinkResponse> {\r\n  if (!entryId) {\r\n    return Promise.reject(new Error('Invalid entry id'));\r\n  }\r\n  return apiClient\r\n    .post(`file-entries/${entryId}/shareable-link`)\r\n    .then(response => response.data);\r\n}\r\n\r\ninterface Payload {\r\n  entryId: number;\r\n}\r\nexport function useCreateShareableLink() {\r\n  return useMutation({\r\n    mutationFn: ({entryId}: Payload) => createShareableLink(entryId),\r\n    onSuccess: (data, {entryId}) => {\r\n      queryClient.setQueryData<FetchShareableLinkResponse>(\r\n        DriveQueryKeys.fetchEntryShareableLink(entryId),\r\n        data,\r\n      );\r\n    },\r\n    onError: err => showHttpErrorToast(err, message('Could not create link')),\r\n  });\r\n}\r\n","import {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {Tag} from '@common/tags/tag';\r\nimport {invalidateEntryQueries} from '../../drive-query-keys';\r\nimport {message} from '@common/i18n/message';\r\nimport {useMutation} from '@tanstack/react-query';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {\r\n  tag: Tag;\r\n}\r\n\r\ninterface Payload {\r\n  entryIds: number[];\r\n}\r\n\r\nfunction addStarToEntries({entryIds}: Payload): Promise<Response> {\r\n  return apiClient\r\n    .post('file-entries/star', {entryIds})\r\n    .then(response => response.data);\r\n}\r\n\r\nexport function useAddStarToEntries() {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => addStarToEntries(payload),\r\n    onSuccess: (data, {entryIds}) => {\r\n      invalidateEntryQueries();\r\n      toast(\r\n        message('Starred [one 1 item|other :count items]', {\r\n          values: {count: entryIds.length},\r\n        }),\r\n      );\r\n    },\r\n    onError: err => showHttpErrorToast(err, message('Could not star items')),\r\n  });\r\n}\r\n","import {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {Tag} from '@common/tags/tag';\r\nimport {invalidateEntryQueries} from '../../drive-query-keys';\r\nimport {message} from '@common/i18n/message';\r\nimport {useMutation} from '@tanstack/react-query';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {\r\n  tag: Tag;\r\n}\r\n\r\ninterface Payload {\r\n  entryIds: number[];\r\n}\r\n\r\nfunction removeStarFromEntries({entryIds}: Payload): Promise<Response> {\r\n  return apiClient\r\n    .post('file-entries/unstar', {entryIds})\r\n    .then(response => response.data);\r\n}\r\n\r\nexport function useRemoveStarFromEntries() {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => removeStarFromEntries(payload),\r\n    onSuccess: (data, {entryIds}) => {\r\n      invalidateEntryQueries();\r\n      toast(\r\n        message('Removed star from [one 1 item|other :count items]', {\r\n          values: {count: entryIds.length},\r\n        }),\r\n      );\r\n    },\r\n    onError: err => showHttpErrorToast(err, message('Could not remove star')),\r\n  });\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {DriveEntry} from '../drive-entry';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {DriveQueryKeys, invalidateEntryQueries} from '../../drive-query-keys';\r\nimport {message} from '@common/i18n/message';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {\r\n  entries: DriveEntry[];\r\n}\r\n\r\ninterface Payload {\r\n  entryIds: number[];\r\n  destinationId?: number;\r\n}\r\n\r\nfunction duplicateEntries(payload: Payload): Promise<Response> {\r\n  return apiClient\r\n    .post('file-entries/duplicate', payload)\r\n    .then(response => response.data);\r\n}\r\n\r\nexport function useDuplicateEntries() {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => {\r\n      toast.loading(\r\n        message('Duplicating [one 1 item|other :count items]...', {\r\n          values: {\r\n            count: payload.entryIds.length,\r\n          },\r\n        }),\r\n        {disableExitAnimation: true},\r\n      );\r\n      return duplicateEntries(payload);\r\n    },\r\n    onSuccess: (r, p) => {\r\n      invalidateEntryQueries();\r\n      queryClient.invalidateQueries({\r\n        queryKey: DriveQueryKeys.fetchStorageSummary,\r\n      });\r\n      toast(\r\n        message('Duplicated [one 1 item|other :count items]', {\r\n          values: {count: p.entryIds.length},\r\n        }),\r\n        {disableEnterAnimation: true},\r\n      );\r\n    },\r\n    onError: err =>\r\n      showHttpErrorToast(err, message('Could not duplicate items'), null, {\r\n        disableEnterAnimation: true,\r\n      }),\r\n  });\r\n}\r\n","export default \"__VITE_ASSET__fdd45f16__\"","export default \"__VITE_ASSET__189838f6__\"","export default \"__VITE_ASSET__bc08ea77__\"","export default \"__VITE_ASSET__94ef2bf1__\"","export default \"__VITE_ASSET__291df933__\"","export default \"__VITE_ASSET__5cc493df__\"","import type {DriveFolder} from '../files/drive-entry';\r\nimport {message} from '@common/i18n/message';\r\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\r\nimport addFilesSvg from './add-files.svg';\r\nimport timeManagement from './time-management.svg';\r\nimport fileSearching from './file-searching.svg';\r\nimport throwAwaySvg from './throw-away.svg';\r\nimport lovingItSvg from './loving-it.svg';\r\nimport shareSvg from './../shareable-link/shareable-link-page/folder-preview/share.svg';\r\nimport {DriveSortDescriptor} from '../drive-store';\r\nimport {BootstrapData} from '@common/core/bootstrap-data/bootstrap-data';\r\nimport {getBootstrapData} from '@common/core/bootstrap-data/use-backend-bootstrap-data';\r\n\r\ninterface NoContentMessage {\r\n  title: MessageDescriptor;\r\n  description: MessageDescriptor;\r\n  image: string;\r\n}\r\n\r\nexport interface DrivePage {\r\n  uniqueId: string;\r\n  name: string;\r\n  label: MessageDescriptor | string;\r\n  path: string;\r\n  hasActions?: boolean;\r\n  canUpload?: boolean;\r\n  disableSort?: boolean;\r\n  sortDescriptor: DriveSortDescriptor;\r\n  queryParams?: Record<string, string | number | boolean>;\r\n  folder?: DriveFolder;\r\n  isFolderPage?: boolean;\r\n  noContentMessage: (isSearchingOrFiltering: boolean) => NoContentMessage;\r\n}\r\n\r\nconst defaultSortDescriptor: DriveSortDescriptor = {\r\n  orderBy: 'updated_at',\r\n  orderDir: 'desc',\r\n};\r\n\r\nexport function makeFolderPage(folder: DriveFolder): DrivePage {\r\n  return {\r\n    ...makePartialFolderPage(folder.hash),\r\n    canUpload:\r\n      folder.permissions['files.create'] || folder.permissions['files.update'],\r\n    label: folder.name,\r\n    folder,\r\n  };\r\n}\r\n\r\nexport function makePartialFolderPage(hash: string): DrivePage {\r\n  return {\r\n    name: 'folder',\r\n    uniqueId: hash,\r\n    label: '',\r\n    path: getPathForFolder(hash),\r\n    hasActions: true,\r\n    canUpload: false,\r\n    sortDescriptor: defaultSortDescriptor,\r\n    isFolderPage: true,\r\n    noContentMessage: () => ({\r\n      title: message('Drop files or folders here'),\r\n      description: message('Or use the \"Upload\" button'),\r\n      image: addFilesSvg,\r\n    }),\r\n  };\r\n}\r\n\r\nexport function getPathForFolder(hash: string): string {\r\n  if (hash === '0') {\r\n    return '/drive';\r\n  }\r\n  return `/drive/folders/${hash}`;\r\n}\r\n\r\n// bootstrap data will always be available at this point\r\ninterface BootstrapDataWithRootFolder extends BootstrapData {\r\n  rootFolder: DriveFolder;\r\n}\r\nconst rootFolder = (getBootstrapData() as BootstrapDataWithRootFolder)\r\n  .rootFolder;\r\nexport const RootFolderPage = {\r\n  ...makeFolderPage(rootFolder),\r\n  name: 'home',\r\n} as Required<DrivePage>;\r\n\r\nexport const RecentPage: DrivePage = {\r\n  name: 'recent',\r\n  uniqueId: 'recent',\r\n  label: message('Recent'),\r\n  path: '/drive/recent',\r\n  disableSort: true,\r\n  sortDescriptor: {\r\n    orderBy: 'created_at',\r\n    orderDir: 'desc',\r\n  },\r\n  queryParams: {\r\n    recentOnly: true,\r\n  },\r\n  noContentMessage: () => ({\r\n    title: message('No recent entries'),\r\n    description: message('You have not uploaded any files or folders yet'),\r\n    image: timeManagement,\r\n  }),\r\n};\r\n\r\nexport const SearchPage: DrivePage = {\r\n  name: 'search',\r\n  uniqueId: 'search',\r\n  label: message('Search results'),\r\n  path: '/drive/search',\r\n  sortDescriptor: defaultSortDescriptor,\r\n  noContentMessage: isSearchingOrFiltering => {\r\n    if (isSearchingOrFiltering) {\r\n      return {\r\n        title: message('No matching results'),\r\n        description: message('Try changing your search query or filters'),\r\n        image: fileSearching,\r\n      };\r\n    }\r\n    return {\r\n      title: message('Begin typing or select a filter to search'),\r\n      description: message('Search for files, folders and other content'),\r\n      image: fileSearching,\r\n    };\r\n  },\r\n};\r\n\r\nexport const SharesPage: DrivePage = {\r\n  name: 'sharedWithMe',\r\n  uniqueId: 'sharedWithMe',\r\n  label: message('Shared'),\r\n  path: '/drive/shares',\r\n  sortDescriptor: defaultSortDescriptor,\r\n  queryParams: {\r\n    sharedOnly: true,\r\n  },\r\n  noContentMessage: () => ({\r\n    title: message('Shared with me'),\r\n    description: message('Files and folders other people have shared with you'),\r\n    image: shareSvg,\r\n  }),\r\n};\r\n\r\nexport const TrashPage: DrivePage = {\r\n  name: 'trash',\r\n  uniqueId: 'trash',\r\n  label: message('Trash'),\r\n  path: '/drive/trash',\r\n  sortDescriptor: defaultSortDescriptor,\r\n  hasActions: true,\r\n  queryParams: {\r\n    deletedOnly: true,\r\n  },\r\n  noContentMessage: () => ({\r\n    title: message('Trash is empty'),\r\n    description: message(\r\n      'There are no files or folders in your trash currently',\r\n    ),\r\n    image: throwAwaySvg,\r\n  }),\r\n};\r\n\r\nexport const StarredPage: DrivePage = {\r\n  name: 'starred',\r\n  uniqueId: 'starred',\r\n  label: message('Starred'),\r\n  path: '/drive/starred',\r\n  sortDescriptor: defaultSortDescriptor,\r\n  queryParams: {\r\n    starredOnly: true,\r\n  },\r\n  noContentMessage: () => ({\r\n    title: message('Nothing is starred'),\r\n    description: message(\r\n      'Add stars to files and folders that you want to easily find later',\r\n    ),\r\n    image: lovingItSvg,\r\n  }),\r\n};\r\n\r\nexport const DRIVE_PAGES = [\r\n  RootFolderPage,\r\n  RecentPage,\r\n  SearchPage,\r\n  SharesPage,\r\n  TrashPage,\r\n  StarredPage,\r\n];\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {DriveQueryKeys, invalidateEntryQueries} from '../../drive-query-keys';\r\nimport {message} from '@common/i18n/message';\r\nimport {getAxiosErrorMessage} from '@common/utils/http/get-axios-error-message';\r\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\ninterface Payload {\r\n  entryIds: number[];\r\n  emptyTrash?: boolean;\r\n  deleteForever?: boolean;\r\n}\r\n\r\nfunction deleteEntries(payload: Payload): Promise<Response> {\r\n  return apiClient\r\n    .post('file-entries/delete', payload)\r\n    .then(response => response.data);\r\n}\r\n\r\nexport function useDeleteEntries() {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => {\r\n      toast.loading(getLoaderMessage(payload), {disableExitAnimation: true});\r\n      return deleteEntries(payload);\r\n    },\r\n    onSuccess: (r, {entryIds, emptyTrash, deleteForever}) => {\r\n      invalidateEntryQueries();\r\n      queryClient.invalidateQueries({\r\n        queryKey: DriveQueryKeys.fetchStorageSummary,\r\n      });\r\n      if (emptyTrash) {\r\n        toast(message('Emptied trash'), {disableEnterAnimation: true});\r\n      } else if (deleteForever) {\r\n        toast(\r\n          message('Permanently deleted [one 1 item|other :count items]', {\r\n            values: {count: entryIds.length},\r\n          }),\r\n          {disableEnterAnimation: true},\r\n        );\r\n      } else {\r\n        toast(\r\n          message('Moved [one 1 item|other :count items] to trash', {\r\n            values: {count: entryIds.length},\r\n          }),\r\n          {disableEnterAnimation: true},\r\n        );\r\n      }\r\n    },\r\n    onError: (err, {emptyTrash}) => {\r\n      const backendError = getAxiosErrorMessage(err);\r\n      if (backendError) {\r\n        toast.danger(backendError, {disableEnterAnimation: true});\r\n      } else if (emptyTrash) {\r\n        toast.danger('could not empty trash', {disableEnterAnimation: true});\r\n      } else {\r\n        toast.danger('Could not delete items', {disableEnterAnimation: true});\r\n      }\r\n    },\r\n  });\r\n}\r\n\r\nfunction getLoaderMessage(payload: Payload): MessageDescriptor {\r\n  if (payload.emptyTrash) {\r\n    return message('Emptying trash...');\r\n  } else if (payload.deleteForever) {\r\n    return message('Deleting files...');\r\n  } else {\r\n    return message('Moving to trash...');\r\n  }\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {DriveEntryUser} from '../../files/drive-entry';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {invalidateEntryQueries} from '../../drive-query-keys';\r\n\r\ninterface Response extends BackendResponse {\r\n  users: DriveEntryUser[];\r\n}\r\n\r\ninterface Payload {\r\n  userId: number | 'me';\r\n  entryIds: number[];\r\n}\r\n\r\nexport function useUnshareEntries() {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => unshareEntries(payload),\r\n    onSuccess: () => {\r\n      return invalidateEntryQueries();\r\n    },\r\n  });\r\n}\r\n\r\nfunction unshareEntries({entryIds, ...payload}: Payload): Promise<Response> {\r\n  return apiClient\r\n    .post(`file-entries/${entryIds.join(',')}/unshare`, payload)\r\n    .then(response => response.data);\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {invalidateEntryQueries} from '../../drive-query-keys';\r\nimport {message} from '@common/i18n/message';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\ninterface Payload {\r\n  entryIds: number[];\r\n}\r\n\r\nexport function useRestoreEntries() {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => restoreEntries(payload),\r\n    onSuccess: (r, p) => {\r\n      invalidateEntryQueries();\r\n      toast(\r\n        message('Restored [one 1 item|other :count items]', {\r\n          values: {count: p.entryIds.length},\r\n        }),\r\n      );\r\n    },\r\n    onError: err => showHttpErrorToast(err, message('Could not restore items')),\r\n  });\r\n}\r\n\r\nfunction restoreEntries(payload: Payload): Promise<Response> {\r\n  return apiClient\r\n    .post('file-entries/restore', payload)\r\n    .then(response => response.data);\r\n}\r\n","import {message} from '@common/i18n/message';\r\nimport {PersonAddIcon} from '@common/icons/material/PersonAdd';\r\nimport {driveState, useDriveStore} from '../drive-store';\r\nimport {EntryAction} from './entry-action';\r\nimport {DriveEntry} from '../files/drive-entry';\r\nimport {RemoveRedEyeIcon} from '@common/icons/material/RemoveRedEye';\r\nimport {LinkIcon} from '@common/icons/material/Link';\r\nimport {useCreateShareableLink} from '../shareable-link/queries/create-shareable-link';\r\nimport {StarIcon} from '@common/icons/material/Star';\r\nimport {useAddStarToEntries} from '../files/queries/use-add-star-to-entries';\r\nimport {StarOutlineIcon} from '@common/icons/material/StarOutline';\r\nimport {useRemoveStarFromEntries} from '../files/queries/use-remove-star-from-entries';\r\nimport {DriveFileMoveIcon} from '@common/icons/material/DriveFileMove';\r\nimport {DriveFileRenameOutlineIcon} from '@common/icons/material/DriveFileRenameOutline';\r\nimport {ContentCopyIcon} from '@common/icons/material/ContentCopy';\r\nimport {useDuplicateEntries} from '../files/queries/use-duplicate-entries';\r\nimport {FileDownloadIcon} from '@common/icons/material/FileDownload';\r\nimport {DeleteIcon} from '@common/icons/material/Delete';\r\nimport {SharesPage, TrashPage} from '../drive-page/drive-page';\r\nimport {useDeleteEntries} from '../files/queries/use-delete-entries';\r\nimport {useUnshareEntries} from '../share-dialog/queries/use-unshare-entries';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\nimport {useFileEntryUrls} from '@common/uploads/hooks/file-entry-urls';\r\nimport {downloadFileFromUrl} from '@common/uploads/utils/download-file-from-url';\r\nimport {useRestoreEntries} from '../files/queries/use-restore-entries';\r\nimport {RestoreIcon} from '@common/icons/material/Restore';\r\n\r\nexport function useEntryActions(entries: DriveEntry[]): EntryAction[] {\r\n  const preview = usePreviewAction(entries);\r\n  const share = useShareAction(entries);\r\n  const getLink = useGetLinkAction(entries);\r\n  const addStar = useAddToStarredAction(entries);\r\n  const removeStar = useRemoveFromStarred(entries);\r\n  const moveTo = useMoveToAction(entries);\r\n  const rename = useRenameAction(entries);\r\n  const makeCopy = useMakeCopyAction(entries);\r\n  const download = useDownloadEntriesAction(entries);\r\n  const deleteAction = useDeleteEntriesAction(entries);\r\n  const removeSharedEntries = useRemoveSharedEntriesAction(entries);\r\n  const restoreEntries = useRestoreEntriesAction(entries);\r\n\r\n  return [\r\n    preview,\r\n    share,\r\n    getLink,\r\n    addStar,\r\n    removeStar,\r\n    moveTo,\r\n    rename,\r\n    makeCopy,\r\n    download,\r\n    deleteAction,\r\n    removeSharedEntries,\r\n    restoreEntries,\r\n  ].filter(action => !!action) as EntryAction[];\r\n}\r\n\r\nexport function usePreviewAction(\r\n  entries: DriveEntry[],\r\n): EntryAction | undefined {\r\n  if (!entries.some(e => e.type !== 'folder')) return;\r\n  return {\r\n    label: message('Preview'),\r\n    icon: RemoveRedEyeIcon,\r\n    key: 'preview',\r\n    execute: () => {\r\n      driveState().setActiveActionDialog('preview', entries);\r\n    },\r\n  };\r\n}\r\n\r\nexport function useShareAction(entries: DriveEntry[]): EntryAction | undefined {\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  if (\r\n    entries.length > 1 ||\r\n    !entries.every(e => e.permissions['files.update']) ||\r\n    activePage === TrashPage\r\n  )\r\n    return;\r\n\r\n  return {\r\n    label: message('Share'),\r\n    icon: PersonAddIcon,\r\n    key: 'share',\r\n    execute: () => {\r\n      driveState().setActiveActionDialog('share', entries);\r\n    },\r\n  };\r\n}\r\n\r\nfunction useGetLinkAction(entries: DriveEntry[]): EntryAction | undefined {\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  const createLink = useCreateShareableLink();\r\n  if (\r\n    entries.length > 1 ||\r\n    !entries.every(e => e.permissions['files.update']) ||\r\n    activePage === TrashPage\r\n  ) {\r\n    return;\r\n  }\r\n  return {\r\n    label: message('Get link'),\r\n    icon: LinkIcon,\r\n    key: 'getLink',\r\n    execute: () => {\r\n      createLink.mutate({entryId: entries[0].id});\r\n      driveState().setActiveActionDialog('getLink', entries);\r\n    },\r\n  };\r\n}\r\n\r\nfunction useAddToStarredAction(entries: DriveEntry[]): EntryAction | undefined {\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  const starEntries = useAddStarToEntries();\r\n  if (\r\n    entries.every(e => e.tags?.find(tag => tag.name === 'starred')) ||\r\n    !entries.every(e => e.permissions['files.update']) ||\r\n    activePage === TrashPage\r\n  ) {\r\n    return;\r\n  }\r\n  return {\r\n    label: message('Add to starred'),\r\n    icon: StarIcon,\r\n    key: 'addToStarred',\r\n    execute: () => {\r\n      starEntries.mutate({entryIds: entries.map(e => e.id)});\r\n      driveState().selectEntries([]);\r\n    },\r\n  };\r\n}\r\n\r\nfunction useRemoveFromStarred(entries: DriveEntry[]): EntryAction | undefined {\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  const removeStar = useRemoveStarFromEntries();\r\n  if (\r\n    !entries.every(e => e.tags?.find(tag => tag.name === 'starred')) ||\r\n    activePage === TrashPage\r\n  )\r\n    return;\r\n  return {\r\n    label: message('Remove from starred'),\r\n    icon: StarOutlineIcon,\r\n    key: 'removeFromStarred',\r\n    execute: () => {\r\n      removeStar.mutate({entryIds: entries.map(e => e.id)});\r\n      driveState().selectEntries([]);\r\n    },\r\n  };\r\n}\r\n\r\nfunction useMoveToAction(entries: DriveEntry[]): EntryAction | undefined {\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  if (\r\n    !entries.every(e => e.permissions['files.update']) ||\r\n    activePage === SharesPage ||\r\n    activePage === TrashPage\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  return {\r\n    label: message('Move to'),\r\n    icon: DriveFileMoveIcon,\r\n    key: 'moveTo',\r\n    execute: () => {\r\n      driveState().setActiveActionDialog('moveTo', entries);\r\n    },\r\n  };\r\n}\r\n\r\nfunction useRenameAction(entries: DriveEntry[]): EntryAction | undefined {\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  if (\r\n    entries.length > 1 ||\r\n    !entries.every(e => e.permissions['files.update']) ||\r\n    activePage === TrashPage\r\n  )\r\n    return;\r\n  return {\r\n    label: message('Rename'),\r\n    icon: DriveFileRenameOutlineIcon,\r\n    key: 'rename',\r\n    execute: () => {\r\n      driveState().setActiveActionDialog('rename', entries);\r\n    },\r\n  };\r\n}\r\n\r\nfunction useMakeCopyAction(entries: DriveEntry[]): EntryAction | undefined {\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  const duplicateEntries = useDuplicateEntries();\r\n  if (\r\n    entries.length > 1 ||\r\n    !entries.every(e => e.permissions['files.update']) ||\r\n    activePage === TrashPage\r\n  ) {\r\n    return;\r\n  }\r\n  return {\r\n    label: message('Make a copy'),\r\n    icon: ContentCopyIcon,\r\n    key: 'makeCopy',\r\n    execute: () => {\r\n      duplicateEntries.mutate({\r\n        entryIds: entries.map(e => e.id),\r\n        destinationId: activePage?.folder?.id,\r\n      });\r\n      driveState().selectEntries([]);\r\n    },\r\n  };\r\n}\r\n\r\nfunction useDownloadEntriesAction(\r\n  entries: DriveEntry[],\r\n): EntryAction | undefined {\r\n  const {downloadUrl} = useFileEntryUrls(entries[0], {\r\n    downloadHashes: entries.map(e => e.hash),\r\n  });\r\n  if (!entries.every(e => e.permissions['files.download'])) return;\r\n  return {\r\n    label: message('Download'),\r\n    icon: FileDownloadIcon,\r\n    key: 'download',\r\n    execute: () => {\r\n      if (downloadUrl) {\r\n        downloadFileFromUrl(downloadUrl);\r\n      }\r\n      driveState().selectEntries([]);\r\n    },\r\n  };\r\n}\r\n\r\nexport function useDeleteEntriesAction(\r\n  entries: DriveEntry[],\r\n): EntryAction | undefined {\r\n  const deleteEntries = useDeleteEntries();\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  if (\r\n    activePage === SharesPage ||\r\n    !entries.every(e => e.permissions['files.delete'])\r\n  )\r\n    return;\r\n  return {\r\n    label:\r\n      activePage === TrashPage ? message('Delete forever') : message('Remove'),\r\n    icon: DeleteIcon,\r\n    key: 'delete',\r\n    execute: () => {\r\n      if (activePage === TrashPage) {\r\n        driveState().setActiveActionDialog('confirmAndDeleteForever', entries);\r\n      } else {\r\n        deleteEntries.mutate({\r\n          entryIds: entries.map(e => e.id),\r\n          deleteForever: activePage === TrashPage,\r\n        });\r\n        driveState().selectEntries([]);\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\nexport function useRestoreEntriesAction(\r\n  entries: DriveEntry[],\r\n): EntryAction | undefined {\r\n  const restoreEntries = useRestoreEntries();\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  if (\r\n    activePage !== TrashPage ||\r\n    !entries.every(e => e.permissions['files.delete'])\r\n  )\r\n    return;\r\n  return {\r\n    label: message('Restore'),\r\n    icon: RestoreIcon,\r\n    key: 'restore',\r\n    execute: () => {\r\n      restoreEntries.mutate({\r\n        entryIds: entries.map(e => e.id),\r\n      });\r\n      driveState().selectEntries([]);\r\n    },\r\n  };\r\n}\r\n\r\nexport function useRemoveSharedEntriesAction(\r\n  entries: DriveEntry[],\r\n): EntryAction | undefined {\r\n  const unshareEntries = useUnshareEntries();\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  if (activePage !== SharesPage) return;\r\n  return {\r\n    label: message('Remove'),\r\n    icon: DeleteIcon,\r\n    key: 'removeSharedEntry',\r\n    execute: () => {\r\n      unshareEntries.mutate(\r\n        {entryIds: entries.map(e => e.id), userId: 'me'},\r\n        {\r\n          onSuccess: (r, p) => {\r\n            toast(\r\n              message('Removed [one 1 item|other {count} items]', {\r\n                values: {count: p.entryIds.length},\r\n              }),\r\n            );\r\n          },\r\n          onError: err =>\r\n            showHttpErrorToast(err, message('Could not remove items')),\r\n        },\r\n      );\r\n      driveState().selectEntries([]);\r\n    },\r\n  };\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {prettyBytes} from '@common/uploads/utils/pretty-bytes';\r\nimport {DriveQueryKeys} from '../../../drive-query-keys';\r\nimport {apiClient} from '@common/http/query-client';\r\n\r\nexport interface FetchStorageSummaryResponse extends BackendResponse {\r\n  used: number;\r\n  available: number;\r\n}\r\n\r\nexport function useStorageSummary() {\r\n  return useQuery({\r\n    queryKey: DriveQueryKeys.fetchStorageSummary,\r\n    queryFn: fetchStorageSummary,\r\n    select: formatResponse,\r\n  });\r\n}\r\n\r\nfunction fetchStorageSummary(): Promise<FetchStorageSummaryResponse> {\r\n  return apiClient.get(`user/space-usage`).then(response => response.data);\r\n}\r\n\r\nfunction formatResponse(response: FetchStorageSummaryResponse) {\r\n  // null means that user has unlimited space available\r\n  const percentage =\r\n    response.available === null\r\n      ? 0\r\n      : (response.used * 100) / response.available;\r\n\r\n  return {\r\n    usedFormatted: prettyBytes(response.used, 2),\r\n    availableFormatted: prettyBytes(response.available, 0),\r\n    percentage,\r\n    used: response.used,\r\n    available: response.available,\r\n  };\r\n}\r\n","import {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\r\nimport {useCallback} from 'react';\r\nimport {driveState} from '../drive-store';\r\nimport {UploadedFile} from '@common/uploads/uploaded-file';\r\nimport {UploadStrategyConfig} from '@common/uploads/uploader/strategy/upload-strategy';\r\nimport {queryClient} from '@common/http/query-client';\r\nimport {DriveQueryKeys, invalidateEntryQueries} from '../drive-query-keys';\r\nimport {useStorageSummary} from '../layout/sidebar/storage-summary/storage-summary';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {message} from '@common/i18n/message';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\nimport {getActiveWorkspaceId} from '@common/workspace/active-workspace-id';\r\n\r\nexport type UploadFilesFn = (\r\n  files: (File | UploadedFile)[] | FileList,\r\n  options?: UploadStrategyConfig,\r\n) => void;\r\n\r\nconst EightMB = 8388608;\r\n\r\nexport function useDriveUploadQueue() {\r\n  const uploadMultiple = useFileUploadStore(s => s.uploadMultiple);\r\n  const {data: usage} = useStorageSummary();\r\n\r\n  const {uploads} = useSettings();\r\n\r\n  const maxFileSize = uploads.max_size || EightMB;\r\n  const allowedFileTypes = uploads.allowed_extensions;\r\n  const blockedFileTypes = uploads.blocked_extensions;\r\n\r\n  const uploadFiles: UploadFilesFn = useCallback(\r\n    (files, options = {}) => {\r\n      if (!options.metadata) {\r\n        options.metadata = {};\r\n      }\r\n      options.metadata.workspaceId = getActiveWorkspaceId();\r\n      if (!options.metadata.parentId) {\r\n        options.metadata.parentId = driveState().activePage?.folder?.id ?? null;\r\n      }\r\n\r\n      files = [...files].map(file => {\r\n        return file instanceof UploadedFile ? file : new UploadedFile(file);\r\n      });\r\n\r\n      // check if this upload will not put user over their allowed storage space\r\n      if (usage) {\r\n        const sizeOfFiles = files.reduce((sum, file) => sum + file.size, 0);\r\n        const currentlyUsing = usage.used;\r\n        const availableSpace = usage.available;\r\n\r\n        if (sizeOfFiles + currentlyUsing > availableSpace) {\r\n          toast.danger(\r\n            message(\r\n              'You have exhausted your allowed space of :space. Delete some files or upgrade your plan.',\r\n              {values: {space: usage.availableFormatted}},\r\n            ),\r\n            {action: {action: '/pricing', label: message('Upgrade')}},\r\n          );\r\n          return;\r\n        }\r\n      }\r\n\r\n      uploadMultiple(files, {\r\n        ...options,\r\n        restrictions: {\r\n          maxFileSize,\r\n          allowedFileTypes,\r\n          blockedFileTypes,\r\n        },\r\n        onSuccess: (entry, file) => {\r\n          options?.onSuccess?.(entry, file);\r\n          invalidateEntryQueries();\r\n          queryClient.invalidateQueries({\r\n            queryKey: DriveQueryKeys.fetchStorageSummary,\r\n          });\r\n        },\r\n      });\r\n      driveState().setUploadQueueIsOpen(true);\r\n    },\r\n    [uploadMultiple, allowedFileTypes, blockedFileTypes, maxFileSize, usage],\r\n  );\r\n  return {uploadFiles};\r\n}\r\n","import {EntryAction} from './entry-action';\r\nimport {message} from '@common/i18n/message';\r\nimport {driveState, useDriveStore} from '../drive-store';\r\nimport {DrivePage, TrashPage} from '../drive-page/drive-page';\r\nimport {CreateNewFolderIcon} from '@common/icons/material/CreateNewFolder';\r\nimport {useDriveUploadQueue} from '../uploading/use-drive-upload-queue';\r\nimport {openUploadWindow} from '@common/uploads/utils/open-upload-window';\r\nimport {FileUploadIcon} from '@common/icons/material/FileUpload';\r\nimport {DriveFolderUploadIcon} from '@common/icons/material/DriveFolderUpload';\r\nimport {useDeleteEntries} from '../files/queries/use-delete-entries';\r\nimport {DeleteForeverIcon} from '@common/icons/material/DeleteForever';\r\n\r\nexport function useDrivePageActions(page: DrivePage): EntryAction[] {\r\n  const newFolder = useNewFolderAction(page);\r\n  const uploadFiles = useUploadFilesAction(page);\r\n  const uploadFolder = useUploadFolderAction(page);\r\n  const emptyTrash = useEmptyTrashAction(page);\r\n  return [newFolder, uploadFiles, uploadFolder, emptyTrash].filter(\r\n    action => !!action\r\n  ) as EntryAction[];\r\n}\r\n\r\nfunction useNewFolderAction(page: DrivePage): EntryAction | undefined {\r\n  if (!page.folder || !page.folder.permissions['files.update']) return;\r\n  return {\r\n    label: message('New folder'),\r\n    icon: CreateNewFolderIcon,\r\n    key: 'newFolder',\r\n    execute: () => {\r\n      if (page.folder) {\r\n        driveState().setActiveActionDialog('newFolder', [page.folder]);\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\nfunction useUploadFilesAction(page: DrivePage): EntryAction | undefined {\r\n  const {uploadFiles} = useDriveUploadQueue();\r\n  if (!page.folder || !page.folder.permissions['files.update']) return;\r\n  return {\r\n    label: message('Upload files'),\r\n    icon: FileUploadIcon,\r\n    key: 'uploadFiles',\r\n    execute: async () => {\r\n      uploadFiles(await openUploadWindow({multiple: true}));\r\n    },\r\n  };\r\n}\r\n\r\nfunction useUploadFolderAction(page: DrivePage): EntryAction | undefined {\r\n  const {uploadFiles} = useDriveUploadQueue();\r\n  if (!page.folder || !page.folder.permissions['files.update']) return;\r\n  return {\r\n    label: message('Upload folder'),\r\n    icon: DriveFolderUploadIcon,\r\n    key: 'uploadFolder',\r\n    execute: async () => {\r\n      uploadFiles(await openUploadWindow({directory: true}));\r\n    },\r\n  };\r\n}\r\n\r\nfunction useEmptyTrashAction(page: DrivePage): EntryAction | undefined {\r\n  const deleteEntries = useDeleteEntries();\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  if (activePage !== TrashPage) return;\r\n  return {\r\n    label: message('Empty trash'),\r\n    icon: DeleteForeverIcon,\r\n    key: 'emptyTrash',\r\n    execute: () => {\r\n      deleteEntries.mutate({entryIds: [], emptyTrash: true});\r\n      driveState().selectEntries([]);\r\n    },\r\n  };\r\n}\r\n","import React, {createElement, ReactElement} from 'react';\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  MenuTrigger,\r\n} from '@common/ui/navigation/menu/menu-trigger';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {DriveEntry} from '../files/drive-entry';\r\nimport {useEntryActions} from './use-entry-actions';\r\nimport {EntryAction} from './entry-action';\r\nimport {DrivePage, RootFolderPage, TrashPage} from '../drive-page/drive-page';\r\nimport {useDrivePageActions} from './use-drive-page-actions';\r\n\r\ninterface Props {\r\n  children: ReactElement;\r\n  entries?: DriveEntry[];\r\n  page?: DrivePage;\r\n}\r\nexport function EntryActionMenuTrigger({children, entries, page}: Props) {\r\n  if (page?.name === RootFolderPage.name) {\r\n    return <PageMenu page={RootFolderPage}>{children}</PageMenu>;\r\n  }\r\n\r\n  if (page === TrashPage) {\r\n    return <PageMenu page={TrashPage}>{children}</PageMenu>;\r\n  }\r\n\r\n  if (page?.folder) {\r\n    return <EntriesMenu entries={[page.folder]}>{children}</EntriesMenu>;\r\n  }\r\n\r\n  if (entries?.length) {\r\n    return <EntriesMenu entries={entries}>{children}</EntriesMenu>;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\ninterface EntriesContextMenuProps extends Omit<BaseMenuProps, 'actions'> {\r\n  entries: DriveEntry[];\r\n}\r\nfunction EntriesMenu({entries, children}: EntriesContextMenuProps) {\r\n  const actions = useEntryActions(entries);\r\n  return <BaseMenu actions={actions}>{children}</BaseMenu>;\r\n}\r\n\r\ninterface PageContextMenuProps extends Omit<BaseMenuProps, 'actions'> {\r\n  page: DrivePage;\r\n}\r\nfunction PageMenu({page, children}: PageContextMenuProps) {\r\n  const actions = useDrivePageActions(page);\r\n  return <BaseMenu actions={actions}>{children}</BaseMenu>;\r\n}\r\n\r\ninterface BaseMenuProps {\r\n  actions: EntryAction[];\r\n  children: ReactElement;\r\n}\r\nfunction BaseMenu({actions, children}: BaseMenuProps) {\r\n  return (\r\n    <MenuTrigger>\r\n      {children}\r\n      <Menu>\r\n        {actions.map(action => {\r\n          return (\r\n            <MenuItem\r\n              onSelected={() => {\r\n                action.execute();\r\n              }}\r\n              key={action.key}\r\n              value={action.key}\r\n              startIcon={createElement(action.icon)}\r\n            >\r\n              <Trans {...action.label} />\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Menu>\r\n    </MenuTrigger>\r\n  );\r\n}\r\n","import {ColumnConfig} from '@common/datatable/column-config';\r\nimport {DriveEntry} from '../../files/drive-entry';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {FileThumbnail} from '@common/uploads/file-type-icon/file-thumbnail';\r\nimport {FormattedDate} from '@common/i18n/formatted-date';\r\nimport {prettyBytes} from '@common/uploads/utils/pretty-bytes';\r\nimport React, {useContext} from 'react';\r\nimport memoize from 'nano-memoize';\r\nimport {TableContext} from '@common/ui/tables/table-context';\r\nimport {Checkbox} from '@common/ui/forms/toggle/checkbox';\r\nimport {EntryActionMenuTrigger} from '@app/drive/entry-actions/entry-action-menu-trigger';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {MoreVertIcon} from '@common/icons/material/MoreVert';\r\nimport clsx from 'clsx';\r\n\r\nconst formatFileSize = memoize(bytes => {\r\n  return prettyBytes(bytes);\r\n});\r\n\r\nexport const fileTableColumns: ColumnConfig<DriveEntry>[] = [\r\n  {\r\n    key: 'name',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Name\" />,\r\n    visibleInMode: 'all',\r\n    width: 'flex-3 min-w-200',\r\n    body: entry => <FileNameColumn entry={entry} />,\r\n  },\r\n  {\r\n    key: 'updated_at',\r\n    allowsSorting: true,\r\n    maxWidth: 'max-w-184',\r\n    header: () => <Trans message=\"Last modified\" />,\r\n    body: user => <FormattedDate date={user.updated_at} />,\r\n  },\r\n  {\r\n    key: 'file_size',\r\n    allowsSorting: true,\r\n    header: () => <Trans message=\"Size\" />,\r\n    maxWidth: 'max-w-144',\r\n    body: entry => formatFileSize(entry.file_size) ?? '-',\r\n  },\r\n  {\r\n    key: 'actions',\r\n    hideHeader: true,\r\n    header: () => <Trans message=\"Actions\" />,\r\n    align: 'end',\r\n    width: 'w-42 flex-shrink-0',\r\n    visibleInMode: 'all',\r\n    body: entry => <ActionsColumn entry={entry} />,\r\n  },\r\n];\r\n\r\nfunction FileNameColumn({entry}: {entry: DriveEntry}) {\r\n  const {isCollapsedMode} = useContext(TableContext);\r\n  const sizeClassName = isCollapsedMode ? 'w-30 h-30' : 'w-24 h-24';\r\n  return (\r\n    <div className=\"flex items-center gap-14\">\r\n      <FileThumbnail\r\n        className={clsx('rounded', sizeClassName)}\r\n        iconClassName={sizeClassName}\r\n        file={entry}\r\n      />\r\n      <div className=\"min-w-0\">\r\n        <div className=\"overflow-hidden overflow-ellipsis\">{entry.name}</div>\r\n        {isCollapsedMode && (\r\n          <div className=\"text-muted text-xs flex items-center mt-4\">\r\n            <FormattedDate date={entry.updated_at} />\r\n            <div>·</div>\r\n            <div>{formatFileSize(entry.file_size)}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface ActionsBodyProps {\r\n  entry: DriveEntry;\r\n}\r\nfunction ActionsColumn({entry}: ActionsBodyProps) {\r\n  const {selectedRows} = useContext(TableContext);\r\n  return selectedRows.length ? (\r\n    <Checkbox\r\n      className=\"block mr-8\"\r\n      checked={selectedRows.includes(entry.id)}\r\n    />\r\n  ) : (\r\n    <EntryActionMenuTrigger entries={[entry]}>\r\n      <IconButton className=\"text-muted\">\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n    </EntryActionMenuTrigger>\r\n  );\r\n}\r\n","import {useIsMobileMediaQuery} from '@common/utils/hooks/is-mobile-media-query';\r\nimport {DriveSortDescriptor} from '../../../drive-store';\r\nimport React from 'react';\r\nimport {Table} from '@common/ui/tables/table';\r\nimport {linkPageState, useLinkPageStore} from '../link-page-store';\r\nimport type {FolderPreviewGridProps} from './folder-preview-file-grid';\r\nimport {fileTableColumns} from '../../../file-view/file-table/file-table-columns';\r\n\r\nconst mobileColumns = fileTableColumns.filter(\r\n  config => config.key !== 'updated_at'\r\n);\r\n\r\nexport function FolderPreviewFileTable({\r\n  entries,\r\n  onEntrySelected,\r\n}: FolderPreviewGridProps) {\r\n  const sortDescriptor = useLinkPageStore(s => s.activeSort);\r\n  const isMobile = useIsMobileMediaQuery();\r\n\r\n  return (\r\n    <Table\r\n      columns={isMobile ? mobileColumns : fileTableColumns}\r\n      data={entries}\r\n      sortDescriptor={sortDescriptor}\r\n      onSortChange={value => {\r\n        linkPageState().setActiveSort(value as DriveSortDescriptor);\r\n      }}\r\n      onAction={(item, index) => {\r\n        onEntrySelected(item, index);\r\n      }}\r\n      enableSelection={false}\r\n    />\r\n  );\r\n}\r\n","import {useShareableLinkPage} from '../../queries/use-shareable-link-page';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {ShareableLink} from '../../shareable-link';\r\n\r\nfunction buildFolderHash(link: ShareableLink, folderHash?: string) {\r\n  let hash = link.hash;\r\n  if (folderHash && link.entry?.hash !== folderHash) {\r\n    hash = `${hash}:${folderHash}`;\r\n  }\r\n  return hash;\r\n}\r\n\r\nexport function useNavigateToSubfolder() {\r\n  const {link} = useShareableLinkPage();\r\n  const navigate = useNavigate();\r\n  return (hash: string) => {\r\n    if (!link) return;\r\n    navigate(`/drive/s/${buildFolderHash(link, hash)}`);\r\n  };\r\n}\r\n","import {AnimatePresence, m} from 'framer-motion';\r\nimport React, {useEffect, useRef, useState} from 'react';\r\nimport {ProgressCircle} from '@common/ui/progress/progress-circle';\r\nimport {useShareableLinkPage} from '../../queries/use-shareable-link-page';\r\nimport {FilePreviewDialog} from '@common/uploads/preview/file-preview-dialog';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport clsx from 'clsx';\r\nimport {DriveEntry} from '../../../files/drive-entry';\r\nimport {FolderPreviewFileGrid} from './folder-preview-file-grid';\r\nimport {useLinkPageStore} from '../link-page-store';\r\nimport {FolderPreviewFileTable} from './folder-preview-file-table';\r\nimport {useNavigateToSubfolder} from './use-navigate-to-subfolder';\r\nimport {useLocation} from 'react-router-dom';\r\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\r\nimport {AdHost} from '@common/admin/ads/ad-host';\r\n\r\ninterface FolderPreviewChildrenProps {\r\n  className?: string;\r\n}\r\nexport function FolderPreviewFileView({className}: FolderPreviewChildrenProps) {\r\n  const {pathname} = useLocation();\r\n  const navigateToSubfolder = useNavigateToSubfolder();\r\n  const [activePreviewIndex, setActivePreviewIndex] = useState<number>();\r\n  const viewMode = useLinkPageStore(s => s.viewMode);\r\n  const sentinelRef = useRef<HTMLDivElement>(null);\r\n  const {\r\n    link,\r\n    entries,\r\n    isFetchingNextPage,\r\n    hasNextPage,\r\n    fetchNextPage,\r\n    isPlaceholderData,\r\n  } = useShareableLinkPage();\r\n\r\n  // close preview modal on back/forward navigation\r\n  useEffect(() => {\r\n    setActivePreviewIndex(undefined);\r\n  }, [pathname]);\r\n\r\n  useEffect(() => {\r\n    const sentinelEl = sentinelRef.current;\r\n    if (!sentinelEl) return;\r\n    const observer = new IntersectionObserver(([entry]) => {\r\n      if (entry.isIntersecting && hasNextPage) {\r\n        fetchNextPage();\r\n      }\r\n    });\r\n    observer.observe(sentinelEl);\r\n    return () => {\r\n      observer.unobserve(sentinelEl);\r\n    };\r\n  }, [hasNextPage, fetchNextPage]);\r\n\r\n  if (!link || isPlaceholderData) {\r\n    return (\r\n      <div className={clsx('flex justify-center', className)}>\r\n        <ProgressCircle isIndeterminate />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handlePreview = (entry: DriveEntry, index: number) => {\r\n    if (entry.type === 'folder') {\r\n      navigateToSubfolder(entry.hash);\r\n    } else {\r\n      setActivePreviewIndex(index);\r\n    }\r\n  };\r\n\r\n  const folderEntries = entries || [];\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={clsx(\r\n          'file-grid-container flex-auto overflow-auto px-14 pb-14 md:px-24 md:pb-24',\r\n          className,\r\n        )}\r\n      >\r\n        <AdHost slot=\"file-preview\" className=\"mb-40\" />\r\n        {viewMode === 'grid' ? (\r\n          <FolderPreviewFileGrid\r\n            entries={folderEntries}\r\n            onEntrySelected={handlePreview}\r\n          />\r\n        ) : (\r\n          <FolderPreviewFileTable\r\n            entries={folderEntries}\r\n            onEntrySelected={handlePreview}\r\n          />\r\n        )}\r\n        <span ref={sentinelRef} aria-hidden />\r\n        <AnimatePresence>\r\n          {isFetchingNextPage && (\r\n            <m.div\r\n              className=\"mt-24 flex w-full justify-center\"\r\n              {...opacityAnimation}\r\n            >\r\n              <ProgressCircle isIndeterminate aria-label=\"loading\" />\r\n            </m.div>\r\n          )}\r\n        </AnimatePresence>\r\n      </div>\r\n      <DialogTrigger\r\n        type=\"modal\"\r\n        isOpen={activePreviewIndex != undefined}\r\n        onClose={() => setActivePreviewIndex(undefined)}\r\n      >\r\n        <FilePreviewDialog\r\n          entries={folderEntries}\r\n          defaultActiveIndex={activePreviewIndex}\r\n          allowDownload={link.allow_download}\r\n        />\r\n      </DialogTrigger>\r\n    </>\r\n  );\r\n}\r\n","import {ReactNode} from 'react';\r\nimport clsx from 'clsx';\r\n\r\ninterface DashboardContentHeaderProps {\r\n  children: ReactNode;\r\n  className?: string;\r\n}\r\nexport function DashboardContentHeader({\r\n  children,\r\n  className,\r\n}: DashboardContentHeaderProps) {\r\n  return (\r\n    <div className={clsx(className, 'dashboard-grid-header')}>{children}</div>\r\n  );\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {DriveFolder} from '../drive-entry';\r\nimport {DriveQueryKeys} from '../../drive-query-keys';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {apiClient} from '@common/http/query-client';\r\n\r\ninterface FolderPathResponse extends BackendResponse {\r\n  path: DriveFolder[];\r\n}\r\n\r\ntype Params = Record<string, string | number | null>;\r\n\r\ninterface Props {\r\n  hash?: string;\r\n  params?: Params;\r\n  isEnabled?: boolean;\r\n}\r\nexport function useFolderPath({hash, params, isEnabled = true}: Props) {\r\n  return useQuery({\r\n    queryKey: DriveQueryKeys.fetchFolderPath(hash!, params),\r\n    queryFn: () => fetchFolderPath(hash!, params),\r\n    enabled: !!hash && isEnabled,\r\n  });\r\n}\r\n\r\nfunction fetchFolderPath(\r\n  hash: string,\r\n  params?: Params,\r\n): Promise<FolderPathResponse> {\r\n  return apiClient\r\n    .get(`folders/${hash}/path`, {params})\r\n    .then(response => response.data);\r\n}\r\n","import React, {ReactElement, ReactNode} from 'react';\r\nimport clsx from 'clsx';\r\nimport {DriveFolder} from '../../../files/drive-entry';\r\nimport {useFolderPath} from '../../../files/queries/use-folder-path';\r\nimport {Breadcrumb} from '@common/ui/breadcrumbs/breadcrumb';\r\nimport {ShareableLink} from '../../shareable-link';\r\nimport {useLinkPageStore} from '../link-page-store';\r\nimport {BreadcrumbItem} from '@common/ui/breadcrumbs/breadcrumb-item';\r\nimport {useNavigateToSubfolder} from './use-navigate-to-subfolder';\r\n\r\ninterface Props {\r\n  className?: string;\r\n  folder?: DriveFolder;\r\n  link: ShareableLink;\r\n}\r\nexport function FolderPreviewBreadcrumb({className, folder, link}: Props) {\r\n  const navigateToSubfolder = useNavigateToSubfolder();\r\n  const password = useLinkPageStore(s => s.password);\r\n  const query = useFolderPath({\r\n    hash: folder?.hash,\r\n    params: {\r\n      shareable_link: link.id,\r\n      password,\r\n    },\r\n  });\r\n\r\n  let content: ReactNode;\r\n\r\n  if (query.isLoading) {\r\n    content = null;\r\n  } else {\r\n    const items: {folder: DriveFolder; label: ReactElement}[] = [];\r\n    if (query.data) {\r\n      query.data.path.forEach(parent => {\r\n        items.push({\r\n          folder: parent,\r\n          label: <>{parent.name}</>,\r\n        });\r\n      });\r\n    }\r\n\r\n    content = (\r\n      <Breadcrumb size=\"lg\" isNavigation>\r\n        {items.map(item => {\r\n          return (\r\n            <BreadcrumbItem\r\n              onSelected={() => {\r\n                navigateToSubfolder(item.folder.hash);\r\n              }}\r\n              key={item.folder.hash}\r\n            >\r\n              {item.label}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    );\r\n  }\r\n\r\n  return <div className={clsx('h-36 flex-shrink-0', className)}>{content}</div>;\r\n}\r\n","import {message} from '@common/i18n/message';\r\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\r\n\r\nexport const AVAILABLE_SORTS: DriveSortOption[] = [\r\n  {id: 'file_size', label: message('Size')},\r\n  {id: 'name', label: message('Name')},\r\n  {id: 'updated_at', label: message('Last modified')},\r\n  {id: 'created_at', label: message('Upload date')},\r\n  {id: 'type', label: message('Type')},\r\n  {id: 'extension', label: message('Extension')},\r\n];\r\n\r\nexport interface DriveSortOption {\r\n  id: SortColumn;\r\n  label: MessageDescriptor;\r\n}\r\n\r\nexport type SortColumn =\r\n  | 'file_size'\r\n  | 'name'\r\n  | 'updated_at'\r\n  | 'created_at'\r\n  | 'type'\r\n  | 'extension';\r\n\r\nexport type SortDirection = 'desc' | 'asc';\r\n\r\nexport interface SortValue {\r\n  column: SortColumn;\r\n  direction: SortDirection;\r\n}\r\n","import {AVAILABLE_SORTS, SortColumn} from './available-sorts';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {SortIcon} from '@common/icons/material/Sort';\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  MenuSection,\r\n  MenuTrigger,\r\n} from '@common/ui/navigation/menu/menu-trigger';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport type {DriveSortDescriptor} from '../../drive-store';\r\n\r\ninterface Props {\r\n  descriptor: DriveSortDescriptor;\r\n  onChange: (value: DriveSortDescriptor) => void;\r\n  isDisabled?: boolean;\r\n}\r\nexport function EntriesSortButton({\r\n  descriptor,\r\n  onChange,\r\n  isDisabled = false,\r\n}: Props) {\r\n  const column = descriptor.orderBy;\r\n  const direction = descriptor.orderDir;\r\n  const sort = AVAILABLE_SORTS.find(s => s.id === column);\r\n\r\n  return (\r\n    <MenuTrigger\r\n      showCheckmark\r\n      selectionMode=\"multiple\"\r\n      selectedValue={[direction || 'desc', column || '']}\r\n      onItemSelected={key => {\r\n        if (key === 'asc' || key === 'desc') {\r\n          onChange({\r\n            orderBy: column,\r\n            orderDir: key,\r\n          });\r\n        } else {\r\n          onChange({\r\n            orderBy: key as SortColumn,\r\n            orderDir: direction,\r\n          });\r\n        }\r\n      }}\r\n    >\r\n      <Button\r\n        className=\"text-muted\"\r\n        variant=\"text\"\r\n        size=\"sm\"\r\n        startIcon={<SortIcon />}\r\n        disabled={isDisabled}\r\n      >\r\n        {sort ? <Trans {...sort.label} /> : null}\r\n      </Button>\r\n      <Menu>\r\n        <MenuSection label={<Trans message=\"Direction\" />}>\r\n          <MenuItem value=\"asc\">\r\n            <Trans message=\"Ascending\" />\r\n          </MenuItem>\r\n          <MenuItem value=\"desc\">\r\n            <Trans message=\"Descending\" />\r\n          </MenuItem>\r\n        </MenuSection>\r\n        <MenuSection label={<Trans message=\"Sort By\" />}>\r\n          {AVAILABLE_SORTS.map(item => (\r\n            <MenuItem key={item.id} value={item.id}>\r\n              <Trans {...item.label} />\r\n            </MenuItem>\r\n          ))}\r\n        </MenuSection>\r\n      </Menu>\r\n    </MenuTrigger>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {FolderPreviewBreadcrumb} from './folder-preview-breadcrumb';\r\nimport {EntriesSortButton} from '../../../layout/sorting/entries-sort-button';\r\nimport {linkPageState, useLinkPageStore} from '../link-page-store';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {GridViewIcon} from '@common/icons/material/GridView';\r\nimport {useShareableLinkPage} from '../../queries/use-shareable-link-page';\r\nimport {DriveFolder} from '../../../files/drive-entry';\r\n\r\nexport function FolderPreviewHeader() {\r\n  const activeSort = useLinkPageStore(s => s.activeSort);\r\n  const {link, isFetching} = useShareableLinkPage();\r\n  const hasEntry = link && link.entry;\r\n\r\n  return (\r\n    <div className=\"md:flex-row flex flex-col md:items-center gap-14 justify-between p-14 md:p-24 md:h-90\">\r\n      {hasEntry && (\r\n        <FolderPreviewBreadcrumb\r\n          link={link}\r\n          folder={link.entry as DriveFolder}\r\n          className=\"flex-auto\"\r\n        />\r\n      )}\r\n      {hasEntry && (\r\n        <div className=\"flex items-center justify-between md:justify-start text-muted\">\r\n          <EntriesSortButton\r\n            isDisabled={isFetching}\r\n            descriptor={activeSort}\r\n            onChange={value => {\r\n              linkPageState().setActiveSort(value);\r\n            }}\r\n          />\r\n          <div className=\"md:border-l md:pl-10 ml-10\">\r\n            <IconButton\r\n              onClick={() => {\r\n                linkPageState().setViewMode(\r\n                  linkPageState().viewMode === 'grid' ? 'list' : 'grid'\r\n                );\r\n              }}\r\n            >\r\n              <GridViewIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {useShareableLinkPage} from '../../queries/use-shareable-link-page';\r\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\r\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\r\nimport {FolderPreviewFileView} from './folder-preview-file-view';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {DashboardLayout} from '@common/ui/layout/dashboard-layout';\r\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\r\nimport {DashboardContent} from '@common/ui/layout/dashboard-content';\r\nimport {DashboardNavbar} from '@common/ui/layout/dashboard-navbar';\r\nimport {DashboardContentHeader} from '@common/ui/layout/dashboard-content-header';\r\nimport {ShareableLinkPageActionButtons} from '../shareable-link-page-action-buttons';\r\nimport {FolderPreviewHeader} from './folder-preview-header';\r\nimport shareSvg from './share.svg';\r\nimport clsx from 'clsx';\r\n\r\nexport function FolderPreview() {\r\n  const {entries, isFetched} = useShareableLinkPage();\r\n  const showEmptyMessage = isFetched && !entries?.length;\r\n\r\n  return (\r\n    <DashboardLayout name=\"folder-preview\">\r\n      <DashboardNavbar\r\n        hideToggleButton\r\n        rightChildren={<ShareableLinkPageActionButtons />}\r\n        color=\"bg\"\r\n      />\r\n      <DashboardContentHeader>\r\n        <FolderPreviewHeader />\r\n      </DashboardContentHeader>\r\n      <FileUploadProvider>\r\n        <DashboardContent>\r\n          {showEmptyMessage ? <EmptyMessage /> : <FolderPreviewFileView />}\r\n        </DashboardContent>\r\n      </FileUploadProvider>\r\n    </DashboardLayout>\r\n  );\r\n}\r\n\r\ninterface EmptyMessageProps {\r\n  className?: string;\r\n}\r\nfunction EmptyMessage({className}: EmptyMessageProps) {\r\n  return (\r\n    <IllustratedMessage\r\n      className={clsx(className, 'mt-80')}\r\n      image={<SvgImage src={shareSvg} />}\r\n      title={<Trans message=\"Folder is empty\" />}\r\n      description={\r\n        <Trans message=\"No files have been uploaded to this folder yet\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {FilePreviewContainer} from '@common/uploads/preview/file-preview-container';\r\nimport {useShareableLinkPage} from '../queries/use-shareable-link-page';\r\nimport {ShareableLinkNavbar} from './shareable-link-navbar';\r\nimport {AdHost} from '@common/admin/ads/ad-host';\r\n\r\nexport function ShareableLinkPageFilePreview() {\r\n  const {link} = useShareableLinkPage();\r\n\r\n  if (!link?.entry) return null;\r\n\r\n  return (\r\n    <div className=\"flex h-screen flex-col bg-alt\">\r\n      <ShareableLinkNavbar />\r\n      <AdHost slot=\"file-preview\" className=\"mx-auto mt-24\" />\r\n      <FilePreviewContainer\r\n        entries={[link.entry]}\r\n        showHeader={false}\r\n        allowDownload={link.allow_download}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, {ReactElement} from 'react';\r\nimport {useShareableLinkPage} from '../queries/use-shareable-link-page';\r\nimport {useLinkPageStore} from './link-page-store';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {ProgressCircle} from '@common/ui/progress/progress-circle';\r\nimport {PasswordPage} from './password-page';\r\nimport {FolderPreview} from './folder-preview/folder-preview';\r\nimport {ShareableLinkPageFilePreview} from './shareable-link-page-file-preview';\r\nimport {FileEntryUrlsContext} from '@common/uploads/hooks/file-entry-urls';\r\nimport {NotFoundPage} from '@common/ui/not-found-page/not-found-page';\r\n\r\nexport function ShareableLinkPage() {\r\n  const {status, link} = useShareableLinkPage();\r\n  const {trans} = useTrans();\r\n  const isPasswordProtected = useLinkPageStore(s => s.isPasswordProtected);\r\n  const password = useLinkPageStore(s => s.password);\r\n\r\n  let content: ReactElement;\r\n\r\n  if (status === 'pending') {\r\n    content = (\r\n      <div className=\"flex h-screen flex-auto items-center justify-center\">\r\n        <ProgressCircle\r\n          aria-label={trans({message: 'Loading link'})}\r\n          isIndeterminate\r\n        />\r\n      </div>\r\n    );\r\n  } else if (!link && !isPasswordProtected) {\r\n    return <NotFoundPage />;\r\n  } else if (isPasswordProtected && !password) {\r\n    content = <PasswordPage />;\r\n  } else if (link?.entry?.type === 'folder') {\r\n    content = <FolderPreview />;\r\n  } else {\r\n    content = <ShareableLinkPageFilePreview />;\r\n  }\r\n\r\n  return (\r\n    <FileEntryUrlsContext.Provider value={{shareable_link: link?.id, password}}>\r\n      {content}\r\n    </FileEntryUrlsContext.Provider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {ProgressBarBase, ProgressBarBaseProps} from './progress-bar-base';\r\n\r\nexport function Meter(props: ProgressBarBaseProps) {\r\n  return <ProgressBarBase {...props} role=\"meter progressbar\" />;\r\n}\r\n","import React from 'react';\r\nimport {useStorageSummary} from './storage-summary';\r\nimport {StorageIcon} from '@common/icons/material/Storage';\r\nimport {Meter} from '@common/ui/progress/meter';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport clsx from 'clsx';\r\n\r\nexport function StorageMeter() {\r\n  const {isLoading, data} = useStorageSummary();\r\n\r\n  // prevent translation placeholders from showing if summary is not loaded yet\r\n  const label = (\r\n    <span className={clsx('whitespace-nowrap', isLoading && 'invisible')}>\r\n      <Trans\r\n        message=\":used of :available used\"\r\n        values={{\r\n          used: data?.usedFormatted,\r\n          available: data?.availableFormatted,\r\n        }}\r\n      />\r\n    </span>\r\n  );\r\n  return (\r\n    <div className=\"pl-24 pt-24 mt-24 border-t flex items-start gap-16\">\r\n      <StorageIcon className=\"icon-md -mt-4\" />\r\n      <Meter\r\n        className=\"flex-auto max-w-144\"\r\n        size=\"xs\"\r\n        value={data?.percentage}\r\n        label={label}\r\n        showValueLabel={false}\r\n        labelPosition=\"bottom\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {toast} from '../../ui/toast/toast';\r\nimport {apiClient, queryClient} from '../../http/query-client';\r\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\r\nimport {Workspace} from '../types/workspace';\r\nimport {onFormQueryError} from '../../errors/on-form-query-error';\r\nimport {message} from '../../i18n/message';\r\n\r\ninterface Response extends BackendResponse {\r\n  workspace: Workspace;\r\n}\r\n\r\ninterface Props {\r\n  name: string;\r\n}\r\n\r\nexport function useCreateWorkspace(form: UseFormReturn<Props>) {\r\n  return useMutation({\r\n    mutationFn: (props: Props) => createWorkspace(props),\r\n    onSuccess: () => {\r\n      toast(message('Created workspace'));\r\n      queryClient.invalidateQueries({\r\n        queryKey: WorkspaceQueryKeys.fetchUserWorkspaces,\r\n      });\r\n    },\r\n    onError: r => onFormQueryError(r, form),\r\n  });\r\n}\r\n\r\nfunction createWorkspace(props: Props): Promise<Response> {\r\n  return apiClient.post('workspace', props).then(r => r.data);\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport {FormTextField} from '../ui/forms/input-field/text-field/text-field';\r\nimport {Form} from '../ui/forms/form';\r\nimport {Button} from '../ui/buttons/button';\r\nimport {useCreateWorkspace} from './requests/create-workspace';\r\nimport {DialogFooter} from '../ui/overlays/dialog/dialog-footer';\r\nimport {useDialogContext} from '../ui/overlays/dialog/dialog-context';\r\nimport {Dialog} from '../ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '../ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '../ui/overlays/dialog/dialog-body';\r\nimport {Trans} from '../i18n/trans';\r\n\r\nexport function NewWorkspaceDialog() {\r\n  const form = useForm<{name: string}>();\r\n  const {formId, close} = useDialogContext();\r\n  const createWorkspace = useCreateWorkspace(form);\r\n\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Create workspace\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Form\r\n          form={form}\r\n          id={formId}\r\n          onSubmit={() => {\r\n            createWorkspace.mutate(form.getValues(), {\r\n              onSuccess: response => {\r\n                close(response.workspace.id);\r\n              },\r\n            });\r\n          }}\r\n        >\r\n          <FormTextField\r\n            name=\"name\"\r\n            autoFocus\r\n            label={<Trans message=\"Workspace name\" />}\r\n            minLength={3}\r\n            required\r\n          />\r\n        </Form>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button variant=\"text\" onClick={close}>\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          form={formId}\r\n          disabled={createWorkspace.isPending}\r\n        >\r\n          <Trans message=\"Create\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\r\nimport {Workspace} from '../types/workspace';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {apiClient} from '../../http/query-client';\r\n\r\nexport interface FetchWorkspaceWithMembersResponse extends BackendResponse {\r\n  workspace: Workspace;\r\n}\r\n\r\nfunction fetchWorkspaceWithMembers(\r\n  workspaceId: number,\r\n): Promise<FetchWorkspaceWithMembersResponse> {\r\n  return apiClient\r\n    .get(`workspace/${workspaceId}`)\r\n    .then(response => response.data);\r\n}\r\n\r\nexport function useWorkspaceWithMembers(workspaceId: number) {\r\n  return useQuery({\r\n    queryKey: WorkspaceQueryKeys.workspaceWithMembers(workspaceId),\r\n    queryFn: () => fetchWorkspaceWithMembers(workspaceId),\r\n  });\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '../../http/query-client';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {WorkspaceInvite} from '../types/workspace-invite';\r\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\r\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {\r\n  invites: WorkspaceInvite[];\r\n}\r\n\r\ninterface Props {\r\n  workspaceId: number;\r\n  emails: string[];\r\n  roleId: number;\r\n}\r\n\r\nfunction InviteMembers({workspaceId, ...other}: Props): Promise<Response> {\r\n  return apiClient\r\n    .post(`workspace/${workspaceId}/invite`, other)\r\n    .then(r => r.data);\r\n}\r\n\r\nexport function useInviteMembers() {\r\n  return useMutation({\r\n    mutationFn: (props: Props) => InviteMembers(props),\r\n    onSuccess: (response, props) => {\r\n      queryClient.invalidateQueries({\r\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId),\r\n      });\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {WorkspaceInvite} from '../types/workspace-invite';\r\nimport {toast} from '../../ui/toast/toast';\r\nimport {apiClient} from '../../http/query-client';\r\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {\r\n  invite: WorkspaceInvite;\r\n}\r\n\r\ninterface Props {\r\n  workspaceId: number;\r\n  inviteId: string;\r\n}\r\n\r\nfunction ResendInvite({\r\n  workspaceId,\r\n  inviteId,\r\n  ...other\r\n}: Props): Promise<Response> {\r\n  return apiClient\r\n    .post(`workspace/${workspaceId}/${inviteId}/resend`, other)\r\n    .then(r => r.data);\r\n}\r\n\r\nexport function useResendInvite() {\r\n  return useMutation({\r\n    mutationFn: (props: Props) => ResendInvite(props),\r\n    onSuccess: () => {\r\n      toast('Invite sent');\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n","const matcher =\r\n  /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\r\n\r\nexport function isEmail(string?: string): boolean {\r\n  if (!string) return false;\r\n  if (string.length > 320) return false;\r\n  return matcher.test(string);\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {toast} from '../../ui/toast/toast';\r\nimport {apiClient, queryClient} from '../../http/query-client';\r\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\r\nimport {WorkspaceMember} from '../types/workspace-member';\r\nimport {WorkspaceInvite} from '../types/workspace-invite';\r\nimport {message} from '../../i18n/message';\r\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\ninterface Props {\r\n  workspaceId: number;\r\n  member: WorkspaceMember | WorkspaceInvite;\r\n  roleId: number;\r\n}\r\n\r\nfunction ChangeRole({workspaceId, member, ...other}: Props): Promise<Response> {\r\n  const modelType = member.model_type;\r\n  const memberId =\r\n    member.model_type === 'invite' ? member.id : member.member_id;\r\n  return apiClient\r\n    .post(\r\n      `workspace/${workspaceId}/${modelType}/${memberId}/change-role`,\r\n      other,\r\n    )\r\n    .then(r => r.data);\r\n}\r\n\r\nexport function useChangeRole() {\r\n  return useMutation({\r\n    mutationFn: (props: Props) => ChangeRole(props),\r\n    onSuccess: (response, props) => {\r\n      toast(message('Role changed'));\r\n      queryClient.invalidateQueries({\r\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId),\r\n      });\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {apiClient, queryClient} from '../../http/query-client';\r\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\r\nimport {useAuth} from '../../auth/use-auth';\r\nimport {useActiveWorkspaceId} from '../active-workspace-id-context';\r\nimport {PersonalWorkspace} from '../user-workspaces';\r\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\ninterface Props {\r\n  workspaceId: number;\r\n  memberId: number | string;\r\n  memberType: 'invite' | 'member';\r\n}\r\n\r\nfunction removeMember({\r\n  workspaceId,\r\n  memberId,\r\n  memberType,\r\n}: Props): Promise<Response> {\r\n  const endpoint =\r\n    memberType === 'invite'\r\n      ? `workspace/invite/${memberId}`\r\n      : `workspace/${workspaceId}/member/${memberId}`;\r\n  return apiClient.delete(endpoint).then(r => r.data);\r\n}\r\n\r\nexport function useRemoveMember() {\r\n  const {workspaceId, setWorkspaceId} = useActiveWorkspaceId();\r\n  const {user} = useAuth();\r\n  return useMutation({\r\n    mutationFn: (props: Props) => removeMember(props),\r\n    onSuccess: (response, props) => {\r\n      queryClient.invalidateQueries({\r\n        queryKey: WorkspaceQueryKeys.fetchUserWorkspaces,\r\n      });\r\n      queryClient.invalidateQueries({\r\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(props.workspaceId),\r\n      });\r\n\r\n      // if user left workspace that is currently active, switch to personal workspace\r\n      if (props.memberId === user?.id && workspaceId === props.workspaceId) {\r\n        setWorkspaceId(PersonalWorkspace.id);\r\n      }\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n","import {ConfirmationDialog} from '../ui/overlays/dialog/confirmation-dialog';\r\nimport {Trans} from '../i18n/trans';\r\n\r\ninterface Props {\r\n  onConfirm?: () => void;\r\n  isLoading?: boolean;\r\n}\r\nexport function LeaveWorkspaceConfirmation({onConfirm, isLoading}: Props) {\r\n  return (\r\n    <ConfirmationDialog\r\n      isDanger\r\n      title={<Trans message=\"Leave workspace\" />}\r\n      isLoading={isLoading}\r\n      onConfirm={onConfirm}\r\n      body={\r\n        <div>\r\n          <Trans message=\"Are you sure you want to leave this workspace?\" />\r\n          <div className=\"mt-8 font-semibold\">\r\n            <Trans message=\"All resources you've created in the workspace will be transferred to workspace owner.\" />\r\n          </div>\r\n        </div>\r\n      }\r\n      confirm={<Trans message=\"Leave\" />}\r\n    />\r\n  );\r\n}\r\n","import {useEffect, useState} from 'react';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {useWorkspaceWithMembers} from './requests/workspace-with-members';\r\nimport {ProgressCircle} from '../ui/progress/progress-circle';\r\nimport {Workspace} from './types/workspace';\r\nimport {GroupIcon} from '../icons/material/Group';\r\nimport {WorkspaceMember} from './types/workspace-member';\r\nimport {useAuth} from '../auth/use-auth';\r\nimport {\r\n  ChipField,\r\n  ChipValue,\r\n} from '../ui/forms/input-field/chip-field/chip-field';\r\nimport {useValueLists} from '../http/value-lists';\r\nimport {Button} from '../ui/buttons/button';\r\nimport {ArrowDropDownIcon} from '../icons/material/ArrowDropDown';\r\nimport {useInviteMembers} from './requests/invite-members';\r\nimport {WorkspaceInvite} from './types/workspace-invite';\r\nimport {ConfirmationDialog} from '../ui/overlays/dialog/confirmation-dialog';\r\nimport {useResendInvite} from './requests/resend-invite';\r\nimport {isEmail} from '../utils/string/is-email';\r\nimport {ButtonSize} from '../ui/buttons/button-size';\r\nimport {useChangeRole} from './requests/change-role';\r\nimport {IconButton} from '../ui/buttons/icon-button';\r\nimport {useRemoveMember} from './requests/remove-member';\r\nimport {CloseIcon} from '../icons/material/Close';\r\nimport {ExitToAppIcon} from '../icons/material/ExitToApp';\r\nimport {toast} from '../ui/toast/toast';\r\nimport {DialogTrigger} from '../ui/overlays/dialog/dialog-trigger';\r\nimport {Menu, MenuItem, MenuTrigger} from '../ui/navigation/menu/menu-trigger';\r\nimport {useDialogContext} from '../ui/overlays/dialog/dialog-context';\r\nimport {Dialog} from '../ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '../ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '../ui/overlays/dialog/dialog-body';\r\nimport {Trans} from '../i18n/trans';\r\nimport {useTrans} from '../i18n/use-trans';\r\nimport {message} from '../i18n/message';\r\nimport {LeaveWorkspaceConfirmation} from './leave-workspace-confirmation';\r\n\r\ninterface WorkspaceMembersDialogProps {\r\n  workspace: Workspace;\r\n}\r\nexport function WorkspaceMembersDialog({\r\n  workspace,\r\n}: WorkspaceMembersDialogProps) {\r\n  const {data, isLoading} = useWorkspaceWithMembers(workspace.id);\r\n  return (\r\n    <Dialog size=\"lg\">\r\n      <DialogHeader>\r\n        <Trans message=\"Manage workspace members\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        {isLoading ? (\r\n          <div className=\"flex min-h-[238px] items-center justify-center\">\r\n            <ProgressCircle isIndeterminate aria-label=\"Loading workspace...\" />\r\n          </div>\r\n        ) : (\r\n          <Manager workspace={data!.workspace} />\r\n        )}\r\n      </DialogBody>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\ninterface ManagerProps {\r\n  workspace: Workspace;\r\n}\r\nfunction Manager({workspace}: ManagerProps) {\r\n  const {user} = useAuth();\r\n  const can = usePermissions(workspace);\r\n  const members: (WorkspaceMember | WorkspaceInvite)[] = [\r\n    ...(workspace.members || []),\r\n    ...(workspace.invites || []),\r\n  ];\r\n  const shouldHideOtherMembers = !can.update && !can.delete;\r\n\r\n  return (\r\n    <div>\r\n      {can.invite && <InviteChipField workspace={workspace} />}\r\n      <div className=\"mb-14 flex items-center gap-10 text-base\">\r\n        <GroupIcon className=\"icon-sm\" />\r\n        <Trans\r\n          message=\"Members of `:workspace`\"\r\n          values={{workspace: workspace.name}}\r\n        />\r\n      </div>\r\n      <AnimatePresence initial={false}>\r\n        {members.map(member => {\r\n          if (shouldHideOtherMembers && member.id !== user?.id) {\r\n            return null;\r\n          }\r\n          return (\r\n            <MemberListItem\r\n              key={`${member.model_type}.${member.id}`}\r\n              workspace={workspace}\r\n              member={member}\r\n            />\r\n          );\r\n        })}\r\n        {shouldHideOtherMembers && (\r\n          <div className=\"text-muted\">\r\n            <Trans\r\n              message=\"And [one one other member|:count other members]\"\r\n              values={{count: members.length}}\r\n            />\r\n          </div>\r\n        )}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface MemberListItemProps {\r\n  member: WorkspaceMember | WorkspaceInvite;\r\n  workspace: Workspace;\r\n}\r\nfunction MemberListItem({workspace, member}: MemberListItemProps) {\r\n  return (\r\n    <m.div\r\n      initial={{x: '-100%', opacity: 0}}\r\n      animate={{x: 0, opacity: 1}}\r\n      exit={{x: '100%', opacity: 0}}\r\n      transition={{type: 'tween', duration: 0.125}}\r\n      className=\"mb-20 flex items-start gap-14 text-sm\"\r\n      key={`${member.model_type}.${member.id}`}\r\n    >\r\n      <img\r\n        className=\"h-36 w-36 flex-shrink-0 rounded\"\r\n        src={member.avatar}\r\n        alt=\"\"\r\n      />\r\n      <div className=\"min-w-0 flex-auto items-center justify-between gap-14 md:flex\">\r\n        <div className=\"mb-10 overflow-hidden md:mb-0 md:mr-10\">\r\n          <div className=\"flex items-center justify-start gap-6\">\r\n            <div className=\"overflow-hidden text-ellipsis whitespace-nowrap\">\r\n              {member.display_name}\r\n            </div>\r\n            <MemberDisplayNameAppend workspace={workspace} member={member} />\r\n          </div>\r\n          <div className=\"text-muted\">{member.email}</div>\r\n        </div>\r\n        <MemberActions workspace={workspace} member={member} />\r\n      </div>\r\n    </m.div>\r\n  );\r\n}\r\n\r\nfunction usePermissions(workspace: Workspace) {\r\n  const {user: authUser} = useAuth();\r\n  const response = {update: false, invite: false, delete: false};\r\n  const permissions = ['update', 'invite', 'delete'] as const;\r\n  const authMember = workspace.members?.find(mb => mb.id === authUser?.id);\r\n\r\n  if (authMember) {\r\n    permissions.forEach(permission => {\r\n      response[permission] =\r\n        authMember.is_owner ||\r\n        !!authMember.permissions?.find(\r\n          p => p.name === `workspace_members.${permission}`,\r\n        );\r\n    });\r\n  }\r\n\r\n  return response;\r\n}\r\n\r\ninterface MemberActionsProps {\r\n  workspace: Workspace;\r\n  member: WorkspaceMember | WorkspaceInvite;\r\n}\r\nfunction MemberActions({workspace, member}: MemberActionsProps) {\r\n  const [selectedRole, setSelectedRole] = useState<number>(member.role_id);\r\n  const changeRole = useChangeRole();\r\n  const {user} = useAuth();\r\n\r\n  const can = usePermissions(workspace);\r\n  const isOwner = member.model_type === 'member' && member.is_owner;\r\n  const isCurrentUser =\r\n    member.model_type === 'member' && user?.id === member.id;\r\n\r\n  const roleSelector =\r\n    !can.update || isOwner || isCurrentUser ? (\r\n      <div className=\"ml-auto text-muted first:capitalize\">\r\n        <Trans message={member.role_name} />\r\n      </div>\r\n    ) : (\r\n      <RoleMenuTrigger\r\n        className=\"ml-auto flex-shrink-0\"\r\n        size=\"xs\"\r\n        value={selectedRole}\r\n        isDisabled={changeRole.isPending}\r\n        onChange={roleId => {\r\n          setSelectedRole(roleId);\r\n          changeRole.mutate({\r\n            roleId,\r\n            workspaceId: workspace.id,\r\n            member,\r\n          });\r\n        }}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <>\r\n      {roleSelector}\r\n      {!isOwner && (isCurrentUser || can.delete) && (\r\n        <RemoveMemberButton\r\n          type={isCurrentUser ? 'leave' : 'remove'}\r\n          member={member}\r\n          workspace={workspace}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\ninterface InviteChipFieldProps {\r\n  workspace: Workspace;\r\n}\r\nfunction InviteChipField({workspace}: InviteChipFieldProps) {\r\n  const {trans} = useTrans();\r\n  const [chips, setChips] = useState<ChipValue[]>([]);\r\n  const allEmailsValid = chips.every(chip => !chip.invalid);\r\n  const displayWith = (chip: ChipValue) => chip.description || chip.name;\r\n  const [selectedRole, setSelectedRole] = useState<number>();\r\n  const inviteMembers = useInviteMembers();\r\n  const {data} = useValueLists(['workspaceRoles']);\r\n\r\n  useEffect(() => {\r\n    if (!selectedRole && data?.workspaceRoles?.length) {\r\n      setSelectedRole(data.workspaceRoles[0].id);\r\n    }\r\n  }, [data, selectedRole]);\r\n\r\n  return (\r\n    <div className=\"mb-30\">\r\n      <ChipField\r\n        value={chips}\r\n        onChange={setChips}\r\n        displayWith={displayWith}\r\n        validateWith={chip => {\r\n          const invalid = !isEmail(chip.description);\r\n          return {\r\n            ...chip,\r\n            invalid,\r\n            errorMessage: invalid\r\n              ? trans({message: 'Not a valid email'})\r\n              : undefined,\r\n          };\r\n        }}\r\n        placeholder={trans({message: 'Enter email addresses'})}\r\n        label={<Trans message=\"Invite people\" />}\r\n      />\r\n      <div className=\"mt-14 flex items-center justify-between gap-14\">\r\n        <RoleMenuTrigger onChange={setSelectedRole} value={selectedRole} />\r\n        {chips.length && selectedRole ? (\r\n          <Button\r\n            variant=\"flat\"\r\n            color=\"primary\"\r\n            size=\"sm\"\r\n            disabled={inviteMembers.isPending || !allEmailsValid}\r\n            onClick={() => {\r\n              inviteMembers.mutate(\r\n                {\r\n                  emails: chips.map(c => displayWith(c)),\r\n                  roleId: selectedRole,\r\n                  workspaceId: workspace.id,\r\n                },\r\n                {\r\n                  onSuccess: () => {\r\n                    setChips([]);\r\n                  },\r\n                },\r\n              );\r\n            }}\r\n          >\r\n            <Trans message=\"Invite\" />\r\n          </Button>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface RemoveMemberButtonProps {\r\n  member: WorkspaceMember | WorkspaceInvite;\r\n  workspace: Workspace;\r\n  type: 'leave' | 'remove';\r\n}\r\nfunction RemoveMemberButton({\r\n  member,\r\n  workspace,\r\n  type,\r\n}: RemoveMemberButtonProps) {\r\n  const removeMember = useRemoveMember();\r\n  const {close} = useDialogContext();\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={isConfirmed => {\r\n        if (isConfirmed) {\r\n          removeMember.mutate({\r\n            workspaceId: workspace.id,\r\n            memberId: member.id,\r\n            memberType: member.model_type,\r\n          });\r\n          if (type === 'leave') {\r\n            close();\r\n            toast(message('Left workspace'));\r\n          }\r\n        }\r\n      }}\r\n    >\r\n      <IconButton\r\n        size=\"md\"\r\n        className=\"flex-shrink-0 text-muted\"\r\n        disabled={removeMember.isPending}\r\n      >\r\n        {type === 'leave' ? <ExitToAppIcon /> : <CloseIcon />}\r\n      </IconButton>\r\n      {type === 'leave' ? (\r\n        <LeaveWorkspaceConfirmation />\r\n      ) : (\r\n        <RemoveMemberConfirmation member={member} />\r\n      )}\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\ninterface RemoveMemberConfirmationProps {\r\n  member: WorkspaceMember | WorkspaceInvite;\r\n}\r\nfunction RemoveMemberConfirmation({member}: RemoveMemberConfirmationProps) {\r\n  return (\r\n    <ConfirmationDialog\r\n      isDanger\r\n      title={<Trans message=\"Remove member\" />}\r\n      body={\r\n        <div>\r\n          <Trans\r\n            message=\"Are you sure you want to remove `:name`?\"\r\n            values={{name: member.display_name}}\r\n          />\r\n          <div className=\"mt-8 font-semibold\">\r\n            <Trans\r\n              message=\"All workspace resources created by `:name` will be transferred to workspace owner.\"\r\n              values={{\r\n                name: member.display_name,\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      }\r\n      confirm={<Trans message=\"Remove\" />}\r\n    />\r\n  );\r\n}\r\n\r\ninterface RoleMenuTriggerProps {\r\n  onChange: (value: number) => void;\r\n  value?: number;\r\n  size?: ButtonSize;\r\n  className?: string;\r\n  isDisabled?: boolean;\r\n}\r\nfunction RoleMenuTrigger({\r\n  value,\r\n  onChange,\r\n  size = 'xs',\r\n  className,\r\n  isDisabled,\r\n}: RoleMenuTriggerProps) {\r\n  const {data} = useValueLists(['workspaceRoles']);\r\n  const role = data?.workspaceRoles?.find(r => r.id === value);\r\n  if (!value || !role || !data?.workspaceRoles) return null;\r\n\r\n  return (\r\n    <MenuTrigger\r\n      selectionMode=\"single\"\r\n      selectedValue={value}\r\n      onSelectionChange={newValue => {\r\n        onChange(newValue as number);\r\n      }}\r\n    >\r\n      <Button\r\n        className={className}\r\n        size={size}\r\n        variant=\"flat\"\r\n        color=\"chip\"\r\n        disabled={isDisabled}\r\n        endIcon={<ArrowDropDownIcon />}\r\n      >\r\n        <Trans message={role.name} />\r\n      </Button>\r\n      <Menu>\r\n        {data.workspaceRoles.map(r => (\r\n          <MenuItem value={r.id} key={r.id} description={r.description}>\r\n            <Trans message={r.name} />\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </MenuTrigger>\r\n  );\r\n}\r\n\r\ninterface MemberDisplayNameAppendProps {\r\n  member: WorkspaceMember | WorkspaceInvite;\r\n  workspace: Workspace;\r\n}\r\nfunction MemberDisplayNameAppend({\r\n  member,\r\n  workspace,\r\n}: MemberDisplayNameAppendProps) {\r\n  const {user} = useAuth();\r\n  const can = usePermissions(workspace);\r\n\r\n  if (user?.id === member.id) {\r\n    return (\r\n      <div className=\"font-medium\">\r\n        (<Trans message=\"You\" />)\r\n      </div>\r\n    );\r\n  }\r\n  if (member.model_type === 'invite') {\r\n    return (\r\n      <div className=\"flex items-center gap-4\">\r\n        <div>·</div>\r\n        <div className=\"font-medium\">\r\n          <Trans message=\"Invited\" />\r\n        </div>\r\n        {can.invite ? (\r\n          <>\r\n            <div>·</div>\r\n            <ResendInviteDialogTrigger member={member} workspace={workspace} />\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction ResendInviteDialogTrigger({\r\n  member,\r\n  workspace,\r\n}: MemberDisplayNameAppendProps) {\r\n  const resendInvite = useResendInvite();\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      onClose={isConfirmed => {\r\n        if (isConfirmed) {\r\n          resendInvite.mutate({\r\n            workspaceId: workspace.id,\r\n            inviteId: member.id as string,\r\n          });\r\n        }\r\n      }}\r\n    >\r\n      <Button\r\n        variant=\"link\"\r\n        size=\"sm\"\r\n        color=\"primary\"\r\n        disabled={resendInvite.isPending}\r\n      >\r\n        <Trans message=\"Resend invite\" />\r\n      </Button>\r\n      <ConfirmationDialog\r\n        title={<Trans message=\"Resend invite\" />}\r\n        body={\r\n          <Trans message=\"Are you sure you want to send this invite again?\" />\r\n        }\r\n        confirm={<Trans message=\"Send\" />}\r\n      />\r\n    </DialogTrigger>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {toast} from '../../ui/toast/toast';\r\nimport {apiClient, queryClient} from '../../http/query-client';\r\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\r\nimport {Workspace} from '../types/workspace';\r\nimport {onFormQueryError} from '../../errors/on-form-query-error';\r\nimport {useDialogContext} from '../../ui/overlays/dialog/dialog-context';\r\nimport {message} from '../../i18n/message';\r\n\r\ninterface Response extends BackendResponse {\r\n  workspace: Workspace;\r\n}\r\n\r\nexport interface UpdateWorkspacePayload {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nfunction updateWorkspace({\r\n  id,\r\n  ...props\r\n}: UpdateWorkspacePayload): Promise<Response> {\r\n  return apiClient.put(`workspace/${id}`, props).then(r => r.data);\r\n}\r\n\r\nexport function useUpdateWorkspace(\r\n  form: UseFormReturn<UpdateWorkspacePayload>,\r\n) {\r\n  const {close} = useDialogContext();\r\n  return useMutation({\r\n    mutationFn: (props: UpdateWorkspacePayload) => updateWorkspace(props),\r\n    onSuccess: response => {\r\n      close();\r\n      toast(message('Updated workspace'));\r\n      queryClient.invalidateQueries({\r\n        queryKey: WorkspaceQueryKeys.fetchUserWorkspaces,\r\n      });\r\n      queryClient.invalidateQueries({\r\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(\r\n          response.workspace.id,\r\n        ),\r\n      });\r\n    },\r\n    onError: r => onFormQueryError(r, form),\r\n  });\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport {FormTextField} from '../ui/forms/input-field/text-field/text-field';\r\nimport {Form} from '../ui/forms/form';\r\nimport {Button} from '../ui/buttons/button';\r\nimport {DialogFooter} from '../ui/overlays/dialog/dialog-footer';\r\nimport {useDialogContext} from '../ui/overlays/dialog/dialog-context';\r\nimport {Dialog} from '../ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '../ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '../ui/overlays/dialog/dialog-body';\r\nimport {\r\n  UpdateWorkspacePayload,\r\n  useUpdateWorkspace,\r\n} from './requests/update-workspace';\r\nimport {Workspace} from './types/workspace';\r\nimport {Trans} from '../i18n/trans';\r\n\r\ninterface Props {\r\n  workspace: Workspace;\r\n}\r\nexport function RenameWorkspaceDialog({workspace}: Props) {\r\n  const form = useForm<UpdateWorkspacePayload>({\r\n    defaultValues: {id: workspace.id, name: workspace.name},\r\n  });\r\n  const {formId, close} = useDialogContext();\r\n  const updateWorkspace = useUpdateWorkspace(form);\r\n\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Rename workspace\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Form\r\n          form={form}\r\n          id={formId}\r\n          onSubmit={() => {\r\n            updateWorkspace.mutate(form.getValues());\r\n          }}\r\n        >\r\n          <FormTextField\r\n            name=\"name\"\r\n            autoFocus\r\n            label={<Trans message=\"Name\" />}\r\n            minLength={3}\r\n            required\r\n          />\r\n        </Form>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button variant=\"text\" onClick={close}>\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          form={formId}\r\n          disabled={updateWorkspace.isPending}\r\n        >\r\n          <Trans message=\"Rename\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {BackendResponse} from '../../http/backend-response/backend-response';\r\nimport {toast} from '../../ui/toast/toast';\r\nimport {apiClient, queryClient} from '../../http/query-client';\r\nimport {WorkspaceQueryKeys} from './workspace-query-keys';\r\nimport {useActiveWorkspaceId} from '../active-workspace-id-context';\r\nimport {PersonalWorkspace} from '../user-workspaces';\r\nimport {message} from '../../i18n/message';\r\nimport {showHttpErrorToast} from '../../utils/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {}\r\n\r\nexport interface DeleteWorkspacePayload {\r\n  id: number;\r\n}\r\n\r\nfunction deleteWorkspace({id}: DeleteWorkspacePayload): Promise<Response> {\r\n  return apiClient.delete(`workspace/${id}`).then(r => r.data);\r\n}\r\n\r\nexport function useDeleteWorkspace() {\r\n  const {workspaceId, setWorkspaceId} = useActiveWorkspaceId();\r\n  return useMutation({\r\n    mutationFn: (props: DeleteWorkspacePayload) => deleteWorkspace(props),\r\n    onSuccess: (r, payload) => {\r\n      toast(message('Deleted workspace'));\r\n      queryClient.invalidateQueries({\r\n        queryKey: WorkspaceQueryKeys.fetchUserWorkspaces,\r\n      });\r\n      queryClient.invalidateQueries({\r\n        queryKey: WorkspaceQueryKeys.workspaceWithMembers(payload.id),\r\n      });\r\n\r\n      // if user deleted workspace that is currently active, switch to personal workspace\r\n      if (workspaceId === payload.id) {\r\n        setWorkspaceId(PersonalWorkspace.id);\r\n      }\r\n    },\r\n    onError: err => showHttpErrorToast(err),\r\n  });\r\n}\r\n","import {Trans} from '@common/i18n/trans';\r\nimport {Link} from 'react-router-dom';\r\nimport {LinkStyle} from '@common/ui/buttons/external-link';\r\nimport {ReactElement, ReactNode} from 'react';\r\nimport {SectionHelper, SectionHelperProps} from '@common/ui/section-helper';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\nimport {PolicyFailReason} from '@common/billing/upgrade/policy-fail-reason';\r\n\r\ninterface Props {\r\n  className?: string;\r\n  // plural name in lowercase (e.g. 'projects')\r\n  resourceName?: ReactElement | string;\r\n  reason?: PolicyFailReason;\r\n  size?: SectionHelperProps['size'];\r\n  color?: SectionHelperProps['color'];\r\n  message?: ReactNode;\r\n}\r\nexport function PolicyFailMessage({\r\n  resourceName,\r\n  className,\r\n  size = 'md',\r\n  color = 'bgAlt',\r\n  reason = 'overQuota',\r\n  ...other\r\n}: Props) {\r\n  const message = other.message ?? (\r\n    <MessageText resourceName={resourceName!} reason={reason} />\r\n  );\r\n\r\n  return (\r\n    <SectionHelper\r\n      color={color}\r\n      size={size}\r\n      className={className}\r\n      description={message}\r\n    />\r\n  );\r\n}\r\n\r\ninterface MessageTextProps {\r\n  resourceName: ReactElement | string;\r\n  reason?: PolicyFailReason;\r\n}\r\nfunction MessageText({resourceName, reason}: MessageTextProps) {\r\n  const {billing} = useSettings();\r\n\r\n  if (reason === 'noWorkspacePermission') {\r\n    return (\r\n      <Trans\r\n        message=\"You can't create new :name in this workspace.\"\r\n        values={{name: resourceName}}\r\n      />\r\n    );\r\n  }\r\n\r\n  const upgradeMsgValues = {\r\n    name: resourceName,\r\n    a: (text: ReactNode) => (\r\n      <Link className={LinkStyle} to=\"/pricing\">\r\n        {text}\r\n      </Link>\r\n    ),\r\n  };\r\n\r\n  if (reason === 'overQuota' && billing.enable) {\r\n    return (\r\n      <Trans\r\n        message=\"Your plan is at its maximum number of :name allowed. <a>Upgrade to add more.</a>\"\r\n        values={upgradeMsgValues}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (reason === 'noPermission' && billing.enable) {\r\n    return (\r\n      <Trans\r\n        message=\"To unlock ability to create :name. <a>Upgrade your plan.</a>\"\r\n        values={upgradeMsgValues}\r\n      />\r\n    );\r\n  }\r\n\r\n  return <Trans message=\"You don't have permissions to create :name.\" />;\r\n}\r\n","import clsx from 'clsx';\r\nimport {\r\n  cloneElement,\r\n  forwardRef,\r\n  Fragment,\r\n  ReactElement,\r\n  useEffect,\r\n  useState,\r\n} from 'react';\r\nimport {ButtonBase} from '../ui/buttons/button-base';\r\nimport {PersonalWorkspace, useUserWorkspaces} from './user-workspaces';\r\nimport {UnfoldMoreIcon} from '../icons/material/UnfoldMore';\r\nimport {AddIcon} from '../icons/material/Add';\r\nimport {NewWorkspaceDialog} from './new-workspace-dialog';\r\nimport {WorkspaceMembersDialog} from './workspace-members-dialog';\r\nimport {\r\n  useActiveWorkspace,\r\n  useActiveWorkspaceId,\r\n} from './active-workspace-id-context';\r\nimport {DialogTrigger} from '../ui/overlays/dialog/dialog-trigger';\r\nimport {Workspace} from './types/workspace';\r\nimport {Dialog} from '../ui/overlays/dialog/dialog';\r\nimport {DialogBody} from '../ui/overlays/dialog/dialog-body';\r\nimport {Button, ButtonProps} from '../ui/buttons/button';\r\nimport {CheckIcon} from '../icons/material/Check';\r\nimport {Menu, MenuItem, MenuTrigger} from '../ui/navigation/menu/menu-trigger';\r\nimport {KeyboardArrowDownIcon} from '../icons/material/KeyboardArrowDown';\r\nimport {PersonAddIcon} from '../icons/material/PersonAdd';\r\nimport {DeleteIcon} from '../icons/material/Delete';\r\nimport {ExitToAppIcon} from '../icons/material/ExitToApp';\r\nimport {EditIcon} from '../icons/material/Edit';\r\nimport {RenameWorkspaceDialog} from './rename-workspace-dialog';\r\nimport {ConfirmationDialog} from '../ui/overlays/dialog/confirmation-dialog';\r\nimport {useDeleteWorkspace} from './requests/delete-workspace';\r\nimport {useRemoveMember} from './requests/remove-member';\r\nimport {useAuth} from '../auth/use-auth';\r\nimport {Trans} from '../i18n/trans';\r\nimport {LeaveWorkspaceConfirmation} from './leave-workspace-confirmation';\r\nimport {openDialog} from '@common/ui/overlays/store/dialog-store';\r\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\r\nimport {PolicyFailMessage} from '@common/billing/upgrade/policy-fail-message';\r\n\r\ninterface WorkspaceSelectorProps {\r\n  className?: string;\r\n  onChange?: (id: number) => void;\r\n  trigger?: ReactElement<ButtonProps>;\r\n  placement?: 'top' | 'bottom';\r\n}\r\nexport function WorkspaceSelector({\r\n  onChange,\r\n  className,\r\n  trigger,\r\n  placement = 'top',\r\n}: WorkspaceSelectorProps) {\r\n  const {data: workspaces, isFetched, isFetching} = useUserWorkspaces();\r\n  const {setWorkspaceId} = useActiveWorkspaceId();\r\n  const activeWorkspace = useActiveWorkspace();\r\n  const [selectorIsOpen, setSelectorIsOpen] = useState(false);\r\n  const {hasPermission} = useAuth();\r\n\r\n  // if user no longer has access to previously selected workspace, select personal one\r\n  useEffect(() => {\r\n    // make sure we don't unset active workspace while user workspaces are being re-fetched\r\n    if (isFetched && !isFetching && !activeWorkspace) {\r\n      setWorkspaceId(PersonalWorkspace.id);\r\n    }\r\n  }, [activeWorkspace, workspaces, setWorkspaceId, isFetched, isFetching]);\r\n\r\n  if (\r\n    // if we have a custom trigger, leave rendering up to the customer trigger\r\n    !trigger &&\r\n    (!activeWorkspace ||\r\n      (!hasPermission('workspaces.create') && workspaces?.length === 1))\r\n  ) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <DialogTrigger\r\n        type=\"popover\"\r\n        placement={placement}\r\n        isOpen={selectorIsOpen}\r\n        onClose={() => {\r\n          setSelectorIsOpen(false);\r\n        }}\r\n      >\r\n        {trigger ? (\r\n          cloneElement(trigger, {\r\n            onClick: () => setSelectorIsOpen(!selectorIsOpen),\r\n          })\r\n        ) : (\r\n          <DefaultTrigger\r\n            onClick={() => setSelectorIsOpen(!selectorIsOpen)}\r\n            workspace={activeWorkspace!}\r\n            className={className}\r\n          />\r\n        )}\r\n        <Dialog size=\"min-w-320\">\r\n          <DialogBody padding=\"p-10\">\r\n            <div className=\"mb-16 border-b pb-10\">\r\n              {workspaces?.map(workspace => (\r\n                <WorkspaceItem\r\n                  key={workspace.id}\r\n                  workspace={workspace}\r\n                  setSelectorIsOpen={setSelectorIsOpen}\r\n                  onChange={onChange}\r\n                />\r\n              ))}\r\n            </div>\r\n            <div className=\"mb-4 px-4 text-center\">\r\n              <CreateWorkspaceButton\r\n                onClick={() => setSelectorIsOpen(false)}\r\n                onCreated={id => onChange?.(id)}\r\n                workspaceCount={workspaces ? workspaces.length - 1 : 0}\r\n              />\r\n            </div>\r\n          </DialogBody>\r\n        </Dialog>\r\n      </DialogTrigger>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface CreateWorkspaceButtonProps {\r\n  onClick: () => void;\r\n  onCreated?: (id: number) => void;\r\n  workspaceCount: number;\r\n}\r\nfunction CreateWorkspaceButton({\r\n  onClick,\r\n  onCreated,\r\n  workspaceCount,\r\n}: CreateWorkspaceButtonProps) {\r\n  const {setWorkspaceId} = useActiveWorkspaceId();\r\n  const {checkOverQuotaOrNoPermission} = useAuth();\r\n  const {overQuotaOrNoPermission} = checkOverQuotaOrNoPermission(\r\n    'workspaces.create',\r\n    'count',\r\n    workspaceCount,\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <Button\r\n        disabled={overQuotaOrNoPermission}\r\n        onClick={async e => {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          onClick();\r\n          const workspaceId = await openDialog(NewWorkspaceDialog);\r\n          if (workspaceId) {\r\n            setWorkspaceId(workspaceId);\r\n            onCreated?.(workspaceId);\r\n          }\r\n        }}\r\n        variant=\"outline\"\r\n        startIcon={<AddIcon />}\r\n        color=\"primary\"\r\n        className=\"h-40 w-full\"\r\n      >\r\n        <Trans message=\"Create new workspace\" />\r\n      </Button>\r\n      {overQuotaOrNoPermission && (\r\n        <PolicyFailMessage\r\n          size=\"sm\"\r\n          className=\"mt-12 max-w-288\"\r\n          resourceName={<Trans message=\"worksapces\" />}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\ninterface DefaultTriggerProps {\r\n  onClick: () => void;\r\n  workspace: Workspace;\r\n  className?: string;\r\n}\r\nconst DefaultTrigger = forwardRef<HTMLButtonElement, DefaultTriggerProps>(\r\n  ({workspace, className, onClick, ...other}, ref) => {\r\n    return (\r\n      <ButtonBase\r\n        ref={ref}\r\n        onClick={onClick}\r\n        className={clsx(\r\n          'flex items-center gap-10 rounded ring-inset hover:bg-hover focus-visible:ring-2',\r\n          className,\r\n        )}\r\n        {...other}\r\n      >\r\n        <span className=\"mr-auto block flex-auto overflow-hidden text-left\">\r\n          <span className=\"block overflow-hidden overflow-ellipsis text-sm font-medium text-main\">\r\n            {workspace.default ? (\r\n              <Trans message={workspace.name} />\r\n            ) : (\r\n              workspace.name\r\n            )}\r\n          </span>\r\n          <span className=\"block text-xs text-muted\">\r\n            {workspace.default ? (\r\n              <Trans message=\"Personal workspace\" />\r\n            ) : (\r\n              <Trans\r\n                message=\":count members\"\r\n                values={{count: workspace.members_count}}\r\n              />\r\n            )}\r\n          </span>\r\n        </span>\r\n        <UnfoldMoreIcon className=\"shrink-0 icon-md\" />\r\n      </ButtonBase>\r\n    );\r\n  },\r\n);\r\n\r\ninterface WorkspaceItemProps {\r\n  workspace: Workspace;\r\n  onChange: WorkspaceSelectorProps['onChange'];\r\n  setSelectorIsOpen: (value: boolean) => void;\r\n}\r\nfunction WorkspaceItem({\r\n  workspace,\r\n  onChange,\r\n  setSelectorIsOpen,\r\n}: WorkspaceItemProps) {\r\n  const {workspaceId, setWorkspaceId} = useActiveWorkspaceId();\r\n  const isActive = workspaceId === workspace.id;\r\n\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        setWorkspaceId(workspace.id);\r\n        onChange?.(workspace.id);\r\n        setSelectorIsOpen(false);\r\n      }}\r\n      className={clsx(\r\n        'mb-4 flex cursor-pointer items-center gap-12 rounded-lg p-10 text-left',\r\n        isActive && 'bg-primary/5',\r\n        !isActive && 'hover:bg-hover',\r\n      )}\r\n    >\r\n      <CheckIcon\r\n        size=\"sm\"\r\n        className={clsx('flex-shrink-0 text-primary', !isActive && 'invisible')}\r\n      />\r\n      <div className=\"flex-auto\">\r\n        <div className={clsx('text-sm', isActive && 'font-semibold')}>\r\n          {workspace.name}\r\n        </div>\r\n        <div className=\"text-sm text-muted\">\r\n          {workspace.default ? (\r\n            <Trans message=\"Personal workspace\" />\r\n          ) : (\r\n            <Trans\r\n              message=\":count members\"\r\n              values={{count: workspace.members_count}}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n      {workspace.id !== 0 && (\r\n        <ManageButton\r\n          setSelectorIsOpen={setSelectorIsOpen}\r\n          workspace={workspace}\r\n          onChange={onChange}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface LeaveWorkspaceDialogProps {\r\n  workspace: Workspace;\r\n  onChange?: (id: number) => void;\r\n}\r\nfunction LeaveWorkspaceDialog({\r\n  workspace,\r\n  onChange,\r\n}: LeaveWorkspaceDialogProps) {\r\n  const removeMember = useRemoveMember();\r\n  const {user} = useAuth();\r\n  const {close} = useDialogContext();\r\n  return (\r\n    <LeaveWorkspaceConfirmation\r\n      isLoading={removeMember.isPending}\r\n      onConfirm={() => {\r\n        removeMember.mutate(\r\n          {\r\n            workspaceId: workspace.id,\r\n            memberId: user!.id,\r\n            memberType: 'member',\r\n          },\r\n          {\r\n            onSuccess: () => {\r\n              close();\r\n              onChange?.(PersonalWorkspace.id);\r\n            },\r\n          },\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\ninterface DeleteWorkspaceConfirmationProps {\r\n  workspace: Workspace;\r\n  onChange?: (id: number) => void;\r\n}\r\nfunction DeleteWorkspaceConfirmation({\r\n  workspace,\r\n  onChange,\r\n}: DeleteWorkspaceConfirmationProps) {\r\n  const deleteWorkspace = useDeleteWorkspace();\r\n  const {close} = useDialogContext();\r\n  return (\r\n    <ConfirmationDialog\r\n      isDanger\r\n      title={<Trans message=\"Delete workspace\" />}\r\n      body={\r\n        <Trans\r\n          message=\"Are you sure you want to delete “:name“?\"\r\n          values={{name: workspace.name}}\r\n        />\r\n      }\r\n      confirm={<Trans message=\"Delete\" />}\r\n      isLoading={deleteWorkspace.isPending}\r\n      onConfirm={() => {\r\n        deleteWorkspace.mutate(\r\n          {id: workspace.id},\r\n          {\r\n            onSuccess: () => {\r\n              close();\r\n              onChange?.(PersonalWorkspace.id);\r\n            },\r\n          },\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\ninterface ManageButtonProps {\r\n  setSelectorIsOpen: (value: boolean) => void;\r\n  workspace: Workspace;\r\n  onChange?: (id: number) => void;\r\n}\r\nfunction ManageButton({\r\n  setSelectorIsOpen,\r\n  workspace,\r\n  onChange,\r\n}: ManageButtonProps) {\r\n  const {user} = useAuth();\r\n\r\n  return (\r\n    <MenuTrigger onItemSelected={() => setSelectorIsOpen(false)}>\r\n      <Button\r\n        onClick={e => {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n        }}\r\n        color=\"primary\"\r\n        size=\"xs\"\r\n        variant=\"outline\"\r\n        endIcon={<KeyboardArrowDownIcon />}\r\n      >\r\n        <Trans message=\"Manage\" />\r\n      </Button>\r\n      <Menu>\r\n        <MenuItem\r\n          onClick={e => {\r\n            e.stopPropagation();\r\n            openDialog(WorkspaceMembersDialog, {workspace});\r\n          }}\r\n          value=\"workspaceMembers\"\r\n          startIcon={<PersonAddIcon />}\r\n        >\r\n          <Trans message=\"Members\" />\r\n        </MenuItem>\r\n        {workspace.owner_id === user?.id && (\r\n          <MenuItem\r\n            onClick={e => {\r\n              e.stopPropagation();\r\n              openDialog(RenameWorkspaceDialog, {workspace});\r\n            }}\r\n            value=\"updateWorkspace\"\r\n            startIcon={<EditIcon />}\r\n          >\r\n            <Trans message=\"Rename\" />\r\n          </MenuItem>\r\n        )}\r\n        {workspace.owner_id !== user?.id && (\r\n          <MenuItem\r\n            onClick={e => {\r\n              e.stopPropagation();\r\n              openDialog(LeaveWorkspaceDialog, {workspace, onChange});\r\n            }}\r\n            value=\"leaveWorkspace\"\r\n            startIcon={<ExitToAppIcon />}\r\n          >\r\n            <Trans message=\"Leave\" />\r\n          </MenuItem>\r\n        )}\r\n        {workspace.owner_id === user?.id && (\r\n          <MenuItem\r\n            onClick={e => {\r\n              e.stopPropagation();\r\n              openDialog(DeleteWorkspaceConfirmation, {workspace, onChange});\r\n            }}\r\n            value=\"deleteWorkspace\"\r\n            startIcon={<DeleteIcon />}\r\n          >\r\n            <Trans message=\"Delete\" />\r\n          </MenuItem>\r\n        )}\r\n      </Menu>\r\n    </MenuTrigger>\r\n  );\r\n}\r\n","export enum MenuPositions {\r\n  DriveSidebar = 'drive-sidebar',\r\n}\r\n","\"use strict\";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var r,t=1,n=arguments.length;t<n;t++)for(var o in r=arguments[t])Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o]);return e}).apply(this,arguments)},defaultConfig=(Object.defineProperty(exports,\"__esModule\",{value:!0}),{id:\"id\",parentId:\"parentId\",dataField:\"data\",childrenField:\"children\",throwIfOrphans:!1,rootParentIds:{\"\":!(exports.countNodes=exports.arrayToTree=void 0)},nestedIds:!0,assign:!1});function arrayToTree(c,e){void 0===e&&(e={});for(var r,t=__assign(__assign({},defaultConfig),e),n=[],o={},a=t.throwIfOrphans?new Set:null,s=0,h=c;s<h.length;s++){var i=h[s],d=t.nestedIds?getNestedProperty(i,t.id):i[t.id],l=t.nestedIds?getNestedProperty(i,t.parentId):i[t.parentId];if(t.rootParentIds[d])throw new Error(\"The item array contains a node whose parentId both exists in another node and is in \"+'`rootParentIds` (`itemId`: \"'.concat(d,'\", `rootParentIds`: ').concat(Object.keys(t.rootParentIds).map(function(e){return'\"'.concat(e,'\"')}).join(\", \"),\").\"));Object.prototype.hasOwnProperty.call(o,d)||(o[d]=((r={})[t.childrenField]=[],r)),a&&a.delete(d),t.dataField?o[d][t.dataField]=i:t.assign?o[d]=Object.assign(i,((r={})[t.childrenField]=o[d][t.childrenField],r)):o[d]=__assign(__assign({},i),((i={})[t.childrenField]=o[d][t.childrenField],i));i=o[d];null==l||t.rootParentIds[l]?n.push(i):(Object.prototype.hasOwnProperty.call(o,l)||(o[l]=((d={})[t.childrenField]=[],d),a&&a.add(l)),o[l][t.childrenField].push(i))}if(null!=a&&a.size)throw new Error(\"The items array contains orphans that point to the following parentIds: \"+\"[\".concat(Array.from(a),\"]. These parentIds do not exist in the items array. Hint: prevent orphans to result \")+\"in an error by passing the following option: { throwIfOrphans: false }\");if(t.throwIfOrphans&&countNodes(n,t.childrenField)<Object.keys(o).length)throw new Error(\"The items array contains nodes with a circular parent/child relationship.\");return n}function countNodes(e,t){return e.reduce(function(e,r){return e+1+(r[t]&&countNodes(r[t],t))},0)}function getNestedProperty(e,r){return r.split(\".\").reduce(function(e,r){return e&&e[r]},e)}exports.arrayToTree=arrayToTree,exports.countNodes=countNodes;","import {useQuery} from '@tanstack/react-query';\r\nimport {DriveFolder} from '../drive-entry';\r\nimport {useAuth} from '@common/auth/use-auth';\r\nimport {DriveQueryKeys} from '../../drive-query-keys';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\r\n\r\nexport interface UserFoldersApiParams {\r\n  userId: number;\r\n  workspaceId: number | null;\r\n}\r\n\r\ninterface UserFoldersResponse extends BackendResponse {\r\n  folders: DriveFolder[];\r\n  rootFolder: DriveFolder;\r\n}\r\n\r\nfunction fetchUserFolders(\r\n  params: UserFoldersApiParams,\r\n): Promise<UserFoldersResponse> {\r\n  return apiClient\r\n    .get(`users/${params.userId}/folders`, {params})\r\n    .then(response => response.data);\r\n}\r\n\r\nexport function useFolders() {\r\n  const {user} = useAuth();\r\n  const {workspaceId} = useActiveWorkspaceId();\r\n  const params: UserFoldersApiParams = {\r\n    userId: user!.id,\r\n    workspaceId,\r\n  };\r\n  return useQuery({\r\n    queryKey: DriveQueryKeys.fetchUserFolders(params),\r\n    queryFn: () => fetchUserFolders(params),\r\n    enabled: !!user,\r\n  });\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {DriveEntry} from '../drive-entry';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {invalidateEntryQueries} from '../../drive-query-keys';\r\nimport {message} from '@common/i18n/message';\r\nimport {FileEntry} from '@common/uploads/file-entry';\r\nimport {RootFolderPage} from '../../drive-page/drive-page';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\n\r\ninterface Response extends BackendResponse {\r\n  entries: DriveEntry[];\r\n  destination: FileEntry | null;\r\n}\r\n\r\ninterface Payload {\r\n  entryIds: number[];\r\n  destinationId?: number | null;\r\n}\r\n\r\nexport function useMoveEntries() {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => {\r\n      toast.loading(\r\n        message('Moving [one 1 item|other :count items]...', {\r\n          values: {\r\n            count: payload.entryIds.length,\r\n          },\r\n        }),\r\n        {disableExitAnimation: true},\r\n      );\r\n      return moveEntries(payload);\r\n    },\r\n    onSuccess: (r, p) => {\r\n      invalidateEntryQueries();\r\n      toast(\r\n        message('Moved [one 1 item|other :count items] to \":destination\"', {\r\n          values: {\r\n            count: p.entryIds.length,\r\n            destination: (r.destination || RootFolderPage.folder).name,\r\n          },\r\n        }),\r\n        {disableEnterAnimation: true},\r\n      );\r\n    },\r\n    onError: err =>\r\n      showHttpErrorToast(err, message('Could not move items'), null, {\r\n        disableEnterAnimation: true,\r\n      }),\r\n  });\r\n}\r\n\r\nfunction moveEntries(payload: Payload): Promise<Response> {\r\n  // backend expects null for root folder, it might be zero or empty string on frontend\r\n  payload.destinationId = !payload.destinationId ? null : payload.destinationId;\r\n  return apiClient\r\n    .post('file-entries/move', payload)\r\n    .then(response => response.data);\r\n}\r\n","import {FileEntry} from '@common/uploads/file-entry';\r\n\r\nexport interface PartialFolder {\r\n  id: number;\r\n  name: string;\r\n  path: string;\r\n  parent_id: number | null;\r\n  type: string;\r\n}\r\n\r\nexport function canMoveEntriesInto(\r\n  targets: FileEntry[],\r\n  destination: PartialFolder\r\n) {\r\n  if (destination.type !== 'folder') return false;\r\n\r\n  // should not be able to move folder into its\r\n  // own child or folder it's already in\r\n  return targets.every(target => {\r\n    if (!target) return false;\r\n    // entry is already in this folder\r\n    if (\r\n      destination.id === target.parent_id ||\r\n      // root folder check\r\n      (!target.parent_id && destination.id === 0)\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    return !destinationIsInTarget(destination, target);\r\n  });\r\n}\r\n\r\nfunction destinationIsInTarget(destination: PartialFolder, target: FileEntry) {\r\n  const destinationPath = (destination.path || '').split('/');\r\n  const targetPath = (target.path || '').split('/');\r\n  return targetPath.every((part, index) => {\r\n    return destinationPath[index] === part;\r\n  });\r\n}\r\n","import {FileEntry} from '@common/uploads/file-entry';\r\nimport {useMoveEntries} from './queries/use-move-entries';\r\nimport {useDriveUploadQueue} from '../uploading/use-drive-upload-queue';\r\nimport {canMoveEntriesInto} from './utils/can-move-entries-into';\r\nimport {\r\n  ConnectedDraggable,\r\n  MixedDraggable,\r\n} from '@common/ui/interactions/dnd/use-draggable';\r\nimport {NativeFileDraggable} from '@common/ui/interactions/dnd/use-droppable';\r\nimport {driveState} from '@app/drive/drive-store';\r\n\r\nexport function useFolderDropAction(folder: FileEntry) {\r\n  const moveEntries = useMoveEntries();\r\n  const {uploadFiles} = useDriveUploadQueue();\r\n\r\n  const onDrop = async (target: ConnectedDraggable | NativeFileDraggable) => {\r\n    if (folder.type !== 'folder') return;\r\n    if (target.type === 'nativeFile') {\r\n      uploadFiles(await target.getData(), {\r\n        metadata: {parentId: folder.id},\r\n      });\r\n    } else if (target.type === 'fileEntry') {\r\n      const entries = target.getData() as FileEntry[];\r\n      if (entries?.length && canMoveEntriesInto(entries, folder)) {\r\n        moveEntries.mutate({\r\n          destinationId: folder.id,\r\n          entryIds: entries.map(e => e.id),\r\n        });\r\n        driveState().deselectEntries('all');\r\n      }\r\n    }\r\n  };\r\n\r\n  return {onDrop};\r\n}\r\n\r\nexport function folderAcceptsDrop(target: MixedDraggable, entry: FileEntry) {\r\n  if (target.type === 'fileEntry') {\r\n    const entries = target.getData() as FileEntry[];\r\n    return canMoveEntriesInto(entries, entry);\r\n  }\r\n  return true;\r\n}\r\n","import {FileEntry} from '@common/uploads/file-entry';\r\n\r\nexport function makeFolderTreeDragId(entry: FileEntry) {\r\n  return `${entry.id}-tree`;\r\n}\r\n\r\nexport function isFolderTreeDragId(id: string | number): boolean {\r\n  return `${id}`.endsWith('-tree');\r\n}\r\n","import {useDroppable} from '@common/ui/interactions/dnd/use-droppable';\r\nimport {driveState} from '../../drive-store';\r\nimport {RefObject, useState} from 'react';\r\nimport {\r\n  folderAcceptsDrop,\r\n  useFolderDropAction,\r\n} from '../../files/use-folder-drop-action';\r\nimport {DriveFolder} from '../../files/drive-entry';\r\nimport {makeFolderTreeDragId} from './folder-tree-drag-id';\r\n\r\ninterface Props {\r\n  folder: DriveFolder;\r\n  ref: RefObject<HTMLDivElement>;\r\n}\r\nexport function useSidebarTreeDropTarget({folder, ref}: Props) {\r\n  const [isDragOver, setIsDragOver] = useState(false);\r\n  const {onDrop} = useFolderDropAction(folder);\r\n\r\n  const dropProps = useDroppable({\r\n    id: makeFolderTreeDragId(folder),\r\n    ref,\r\n    types: ['fileEntry', 'nativeFile'],\r\n    acceptsDrop: draggable => folderAcceptsDrop(draggable, folder),\r\n    onDragEnter: draggable => {\r\n      if (folderAcceptsDrop(draggable, folder)) {\r\n        setIsDragOver(true);\r\n      }\r\n    },\r\n    onDragLeave: () => {\r\n      setIsDragOver(false);\r\n    },\r\n    onDropActivate: () => {\r\n      if (!driveState().sidebarExpandedKeys.includes(folder.id)) {\r\n        driveState().setSidebarExpandedKeys([\r\n          ...driveState().sidebarExpandedKeys,\r\n          folder.id,\r\n        ]);\r\n      }\r\n    },\r\n    onDrop,\r\n  });\r\n\r\n  return {...dropProps, isDragOver};\r\n}\r\n","import {createContext, Key} from 'react';\r\n\r\nexport interface TreeContextValue {\r\n  expandedKeys: Key[];\r\n  setExpandedKeys: (value: Key[]) => void;\r\n  selectedKeys: Key[];\r\n  setSelectedKeys: (value: Key[]) => void;\r\n  focusedNode?: Key;\r\n  setFocusedNode: (node?: Key) => void;\r\n}\r\n\r\nexport const TreeContext = createContext<TreeContextValue>(null!);\r\n","import {TreeItemRenderer} from './tree-item';\r\nimport {cloneElement} from 'react';\r\nimport {TreeNode} from './tree';\r\n\r\ninterface RenderTreeProps<T extends TreeNode> {\r\n  nodes: T[];\r\n  parentNode?: T;\r\n  itemRenderer: TreeItemRenderer<T>;\r\n  level?: number;\r\n}\r\nexport function renderTree<T extends TreeNode>({\r\n  nodes,\r\n  itemRenderer,\r\n  parentNode,\r\n  level,\r\n}: RenderTreeProps<T>) {\r\n  return nodes.map((node, index) => {\r\n    return cloneElement(itemRenderer(node), {\r\n      level: level == undefined ? 0 : level + 1,\r\n      index,\r\n      node,\r\n      parentNode,\r\n      key: node.id,\r\n      itemRenderer,\r\n    });\r\n  });\r\n}\r\n","import React, {\r\n  forwardRef,\r\n  MouseEventHandler,\r\n  ReactNode,\r\n  useContext,\r\n} from 'react';\r\nimport {TreeContext} from './tree-context';\r\nimport clsx from 'clsx';\r\nimport {ArrowRightIcon} from '../../icons/material/ArrowRight';\r\n\r\ninterface TreeLabelProps {\r\n  level?: number;\r\n  node: any;\r\n  icon?: ReactNode;\r\n  label?: ReactNode;\r\n  className?: string;\r\n}\r\nexport const TreeLabel = forwardRef<HTMLDivElement, TreeLabelProps>(\r\n  ({icon, label, level = 0, node, className, ...domProps}, ref) => {\r\n    const {expandedKeys, setExpandedKeys, selectedKeys, setSelectedKeys} =\r\n      useContext(TreeContext);\r\n    const isExpanded = expandedKeys.includes(node.id);\r\n    const isSelected = selectedKeys.includes(node.id);\r\n\r\n    const handleExpandIconClick: MouseEventHandler = e => {\r\n      e.stopPropagation();\r\n      const index = expandedKeys.indexOf(node.id);\r\n      const newExpandedKeys = [...expandedKeys];\r\n      if (index > -1) {\r\n        newExpandedKeys.splice(index, 1);\r\n      } else {\r\n        newExpandedKeys.push(node.id);\r\n      }\r\n      setExpandedKeys(newExpandedKeys);\r\n    };\r\n\r\n    return (\r\n      <div\r\n        {...domProps}\r\n        ref={ref}\r\n        onClick={e => {\r\n          e.stopPropagation();\r\n          setSelectedKeys([node.id]);\r\n        }}\r\n        className={clsx(\r\n          'flex flex-nowrap whitespace-nowrap items-center gap-4 py-6 rounded header cursor-pointer overflow-hidden text-ellipsis tree-label',\r\n          className,\r\n          isSelected && 'bg-primary/selected text-primary font-bold',\r\n          !isSelected && 'hover:bg-hover'\r\n        )}\r\n      >\r\n        {level > 0 && (\r\n          <div className=\"flex\">\r\n            {Array.from({length: level}).map((_, i) => {\r\n              return <div key={i} className=\"w-24 h-24\" />;\r\n            })}\r\n          </div>\r\n        )}\r\n        <div onClick={handleExpandIconClick}>\r\n          <ArrowRightIcon\r\n            className={clsx(\r\n              'icon-sm cursor-default transition-transform',\r\n              isExpanded && 'rotate-90'\r\n            )}\r\n          />\r\n        </div>\r\n        {icon}\r\n        <div className=\"overflow-hidden text-ellipsis pr-6\">{label}</div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\nTreeLabel.displayName = 'TreeLabel';\r\n","import React, {\r\n  HTMLAttributes,\r\n  ReactElement,\r\n  ReactNode,\r\n  Ref,\r\n  useContext,\r\n  useEffect,\r\n} from 'react';\r\nimport {useFocusManager} from '@react-aria/focus';\r\nimport {TreeContext} from './tree-context';\r\nimport {createEventHandler} from '../../utils/dom/create-event-handler';\r\nimport clsx from 'clsx';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {TreeNode} from './tree';\r\nimport {renderTree} from './render-tree';\r\nimport {TreeLabel} from './tree-label';\r\n\r\nexport type TreeItemRenderer<T extends TreeNode> = (\r\n  node: any,\r\n) => ReactElement<TreeItemProps<T>>;\r\n\r\nexport interface TreeItemProps<T extends TreeNode>\r\n  extends HTMLAttributes<HTMLElement> {\r\n  label: ReactNode;\r\n  icon: ReactNode;\r\n  node?: T;\r\n  parentNode?: T;\r\n  level?: number;\r\n  index?: number;\r\n  itemRenderer?: TreeItemRenderer<T>;\r\n  labelRef?: Ref<HTMLDivElement>;\r\n  labelClassName?: string;\r\n  className?: string;\r\n}\r\nexport function TreeItem<T extends TreeNode>({\r\n  label,\r\n  icon,\r\n  node,\r\n  level,\r\n  index,\r\n  itemRenderer,\r\n  labelRef,\r\n  labelClassName,\r\n  className,\r\n  parentNode,\r\n  ...domProps\r\n}: TreeItemProps<T>) {\r\n  const focusManager = useFocusManager();\r\n  const {\r\n    expandedKeys,\r\n    selectedKeys,\r\n    focusedNode,\r\n    setFocusedNode,\r\n    setExpandedKeys,\r\n    setSelectedKeys,\r\n  } = useContext(TreeContext);\r\n\r\n  // clear focused node on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (focusedNode === node?.id) {\r\n        setFocusedNode(undefined);\r\n      }\r\n    };\r\n  }, [focusedNode, node?.id, setFocusedNode]);\r\n\r\n  if (!node || !itemRenderer) return null;\r\n\r\n  const hasChildren = node.children.length;\r\n  const isExpanded = hasChildren && expandedKeys.includes(node.id);\r\n  const isSelected = selectedKeys.includes(node.id);\r\n  const isFirstNode = level === 0 && index === 0;\r\n  const isFocused =\r\n    focusedNode == undefined ? isFirstNode : focusedNode === node.id;\r\n\r\n  const onKeyDown = (e: React.KeyboardEvent<HTMLUListElement>) => {\r\n    if (focusedNode == null) return;\r\n    switch (e.key) {\r\n      // select the node\r\n      case 'Enter':\r\n      case ' ':\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        setSelectedKeys([focusedNode]);\r\n        break;\r\n\r\n      // expand node, or move focus to first (and only first) child\r\n      case 'ArrowRight':\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        if (!hasChildren) return;\r\n\r\n        if (!isExpanded) {\r\n          setExpandedKeys([...expandedKeys, focusedNode]);\r\n        } else {\r\n          focusManager?.focusNext();\r\n        }\r\n        break;\r\n\r\n      // collapse node, or move focus to parent node\r\n      case 'ArrowLeft':\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        if (isExpanded) {\r\n          const index = expandedKeys.indexOf(focusedNode);\r\n          const newKeys = [...expandedKeys];\r\n          newKeys.splice(index, 1);\r\n          setExpandedKeys(newKeys);\r\n        } else if (parentNode) {\r\n          const parentEl =\r\n            document.activeElement?.parentElement?.closest('[tabindex]');\r\n          if (parentEl) {\r\n            (parentEl as HTMLElement).focus();\r\n          }\r\n        }\r\n        break;\r\n\r\n      // focus next visible node, recursively\r\n      case 'ArrowDown':\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        focusManager?.focusNext();\r\n        break;\r\n\r\n      // focus previous visible node, recursively\r\n      case 'ArrowUp':\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        focusManager?.focusPrevious();\r\n        break;\r\n\r\n      // focus first visible node\r\n      case 'Home':\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        focusManager?.focusFirst();\r\n        break;\r\n\r\n      // focus last visible node\r\n      case 'End':\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        focusManager?.focusLast();\r\n        break;\r\n\r\n      // expand all sibling nodes\r\n      case '*':\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        if (parentNode?.children) {\r\n          const newKeys = [...expandedKeys];\r\n          parentNode.children.forEach(childNode => {\r\n            if (\r\n              childNode.children.length &&\r\n              !expandedKeys.includes(childNode.id)\r\n            ) {\r\n              newKeys.push(childNode.id);\r\n            }\r\n          });\r\n          if (newKeys.length !== expandedKeys.length) {\r\n            setExpandedKeys(newKeys);\r\n          }\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li\r\n      role=\"treeitem\"\r\n      aria-expanded={isExpanded ? 'true' : 'false'}\r\n      aria-selected={isSelected}\r\n      tabIndex={isFocused ? 0 : -1}\r\n      onKeyDown={createEventHandler(onKeyDown)}\r\n      onFocus={e => {\r\n        e.stopPropagation();\r\n        setFocusedNode(node.id);\r\n      }}\r\n      onBlur={e => {\r\n        e.stopPropagation();\r\n        // only clear focus state when focus moves outside the tree\r\n        if (!e.currentTarget.contains(e.relatedTarget)) {\r\n          setFocusedNode(undefined);\r\n        }\r\n      }}\r\n      className={clsx(\r\n        'outline-none',\r\n        // focus direct .tree-label child when this element has :focus-visible\r\n        '[&>.tree-label]:focus-visible:ring [&>.tree-label]:focus-visible:ring-2 [&>.tree-label]:focus-visible:ring-inset',\r\n        className,\r\n      )}\r\n    >\r\n      <TreeLabel\r\n        ref={labelRef}\r\n        className={labelClassName}\r\n        node={node}\r\n        level={level}\r\n        label={label}\r\n        icon={icon}\r\n        {...domProps}\r\n      />\r\n      <AnimatePresence initial={false}>\r\n        {isExpanded ? (\r\n          <m.ul\r\n            key={`${node.id}-group`}\r\n            role=\"group\"\r\n            initial=\"closed\"\r\n            animate=\"open\"\r\n            exit=\"closed\"\r\n            variants={{\r\n              open: {opacity: 1, height: 'auto'},\r\n              closed: {opacity: 0, height: 0, overflow: 'hidden'},\r\n            }}\r\n          >\r\n            {renderTree({\r\n              nodes: node.children,\r\n              parentNode: node,\r\n              itemRenderer,\r\n              level,\r\n            })}\r\n          </m.ul>\r\n        ) : null}\r\n      </AnimatePresence>\r\n    </li>\r\n  );\r\n}\r\n","import React, {Key, useState} from 'react';\r\nimport {useControlledState} from '@react-stately/utils';\r\nimport {FocusScope} from '@react-aria/focus';\r\nimport {TreeContext, TreeContextValue} from './tree-context';\r\nimport {TreeItemRenderer} from './tree-item';\r\nimport {renderTree} from './render-tree';\r\n\r\nexport interface TreeNode {\r\n  id: number | string;\r\n  children: TreeNode[];\r\n}\r\n\r\ninterface TreeProps<T extends TreeNode> {\r\n  children: TreeItemRenderer<T>;\r\n  nodes: T[];\r\n  selectedKeys?: Key[];\r\n  expandedKeys?: Key[];\r\n  defaultExpandedKeys?: Key[];\r\n  onExpandedKeysChange?: (value: Key[]) => void;\r\n  defaultSelectedKeys?: Key[];\r\n  onSelectedKeysChange?: (value: Key[]) => void;\r\n}\r\nexport function Tree<T extends TreeNode>({\r\n  children,\r\n  nodes,\r\n  ...props\r\n}: TreeProps<T>) {\r\n  const [expandedKeys, setExpandedKeys] = useControlledState(\r\n    props.expandedKeys,\r\n    props.defaultSelectedKeys,\r\n    props.onExpandedKeysChange\r\n  );\r\n  const [selectedKeys, setSelectedKeys] = useControlledState(\r\n    props.selectedKeys,\r\n    props.defaultSelectedKeys,\r\n    props.onSelectedKeysChange\r\n  );\r\n  const [focusedNode, setFocusedNode] = useState<Key | undefined>();\r\n\r\n  const value: TreeContextValue = {\r\n    expandedKeys,\r\n    setExpandedKeys,\r\n    selectedKeys,\r\n    setSelectedKeys,\r\n    focusedNode,\r\n    setFocusedNode,\r\n  };\r\n\r\n  return (\r\n    <TreeContext.Provider value={value}>\r\n      <FocusScope>\r\n        <TreeRoot nodes={nodes} itemRenderer={children} />\r\n      </FocusScope>\r\n    </TreeContext.Provider>\r\n  );\r\n}\r\n\r\ninterface TreeRootProps<T extends TreeNode> {\r\n  nodes: TreeNode[];\r\n  itemRenderer: TreeItemRenderer<T>;\r\n}\r\nfunction TreeRoot<T extends TreeNode>(props: TreeRootProps<T>) {\r\n  return (\r\n    <ul className=\"overflow-hidden text-sm\" role=\"tree\">\r\n      {renderTree(props)}\r\n    </ul>\r\n  );\r\n}\r\n","import React, {useMemo, useRef} from 'react';\r\nimport {arrayToTree} from 'performant-array-to-tree';\r\nimport {useFolders} from '../../files/queries/use-folders';\r\nimport {DriveFolder} from '../../files/drive-entry';\r\nimport {driveState, useDriveStore} from '../../drive-store';\r\nimport {FolderIcon} from '@common/icons/material/Folder';\r\nimport {getPathForFolder, RootFolderPage} from '../../drive-page/drive-page';\r\nimport {mergeProps} from '@react-aria/utils';\r\nimport {\r\n  ConnectedDraggable,\r\n  useDraggable,\r\n} from '@common/ui/interactions/dnd/use-draggable';\r\nimport {useSidebarTreeDropTarget} from './use-sidebar-tree-drop-target';\r\nimport {makeFolderTreeDragId} from './folder-tree-drag-id';\r\nimport {FileEntry} from '@common/uploads/file-entry';\r\nimport clsx from 'clsx';\r\nimport {BackupIcon} from '@common/icons/material/Backup';\r\nimport {TreeItem, TreeItemProps} from '@common/ui/tree/tree-item';\r\nimport {Tree} from '@common/ui/tree/tree';\r\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\r\n\r\ninterface TreeFolder extends DriveFolder {\r\n  children: TreeFolder[];\r\n}\r\n\r\nexport function FolderTree() {\r\n  const navigate = useNavigate();\r\n  const {data} = useFolders();\r\n  const expandedKeys = useDriveStore(s => s.sidebarExpandedKeys);\r\n\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  let selectedKeys: number[] = [];\r\n  if (activePage?.isFolderPage) {\r\n    selectedKeys = activePage.folder ? [activePage.folder.id] : [];\r\n  }\r\n\r\n  const tree = useMemo(() => {\r\n    const folders = arrayToTree(data?.folders || [], {\r\n      parentId: 'parent_id',\r\n      dataField: null,\r\n    }) as TreeFolder[];\r\n    const rootFolder = {\r\n      ...RootFolderPage.folder,\r\n      children: folders,\r\n    };\r\n    return [rootFolder];\r\n  }, [data?.folders]);\r\n\r\n  return (\r\n    <Tree\r\n      nodes={tree}\r\n      expandedKeys={expandedKeys}\r\n      onExpandedKeysChange={keys => {\r\n        driveState().setSidebarExpandedKeys(keys);\r\n      }}\r\n      selectedKeys={selectedKeys}\r\n      onSelectedKeysChange={([id]) => {\r\n        const entryHash = findHash(id as number, tree);\r\n        if (entryHash) {\r\n          navigate(getPathForFolder(entryHash));\r\n        } else {\r\n          navigate(RootFolderPage.path);\r\n        }\r\n      }}\r\n    >\r\n      {() => <FolderTreeItem />}\r\n    </Tree>\r\n  );\r\n}\r\n\r\n// props will be passed by tree via cloneElement\r\nfunction FolderTreeItem(props: Partial<TreeItemProps<TreeFolder>>) {\r\n  const {node} = props as Required<TreeItemProps<TreeFolder>>;\r\n  const labelRef = useRef<HTMLDivElement>(null);\r\n  const isRootFolder = node.id === 0;\r\n  const isDragging = useDriveStore(s =>\r\n    s.entriesBeingDragged.includes(node.id)\r\n  );\r\n\r\n  const {draggableProps} = useDraggable({\r\n    type: 'fileEntry',\r\n    id: makeFolderTreeDragId(node),\r\n    ref: labelRef,\r\n    disabled: isRootFolder,\r\n    hidePreview: true,\r\n    onDragStart: (e, draggable) => {\r\n      const d = draggable as ConnectedDraggable<FileEntry[]>;\r\n      driveState().setEntriesBeingDragged(d.getData().map(e => e.id));\r\n      driveState().selectEntries([]);\r\n    },\r\n    onDragEnd: () => {\r\n      driveState().setEntriesBeingDragged([]);\r\n    },\r\n    getData: () => [node],\r\n  });\r\n\r\n  const {droppableProps, isDragOver} = useSidebarTreeDropTarget({\r\n    folder: node,\r\n    ref: labelRef,\r\n  });\r\n\r\n  return (\r\n    <TreeItem\r\n      {...mergeProps(draggableProps, droppableProps, props)}\r\n      onContextMenu={e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        driveState().deselectEntries('all');\r\n        driveState().setContextMenuData({\r\n          x: e.clientX,\r\n          y: e.clientY,\r\n          entry: node,\r\n        });\r\n      }}\r\n      labelRef={labelRef}\r\n      className={isRootFolder ? 'focus-visible:ring-2' : undefined}\r\n      labelClassName={clsx(\r\n        isDragOver && 'bg-primary/selected ring ring-2 ring-inset ring-primary',\r\n        isDragging && 'opacity-30',\r\n        isRootFolder && 'h-40'\r\n      )}\r\n      icon={\r\n        isRootFolder ? (\r\n          <BackupIcon size=\"md\" className=\"mr-6\" />\r\n        ) : (\r\n          <FolderIcon size=\"sm\" className=\"mr-4\" />\r\n        )\r\n      }\r\n      label={node.name}\r\n    />\r\n  );\r\n}\r\n\r\nconst findHash = (id: number, nodes: FileEntry[]): string | undefined => {\r\n  for (const item of nodes) {\r\n    if (item.id === id) {\r\n      return item.hash;\r\n    } else if (item.children) {\r\n      const hash = findHash(id, item.children);\r\n      if (hash) {\r\n        return hash;\r\n      }\r\n    }\r\n  }\r\n};\r\n","import {CustomMenu, CustomMenuItem} from '@common/menus/custom-menu';\r\nimport {MenuPositions} from '../../menu-positions';\r\nimport React, {\r\n  ComponentPropsWithoutRef,\r\n  forwardRef,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport {MenuItemConfig} from '@common/core/settings/settings';\r\nimport clsx from 'clsx';\r\nimport {useDroppable} from '@common/ui/interactions/dnd/use-droppable';\r\nimport {FileEntry} from '@common/uploads/file-entry';\r\nimport {FolderTree} from './folder-tree';\r\nimport {useDeleteEntries} from '../../files/queries/use-delete-entries';\r\nimport {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\r\n\r\nexport function SidebarMenu() {\r\n  const {workspaceId} = useActiveWorkspaceId();\r\n  return (\r\n    <div className=\"text-muted mt-26 px-12\">\r\n      <FolderTree />\r\n      <CustomMenu\r\n        menu={MenuPositions.DriveSidebar}\r\n        orientation=\"vertical\"\r\n        gap=\"gap-0\"\r\n      >\r\n        {item => {\r\n          if (item.action === '/drive/trash') {\r\n            return <TrashMenuItem key={item.id} item={item} />;\r\n          }\r\n          return <MenuItem key={item.id} item={item} />;\r\n        }}\r\n      </CustomMenu>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface MenuItemProps extends ComponentPropsWithoutRef<'a'> {\r\n  item: MenuItemConfig;\r\n  className?: string;\r\n}\r\nexport const MenuItem = forwardRef<HTMLAnchorElement, MenuItemProps>(\r\n  ({item, className, ...domProps}, ref) => {\r\n    return (\r\n      <CustomMenuItem\r\n        className={({isActive}) =>\r\n          clsx(\r\n            className,\r\n            'h-40 w-full my-4 px-24 rounded',\r\n            isActive\r\n              ? 'text-primary font-bold bg-primary/selected cursor-default'\r\n              : 'hover:bg-hover'\r\n          )\r\n        }\r\n        item={item}\r\n        ref={ref}\r\n        {...domProps}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\ninterface TrashMenuItemProps {\r\n  item: MenuItemConfig;\r\n}\r\nfunction TrashMenuItem({item}: TrashMenuItemProps) {\r\n  const deleteEntries = useDeleteEntries();\r\n  const [isDragOver, setIsDragOver] = useState(false);\r\n  const ref = useRef<HTMLAnchorElement>(null);\r\n\r\n  const {droppableProps} = useDroppable({\r\n    id: 'trash',\r\n    types: ['fileEntry'],\r\n    ref,\r\n    onDragEnter: () => {\r\n      setIsDragOver(true);\r\n    },\r\n    onDragLeave: () => {\r\n      setIsDragOver(false);\r\n    },\r\n    onDrop: draggable => {\r\n      const entryIds = (draggable.getData() as FileEntry[]).map(e => e.id);\r\n      deleteEntries.mutate({entryIds, deleteForever: false});\r\n    },\r\n  });\r\n  return (\r\n    <MenuItem\r\n      className={clsx(isDragOver && 'bg-primary/selected')}\r\n      ref={ref}\r\n      {...droppableProps}\r\n      item={item}\r\n    />\r\n  );\r\n}\r\n","import {driveState, useDriveStore} from '../drive-store';\r\nimport {useDriveUploadQueue} from '../uploading/use-drive-upload-queue';\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  MenuTrigger,\r\n} from '@common/ui/navigation/menu/menu-trigger';\r\nimport {openUploadWindow} from '@common/uploads/utils/open-upload-window';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {FileUploadIcon} from '@common/icons/material/FileUpload';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {CreateNewFolderIcon} from '@common/icons/material/CreateNewFolder';\r\nimport {UploadFileIcon} from '@common/icons/material/UploadFile';\r\nimport {DriveFolderUploadIcon} from '@common/icons/material/DriveFolderUpload';\r\nimport React from 'react';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {AddIcon} from '@common/icons/material/Add';\r\n\r\ninterface CreateNewButtonProps {\r\n  isCompact?: boolean;\r\n  className?: string;\r\n}\r\nexport function CreateNewButton({isCompact, className}: CreateNewButtonProps) {\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  const {uploadFiles} = useDriveUploadQueue();\r\n\r\n  const button = isCompact ? (\r\n    <IconButton size=\"md\">\r\n      <AddIcon />\r\n    </IconButton>\r\n  ) : (\r\n    <Button\r\n      className=\"min-w-160\"\r\n      color=\"primary\"\r\n      variant=\"flat\"\r\n      size=\"sm\"\r\n      startIcon={<FileUploadIcon />}\r\n      disabled={!activePage?.canUpload}\r\n    >\r\n      <Trans message=\"Upload\" />\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <div className={className}>\r\n      <MenuTrigger\r\n        onItemSelected={async value => {\r\n          if (value === 'uploadFiles') {\r\n            uploadFiles(await openUploadWindow({multiple: true}));\r\n          } else if (value === 'uploadFolder') {\r\n            uploadFiles(await openUploadWindow({directory: true}));\r\n          } else if (value === 'newFolder') {\r\n            const activeFolder = driveState().activePage?.folder;\r\n            driveState().setActiveActionDialog(\r\n              'newFolder',\r\n              activeFolder ? [activeFolder] : []\r\n            );\r\n          }\r\n        }}\r\n      >\r\n        {button}\r\n        <Menu>\r\n          <MenuItem value=\"uploadFiles\" startIcon={<UploadFileIcon />}>\r\n            <Trans message=\"Upload files\" />\r\n          </MenuItem>\r\n          <MenuItem value=\"uploadFolder\" startIcon={<DriveFolderUploadIcon />}>\r\n            <Trans message=\"Upload folder\" />\r\n          </MenuItem>\r\n          <MenuItem value=\"newFolder\" startIcon={<CreateNewFolderIcon />}>\r\n            <Trans message=\"Create folder\" />\r\n          </MenuItem>\r\n        </Menu>\r\n      </MenuTrigger>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {StorageMeter} from './storage-summary/storage-meter';\r\nimport {WorkspaceSelector} from '@common/workspace/workspace-selector';\r\nimport {RootFolderPage} from '../../drive-page/drive-page';\r\nimport {SidebarMenu} from './sidebar-menu';\r\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\r\nimport {CreateNewButton} from '../create-new-button';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {Link} from 'react-router-dom';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {useAuth} from '@common/auth/use-auth';\r\nimport clsx from 'clsx';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\n\r\ninterface SidebarProps {\r\n  className?: string;\r\n}\r\nexport function Sidebar({className}: SidebarProps) {\r\n  const {isSubscribed} = useAuth();\r\n  const {billing} = useSettings();\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        className,\r\n        'flex flex-col gap-20 border-r bg-alt text-sm font-medium text-muted',\r\n      )}\r\n    >\r\n      <div className=\"compact-scrollbar flex-auto overflow-y-auto\">\r\n        <CreateNewButton className=\"px-12 pt-28 text-center\" />\r\n        <SidebarMenu />\r\n        <StorageMeter />\r\n        {billing.enable ? (\r\n          <div className=\"mt-14 pl-60\">\r\n            <Button\r\n              elementType={Link}\r\n              to={isSubscribed ? '/billing/change-plan' : '/pricing'}\r\n              variant=\"outline\"\r\n              color=\"primary\"\r\n              size=\"xs\"\r\n            >\r\n              <Trans message=\"Upgrade\" />\r\n            </Button>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n      <WorkspaceSwitcher />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction WorkspaceSwitcher() {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <WorkspaceSelector\r\n      onChange={() => {\r\n        navigate(RootFolderPage.path);\r\n      }}\r\n      className=\"mt-auto w-full flex-shrink-0 border-t px-24 py-18\"\r\n    />\r\n  );\r\n}\r\n","import {InfiniteData, useInfiniteQuery} from '@tanstack/react-query';\r\nimport {useSearchParams} from 'react-router-dom';\r\nimport {LengthAwarePaginationResponse} from '@common/http/backend-response/pagination-response';\r\nimport {DriveEntry, DriveFolder} from '../drive-entry';\r\nimport {driveState, useDriveStore} from '../../drive-store';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {DriveQueryKeys} from '../../drive-query-keys';\r\nimport {SortColumn, SortDirection} from '../../layout/sorting/available-sorts';\r\nimport {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\r\nimport {makeFolderPage, SearchPage} from '../../drive-page/drive-page';\r\nimport {useEffect} from 'react';\r\nimport {shallowEqual} from '@common/utils/shallow-equal';\r\n\r\nexport interface DriveApiIndexParams {\r\n  orderBy?: SortColumn;\r\n  orderDir?: SortDirection;\r\n  folderId?: string | number | null;\r\n  query?: string;\r\n  filters?: string;\r\n  deletedOnly?: boolean;\r\n  starredOnly?: boolean;\r\n  sharedOnly?: boolean;\r\n  perPage?: number;\r\n  page?: number;\r\n  recentOnly?: boolean;\r\n  workspaceId?: number | null;\r\n  section?: string;\r\n}\r\n\r\ninterface EntriesPaginationResponse\r\n  extends LengthAwarePaginationResponse<DriveEntry> {\r\n  folder?: DriveFolder;\r\n}\r\n\r\nfunction fetchEntries(\r\n  params: DriveApiIndexParams,\r\n): Promise<EntriesPaginationResponse> {\r\n  return apiClient\r\n    .get('drive/file-entries', {\r\n      params,\r\n    })\r\n    .then(response => response.data);\r\n}\r\n\r\nconst setActiveFolder = (response: InfiniteData<EntriesPaginationResponse>) => {\r\n  const firstPage = response.pages[0];\r\n  const newFolder = firstPage.folder;\r\n  const currentPage = driveState().activePage;\r\n\r\n  if (\r\n    newFolder &&\r\n    currentPage &&\r\n    currentPage.uniqueId === newFolder.hash &&\r\n    // only update page if once to set the folder or if permissions change, to keep page reference as stable as possible\r\n    (!currentPage.folder ||\r\n      !shallowEqual(newFolder.permissions, currentPage.folder?.permissions))\r\n  ) {\r\n    driveState().setActivePage(makeFolderPage(newFolder));\r\n  }\r\n  return response;\r\n};\r\n\r\nexport function usePaginatedEntries() {\r\n  const page = useDriveStore(s => s.activePage);\r\n  const sortDescriptor = useDriveStore(s => s.sortDescriptor);\r\n  const [searchParams] = useSearchParams();\r\n  const {workspaceId} = useActiveWorkspaceId();\r\n  const params: DriveApiIndexParams = {\r\n    section: page?.name,\r\n    ...page?.queryParams,\r\n    ...Object.fromEntries(searchParams),\r\n    folderId: page?.isFolderPage ? page.uniqueId : null,\r\n    workspaceId,\r\n    ...sortDescriptor,\r\n  };\r\n\r\n  // if we have no search query, there's no need to call the API, show no results message instead\r\n  const isDisabledInSearch =\r\n    page === SearchPage && !params.query && !params.filters;\r\n\r\n  const query = useInfiniteQuery({\r\n    queryKey: DriveQueryKeys.fetchEntries(params),\r\n    queryFn: ({pageParam = 1}) => {\r\n      return fetchEntries({...params, page: pageParam});\r\n    },\r\n    initialPageParam: 1,\r\n    getNextPageParam: lastResponse => {\r\n      const currentPage = lastResponse.current_page;\r\n      const lastPage = lastResponse.last_page;\r\n      if (currentPage >= lastPage) {\r\n        return undefined;\r\n      }\r\n      return currentPage + 1;\r\n    },\r\n    enabled: page != null && !isDisabledInSearch,\r\n  });\r\n\r\n  // need to do this in effect, to avoid react errors about\r\n  // multiple components re-rendering at the same time\r\n  useEffect(() => {\r\n    if (query.data?.pages[0].folder) {\r\n      setActiveFolder(query.data);\r\n    }\r\n  }, [query.data]);\r\n\r\n  return query;\r\n}\r\n\r\nexport function getAllEntries() {\r\n  const caches = queryClient.getQueriesData<\r\n    InfiniteData<EntriesPaginationResponse>\r\n  >({queryKey: DriveQueryKeys.fetchEntries()});\r\n  return caches.reduce<DriveEntry[]>((all, cache) => {\r\n    const current = cache[1] ? cache[1].pages.flatMap(p => p.data) : [];\r\n    return [...all, ...current];\r\n  }, []);\r\n}\r\n","import {\r\n  BackendFilter,\r\n  FilterControlType,\r\n  FilterOperator,\r\n} from '@common/datatable/filters/backend-filter';\r\nimport {FILE_ENTRY_TYPE_FILTER} from '@common/admin/file-entry/file-entry-index-filters';\r\nimport {message} from '@common/i18n/message';\r\nimport {\r\n  createdAtFilter,\r\n  updatedAtFilter,\r\n} from '@common/datatable/filters/timestamp-filters';\r\n\r\nexport const driveSearchFilters: BackendFilter[] = [\r\n  FILE_ENTRY_TYPE_FILTER,\r\n  {\r\n    key: 'owner_id',\r\n    label: message('Owner'),\r\n    description: message('User file was uploaded by'),\r\n    defaultOperator: FilterOperator.eq,\r\n    control: {\r\n      type: FilterControlType.Select,\r\n      defaultValue: '02',\r\n      options: [\r\n        {\r\n          key: '01',\r\n          label: message('anyone'),\r\n          value: {value: null, operator: '!='},\r\n        },\r\n        {\r\n          key: '02',\r\n          label: message('me'),\r\n          value: '{authId}',\r\n        },\r\n        {\r\n          key: '03',\r\n          label: message('not me'),\r\n          value: {value: '{authId}', operator: '!='},\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  createdAtFilter({\r\n    description: message('Date file was uploaded'),\r\n  }),\r\n  updatedAtFilter({\r\n    description: message('Date file was last changed'),\r\n  }),\r\n  {\r\n    key: 'deleted_at',\r\n    label: message('In trash'),\r\n    description: message('Only show files that are in the trash'),\r\n    defaultOperator: FilterOperator.ne,\r\n    control: {\r\n      type: FilterControlType.BooleanToggle,\r\n      defaultValue: null,\r\n    },\r\n  },\r\n  {\r\n    key: 'shareableLink',\r\n    label: message('Has shareable link'),\r\n    description: message('Only show files that have a shareable link'),\r\n    defaultOperator: FilterOperator.has,\r\n    control: {\r\n      type: FilterControlType.BooleanToggle,\r\n      defaultValue: '*',\r\n    },\r\n  },\r\n  {\r\n    control: {\r\n      type: FilterControlType.BooleanToggle,\r\n      defaultValue: true,\r\n    },\r\n    key: 'sharedByMe',\r\n    label: message('Shared by me'),\r\n    description: message('Only show files that are shared with someone'),\r\n    defaultOperator: FilterOperator.eq,\r\n  },\r\n];\r\n","import React, {useContext, useState} from 'react';\r\nimport {driveSearchFilters} from './drive-search-filters';\r\nimport {useDriveStore} from '../drive-store';\r\nimport {SearchPage} from '../drive-page/drive-page';\r\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {SearchIcon} from '@common/icons/material/Search';\r\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\r\nimport {FilterList} from '@common/datatable/filters/filter-list/filter-list';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\r\nimport {useSearchParams} from 'react-router-dom';\r\nimport {message} from '@common/i18n/message';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\n\r\nconst alwaysShownFilters = driveSearchFilters.map(f => f.key);\r\n\r\nexport function SearchFilterList() {\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  const {isMobileMode} = useContext(DashboardLayoutContext);\r\n  const {trans} = useTrans();\r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n  const [inputValue, setInputValue] = useState(searchParams.get('query') || '');\r\n\r\n  if (activePage !== SearchPage) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"mb-30 mt-10 px-10 md:px-26\">\r\n      {isMobileMode && (\r\n        <form\r\n          className=\"contents\"\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            // blur input so mobile keyboard is hidden\r\n            if (document.activeElement?.tagName === 'INPUT') {\r\n              (document.activeElement as HTMLInputElement).blur();\r\n            }\r\n            navigate(\r\n              {\r\n                pathname: SearchPage.path,\r\n                search: `?query=${inputValue}`,\r\n              },\r\n              {replace: true},\r\n            );\r\n          }}\r\n        >\r\n          <TextField\r\n            autoFocus\r\n            className=\"mb-20\"\r\n            startAdornment={\r\n              <IconButton type=\"submit\">\r\n                <SearchIcon />\r\n              </IconButton>\r\n            }\r\n            placeholder={trans(message('Type to search'))}\r\n            value={inputValue}\r\n            onChange={e => setInputValue(e.target.value)}\r\n          />\r\n        </form>\r\n      )}\r\n      <FilterList\r\n        filters={driveSearchFilters}\r\n        pinnedFilters={alwaysShownFilters}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import {InteractableRect} from '../interactable-event';\r\n\r\nexport function restrictResizableWithinBoundary(\r\n  rect: InteractableRect,\r\n  boundaryRect: InteractableRect\r\n) {\r\n  const boundedRect = {...rect};\r\n\r\n  // restrict to left edge of boundary\r\n  boundedRect.left = Math.max(0, boundedRect.left);\r\n  // compensate width when left is bounded\r\n  const leftRestriction = boundedRect.left - rect.left;\r\n  if (leftRestriction > 0) {\r\n    boundedRect.width -= leftRestriction;\r\n  }\r\n\r\n  // restrict to top edge of boundary\r\n  boundedRect.top = Math.max(0, boundedRect.top);\r\n  // compensate height when top is bounded\r\n  const topRestriction = boundedRect.top - rect.top;\r\n  if (topRestriction > 0) {\r\n    boundedRect.height -= topRestriction;\r\n  }\r\n\r\n  // restrict to right edge of boundary\r\n  boundedRect.width = Math.min(\r\n    boundedRect.width,\r\n    boundaryRect.width - boundedRect.left\r\n  );\r\n\r\n  // restrict to bottom edge of boundary\r\n  boundedRect.height = Math.min(\r\n    boundedRect.height,\r\n    boundaryRect.height - boundedRect.top\r\n  );\r\n\r\n  return boundedRect;\r\n}\r\n","import {RefObject, useLayoutEffect, useRef} from 'react';\r\nimport {droppables} from '../drag-state';\r\nimport {InteractableRect} from '../../interactable-event';\r\nimport {DraggableId} from '../use-draggable';\r\n\r\nexport interface ConnectedMouseSelectable {\r\n  id: DraggableId;\r\n  onSelected?: () => void;\r\n  onDeselected?: () => void;\r\n  ref: RefObject<HTMLElement>;\r\n  rect?: InteractableRect;\r\n}\r\n\r\nexport const mouseSelectables = new Map<\r\n  DraggableId,\r\n  ConnectedMouseSelectable\r\n>();\r\n\r\nexport function useMouseSelectable(options: ConnectedMouseSelectable) {\r\n  const {id, ref} = options;\r\n  const optionsRef = useRef(options);\r\n  optionsRef.current = options;\r\n\r\n  useLayoutEffect(() => {\r\n    if (!ref.current) return;\r\n    // register droppable regardless if it's enabled or not, it might be used by mouse selection box\r\n    mouseSelectables.set(id, {\r\n      ...mouseSelectables.get(id),\r\n      id,\r\n      ref,\r\n      // avoid stale closures\r\n      onSelected: () => {\r\n        optionsRef.current.onSelected?.();\r\n      },\r\n      onDeselected: () => optionsRef.current.onDeselected?.(),\r\n    });\r\n    return () => {\r\n      droppables.delete(id);\r\n    };\r\n  }, [id, optionsRef, ref]);\r\n}\r\n","import {InteractableRect} from '../interactable-event';\r\n\r\nexport function rectsIntersect(\r\n  rectA?: InteractableRect,\r\n  rectB?: InteractableRect\r\n) {\r\n  if (!rectA || !rectB) return false;\r\n  return (\r\n    rectA.left <= rectB.left + rectB.width &&\r\n    rectA.left + rectA.width >= rectB.left &&\r\n    rectA.top <= rectB.top + rectB.height &&\r\n    rectA.top + rectA.height >= rectB.top\r\n  );\r\n}\r\n","import React, {RefObject, useRef} from 'react';\r\nimport {usePointerEvents} from '../../use-pointer-events';\r\nimport {InteractableRect} from '../../interactable-event';\r\nimport {restrictResizableWithinBoundary} from '../../utils/restrict-resizable-within-boundary';\r\nimport {activeInteraction} from '../../active-interaction';\r\nimport {updateRects} from '../update-rects';\r\nimport {mouseSelectables} from './use-mouse-selectable';\r\nimport {rectsIntersect} from '../../utils/rects-intersect';\r\nimport {DraggableId} from '../use-draggable';\r\n\r\ninterface SelectionState {\r\n  startPoint?: {x: number; y: number; scrollTop: number};\r\n  endPoint?: {x: number; y: number};\r\n  boundaryRect?: InteractableRect & {heightWithoutScroll: number};\r\n  scrollListener?: EventListener;\r\n  rafId?: number;\r\n  selectedIds?: Set<DraggableId>;\r\n}\r\n\r\ninterface Props {\r\n  onPointerDown?: (e: React.PointerEvent) => void;\r\n  containerRef?: RefObject<HTMLDivElement>;\r\n}\r\nexport function useMouseSelectionBox({onPointerDown, ...props}: Props = {}) {\r\n  const defaultRef = useRef<HTMLDivElement>(null);\r\n  const containerRef = props.containerRef || defaultRef;\r\n  const boxRef = useRef<HTMLDivElement>(null);\r\n\r\n  let state = useRef<SelectionState>({}).current;\r\n\r\n  const drawSelectionBox = () => {\r\n    if (state.rafId) {\r\n      cancelAnimationFrame(state.rafId);\r\n    }\r\n\r\n    if (!state.startPoint || !state.endPoint || !state.boundaryRect) return;\r\n\r\n    const startPoint = state.startPoint;\r\n    const endPoint = state.endPoint;\r\n    const initialScrollTop = startPoint.scrollTop || 0;\r\n    const currentScrollTop = containerRef.current?.scrollTop || 0;\r\n\r\n    const newRect = {\r\n      left: Math.min(startPoint.x, endPoint.x),\r\n      top: Math.min(startPoint.y, endPoint.y),\r\n      width: Math.abs(startPoint.x - endPoint.x),\r\n      height: Math.abs(startPoint.y - endPoint.y),\r\n    };\r\n\r\n    // convert box coords to be relative to container and not viewport\r\n    newRect.left -= state.boundaryRect.left;\r\n    newRect.top -= state.boundaryRect.top;\r\n\r\n    // take initial scroll of container into account\r\n    newRect.top += initialScrollTop;\r\n\r\n    // scroll diff between drag start and now (auto scroll or mouse wheel)\r\n    const scrollDiff = currentScrollTop - initialScrollTop;\r\n    const scrollValue = Math.abs(scrollDiff);\r\n\r\n    // top needs to be changed only if scroll direction is top\r\n    if (scrollDiff < 0) {\r\n      newRect.top -= scrollValue;\r\n    }\r\n\r\n    // height needs to be changed regardless of direction and method\r\n    newRect.height += scrollValue;\r\n\r\n    const boundedRect = state.boundaryRect\r\n      ? restrictResizableWithinBoundary(newRect, state.boundaryRect)\r\n      : {...newRect};\r\n\r\n    if (boxRef.current) {\r\n      state.rafId = requestAnimationFrame(() => {\r\n        if (boxRef.current) {\r\n          boxRef.current.style.display = `block`;\r\n          boxRef.current.style.transform = `translate(${boundedRect.left}px, ${boundedRect.top}px)`;\r\n          boxRef.current.style.width = `${boundedRect.width}px`;\r\n          boxRef.current.style.height = `${boundedRect.height}px`;\r\n        }\r\n        state.rafId = undefined;\r\n      });\r\n    }\r\n\r\n    // convert rect back to absolute for intersection testing\r\n    const absoluteRect = {\r\n      ...boundedRect,\r\n      left: boundedRect.left + state.boundaryRect.left,\r\n      top: boundedRect.top + state.boundaryRect.top - currentScrollTop,\r\n    };\r\n\r\n    for (const [, selectable] of mouseSelectables) {\r\n      const intersect = rectsIntersect(selectable.rect, absoluteRect);\r\n      if (intersect && !state.selectedIds?.has(selectable.id)) {\r\n        state.selectedIds?.add(selectable.id);\r\n        selectable.onSelected?.();\r\n      } else if (!intersect && state.selectedIds?.has(selectable.id)) {\r\n        state.selectedIds?.delete(selectable.id);\r\n        selectable.onDeselected?.();\r\n      }\r\n    }\r\n  };\r\n\r\n  const pointerEvents = usePointerEvents({\r\n    minimumMovement: 4,\r\n    onPointerDown,\r\n    onMoveStart: e => {\r\n      if (activeInteraction) {\r\n        return false;\r\n      }\r\n      updateRects(mouseSelectables);\r\n      state = {\r\n        selectedIds: new Set(),\r\n      };\r\n      const el = containerRef.current;\r\n      state.startPoint = {\r\n        x: e.clientX,\r\n        y: e.clientY,\r\n        scrollTop: el?.scrollTop || 0,\r\n      };\r\n\r\n      state.scrollListener = e => {\r\n        if (!state.startPoint) return;\r\n        // update rects on scroll, because we are using relative position\r\n        updateRects(mouseSelectables);\r\n        if (state.boundaryRect?.height) {\r\n          state.boundaryRect.height = (e.target as HTMLElement).scrollHeight;\r\n        }\r\n        // draw selection box (for autoscroll and mousewheel)\r\n        drawSelectionBox();\r\n      };\r\n\r\n      if (el) {\r\n        const rect = el.getBoundingClientRect();\r\n        el.addEventListener('scroll', state.scrollListener);\r\n        state.boundaryRect = {\r\n          top: rect.top,\r\n          left: rect.left,\r\n          height: el.scrollHeight,\r\n          heightWithoutScroll: rect.height,\r\n          width: el.scrollWidth,\r\n        };\r\n      }\r\n    },\r\n    onMove: e => {\r\n      state.endPoint = {x: e.clientX, y: e.clientY};\r\n\r\n      if (state.boundaryRect && containerRef.current) {\r\n        const reachedBottomEdge =\r\n          e.clientY + 20 >\r\n          state.boundaryRect.heightWithoutScroll + state.boundaryRect.top;\r\n        const reachedTopEdge = e.clientY - 20 < state.boundaryRect.top;\r\n\r\n        if (reachedBottomEdge) {\r\n          containerRef.current.scrollBy({top: 10});\r\n        } else if (reachedTopEdge) {\r\n          containerRef.current.scrollBy({top: -10});\r\n        }\r\n      }\r\n\r\n      drawSelectionBox();\r\n    },\r\n    onMoveEnd: () => {\r\n      if (state.rafId) {\r\n        cancelAnimationFrame(state.rafId);\r\n      }\r\n      if (containerRef.current && state.scrollListener) {\r\n        containerRef.current.removeEventListener(\r\n          'scroll',\r\n          state.scrollListener\r\n        );\r\n      }\r\n      if (boxRef.current) {\r\n        boxRef.current.style.display = `none`;\r\n        boxRef.current.style.transform = '';\r\n        boxRef.current.style.width = '';\r\n        boxRef.current.style.height = '';\r\n      }\r\n      state = {};\r\n    },\r\n  });\r\n\r\n  return {\r\n    containerProps: {\r\n      ...pointerEvents.domProps,\r\n      ref: containerRef,\r\n    },\r\n    boxProps: {ref: boxRef},\r\n  };\r\n}\r\n","import {DriveEntry} from '../drive-entry';\r\nimport {usePaginatedEntries} from './use-paginated-entries';\r\n\r\nexport function useEntries(): DriveEntry[] {\r\n  const query = usePaginatedEntries();\r\n  if (!query.data) return [];\r\n  return query.data.pages.flatMap(p => p.data);\r\n}\r\n","import {driveState, useDriveStore} from '../drive-store';\r\nimport {getAllEntries} from './queries/use-paginated-entries';\r\nimport {DriveEntry, DriveFolder} from './drive-entry';\r\nimport {useEntries} from './queries/use-entries';\r\nimport {useFolders} from './queries/use-folders';\r\n\r\nexport function useSelectedEntries(): DriveEntry[] {\r\n  const ids = useDriveStore(s => s.selectedEntries);\r\n  const entries = useEntries();\r\n  return Array.from(ids)\r\n    .map(id => entries.find(entry => entry.id === id))\r\n    .filter(e => !!e) as DriveEntry[];\r\n}\r\n\r\nexport function useSelectedEntry(): DriveEntry | null {\r\n  const entries = useSelectedEntries();\r\n  return entries[0];\r\n}\r\n\r\nexport function useSelectedEntryParent(): DriveFolder | null | undefined {\r\n  const entry = useSelectedEntry();\r\n  const {data} = useFolders();\r\n  if (!entry || !data?.folders) return;\r\n  return data.folders.find(e => e.id === entry.parent_id) as DriveFolder;\r\n}\r\n\r\nexport function getSelectedEntries(): DriveEntry[] {\r\n  const ids = Array.from(driveState().selectedEntries);\r\n  const allEntries = getAllEntries();\r\n  return ids\r\n    .map(id => allEntries.find(entry => entry.id === id))\r\n    .filter(e => !!e) as DriveEntry[];\r\n}\r\n","import React, {createElement} from 'react';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {EntryActionMenuTrigger} from './entry-action-menu-trigger';\r\nimport {MoreVertIcon} from '@common/icons/material/MoreVert';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {useSelectedEntries} from '../files/use-selected-entries';\r\nimport {\r\n  useDeleteEntriesAction,\r\n  usePreviewAction,\r\n  useRemoveSharedEntriesAction,\r\n  useShareAction,\r\n} from './use-entry-actions';\r\nimport {DriveEntry} from '../files/drive-entry';\r\nimport {EntryAction} from './entry-action';\r\n\r\ninterface EntryActionListProps {\r\n  className?: string;\r\n}\r\nexport function EntryActionList({className}: EntryActionListProps) {\r\n  const selectedEntries = useSelectedEntries();\r\n\r\n  if (!selectedEntries.length) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={className}>\r\n      <ActionList entries={selectedEntries} />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface ActionListProps {\r\n  entries: DriveEntry[];\r\n}\r\nfunction ActionList({entries}: ActionListProps) {\r\n  const preview = usePreviewAction(entries);\r\n  const share = useShareAction(entries);\r\n  const deleteAction = useDeleteEntriesAction(entries);\r\n  const removeShared = useRemoveSharedEntriesAction(entries);\r\n\r\n  const actions = [preview, share, deleteAction, removeShared].filter(\r\n    action => !!action\r\n  ) as EntryAction[];\r\n\r\n  return (\r\n    <div className=\"entry-action-list\">\r\n      {actions.map(action => (\r\n        <Tooltip key={action.key} label={<Trans {...action.label} />}>\r\n          <IconButton\r\n            size=\"sm\"\r\n            onClick={() => {\r\n              action.execute();\r\n            }}\r\n          >\r\n            {createElement(action.icon)}\r\n          </IconButton>\r\n        </Tooltip>\r\n      ))}\r\n      <EntryActionMenuTrigger entries={entries}>\r\n        <Tooltip label={<Trans message=\"More actions\" />}>\r\n          <IconButton>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </EntryActionMenuTrigger>\r\n    </div>\r\n  );\r\n}\r\n","import {useSelectedEntries} from './use-selected-entries';\r\nimport {DriveEntry} from './drive-entry';\r\nimport {useEntryActions} from '../entry-actions/use-entry-actions';\r\nimport {driveState, useDriveStore} from '../drive-store';\r\nimport {ContextMenu} from '@common/ui/navigation/menu/context-menu';\r\nimport {MenuItem} from '@common/ui/navigation/menu/menu-trigger';\r\nimport React, {createElement} from 'react';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {EntryAction} from '../entry-actions/entry-action';\r\nimport {DrivePage, RootFolderPage} from '../drive-page/drive-page';\r\nimport {useDrivePageActions} from '../entry-actions/use-drive-page-actions';\r\n\r\nexport function DriveContextMenu() {\r\n  const selectedEntries = useSelectedEntries();\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  const data = useDriveStore(s => s.contextMenuData);\r\n  const entries = data?.entry ? [data.entry] : selectedEntries;\r\n\r\n  // right-clicked root folder\r\n  if (data?.entry?.id === 0) {\r\n    return <PageContextMenu position={data} page={RootFolderPage} />;\r\n  }\r\n\r\n  if (data && entries.length) {\r\n    return <EntriesContextMenu entries={entries} position={data} />;\r\n  }\r\n\r\n  if (data && activePage) {\r\n    return <PageContextMenu position={data} page={activePage} />;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\ninterface EntriesContextMenuProps {\r\n  position: {x: number; y: number};\r\n  entries: DriveEntry[];\r\n}\r\nfunction EntriesContextMenu({entries, position}: EntriesContextMenuProps) {\r\n  const actions = useEntryActions(entries);\r\n  return <BaseContextMenu position={position} actions={actions} />;\r\n}\r\n\r\ninterface PageContextMenuProps {\r\n  position: {x: number; y: number};\r\n  page: DrivePage;\r\n}\r\nfunction PageContextMenu({page, position}: PageContextMenuProps) {\r\n  const actions = useDrivePageActions(page);\r\n  return <BaseContextMenu position={position} actions={actions} />;\r\n}\r\n\r\ninterface BaseContextMenuProps {\r\n  position: {x: number; y: number};\r\n  actions: EntryAction[];\r\n}\r\nfunction BaseContextMenu({position, actions}: BaseContextMenuProps) {\r\n  return (\r\n    <ContextMenu\r\n      position={position}\r\n      onOpenChange={isOpen => {\r\n        if (!isOpen) {\r\n          driveState().setContextMenuData(null);\r\n        }\r\n      }}\r\n    >\r\n      {actions.map(action => (\r\n        <MenuItem\r\n          value={action.key}\r\n          key={action.key}\r\n          onSelected={action.execute}\r\n          startIcon={createElement(action.icon)}\r\n        >\r\n          <Trans {...action.label} />\r\n        </MenuItem>\r\n      ))}\r\n    </ContextMenu>\r\n  );\r\n}\r\n","import {useMediaQuery} from './use-media-query';\r\n\r\nexport function useIsTouchDevice() {\r\n  return useMediaQuery('((pointer: coarse))');\r\n}\r\n","import {\r\n  ConnectedDraggable,\r\n  useDraggable,\r\n} from '@common/ui/interactions/dnd/use-draggable';\r\nimport {driveState, useDriveStore} from '../drive-store';\r\nimport {getSelectedEntries} from '../files/use-selected-entries';\r\nimport {useDroppable} from '@common/ui/interactions/dnd/use-droppable';\r\nimport {\r\n  folderAcceptsDrop,\r\n  useFolderDropAction,\r\n} from '../files/use-folder-drop-action';\r\nimport {DriveEntry} from '../files/drive-entry';\r\nimport {useRef, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport {useIsTouchDevice} from '@common/utils/hooks/is-touch-device';\r\nimport {FileEntry} from '@common/uploads/file-entry';\r\nimport {useMouseSelectable} from '@common/ui/interactions/dnd/mouse-selection/use-mouse-selectable';\r\nimport {TrashPage} from '@app/drive/drive-page/drive-page';\r\n\r\nexport function useFileViewDnd<T extends HTMLElement = HTMLElement>(\r\n  entry: DriveEntry\r\n) {\r\n  const isTouchDevice = useIsTouchDevice();\r\n  const ref = useRef<T>(null);\r\n  const {onDrop} = useFolderDropAction(entry);\r\n  const [isDragOver, setIsDragOver] = useState(false);\r\n  const isDragging = useDriveStore(s =>\r\n    s.entriesBeingDragged.includes(entry.id)\r\n  );\r\n  const activePage = useDriveStore(s => s.activePage);\r\n\r\n  const {draggableProps} = useDraggable({\r\n    disabled: !!isTouchDevice || activePage === TrashPage,\r\n    id: entry.id,\r\n    type: 'fileEntry',\r\n    ref,\r\n    hidePreview: true,\r\n    onDragStart: (e, target: ConnectedDraggable<FileEntry[]>) => {\r\n      if (!driveState().selectedEntries.has(entry.id)) {\r\n        driveState().selectEntries([entry.id]);\r\n      }\r\n      driveState().setEntriesBeingDragged(target.getData().map(e => e.id));\r\n    },\r\n    onDragEnd: () => {\r\n      driveState().setEntriesBeingDragged([]);\r\n    },\r\n    getData: () => getSelectedEntries(),\r\n  });\r\n\r\n  const {droppableProps} = useDroppable<T>({\r\n    id: entry.id,\r\n    disabled: isTouchDevice || entry.type !== 'folder',\r\n    ref,\r\n    types: ['fileEntry', 'nativeFile'],\r\n    acceptsDrop: target => folderAcceptsDrop(target, entry),\r\n    onDragEnter: () => setIsDragOver(true),\r\n    onDragLeave: () => setIsDragOver(false),\r\n    onDrop,\r\n  });\r\n\r\n  useMouseSelectable({\r\n    id: entry.id,\r\n    ref,\r\n    onSelected: () => {\r\n      driveState().selectEntries([entry.id], true);\r\n    },\r\n    onDeselected: () => {\r\n      driveState().deselectEntries([entry.id]);\r\n    },\r\n  });\r\n\r\n  const itemClassName = clsx(\r\n    isDragging && 'opacity-20',\r\n    isDragOver && 'ring ring-offset-4 ring-primary bg-primary-light/10 rounded'\r\n  );\r\n\r\n  return {\r\n    draggableProps,\r\n    droppableProps,\r\n    isDragOver,\r\n    isDragging,\r\n    itemClassName,\r\n    ref,\r\n  };\r\n}\r\n","import {DriveEntry} from '../../files/drive-entry';\r\nimport {RowElementProps} from '@common/ui/tables/table-row';\r\nimport {mergeProps} from '@react-aria/utils';\r\nimport {useFileViewDnd} from '../use-file-view-dnd';\r\nimport clsx from 'clsx';\r\nimport React, {useContext} from 'react';\r\nimport {driveState} from '../../drive-store';\r\nimport {TableContext} from '@common/ui/tables/table-context';\r\n\r\nexport function FileTableRow({\r\n  item,\r\n  children,\r\n  className,\r\n  ...domProps\r\n}: RowElementProps<DriveEntry>) {\r\n  const {isCollapsedMode} = useContext(TableContext);\r\n  const {draggableProps, droppableProps, itemClassName, ref} =\r\n    useFileViewDnd<HTMLDivElement>(item);\r\n\r\n  return (\r\n    <div\r\n      className={clsx(className, itemClassName)}\r\n      ref={ref}\r\n      {...mergeProps(draggableProps, droppableProps, domProps, {\r\n        onContextMenu: (e: React.MouseEvent) => {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          if (!isCollapsedMode) {\r\n            if (!driveState().selectedEntries.has(item.id)) {\r\n              driveState().selectEntries([item.id]);\r\n            }\r\n            driveState().setContextMenuData({x: e.clientX, y: e.clientY});\r\n          }\r\n        },\r\n      })}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import {useCallback} from 'react';\r\nimport {getPathForFolder, TrashPage} from '../drive-page/drive-page';\r\nimport {driveState} from '../drive-store';\r\nimport {DriveEntry} from '../files/drive-entry';\r\nimport {getSelectedEntries} from '../files/use-selected-entries';\r\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\r\n\r\nexport function useViewItemActionHandler() {\r\n  const navigate = useNavigate();\r\n\r\n  const performViewItemAction = useCallback(\r\n    (entry: DriveEntry) => {\r\n      if (entry && entry.type === 'folder') {\r\n        if (driveState().activePage === TrashPage) {\r\n          driveState().setActiveActionDialog('trashFolderBlock', [entry]);\r\n        } else {\r\n          navigate(getPathForFolder(entry.hash));\r\n        }\r\n      } else {\r\n        const selectedEntries = getSelectedEntries();\r\n        driveState().setActiveActionDialog(\r\n          'preview',\r\n          selectedEntries.length ? selectedEntries : [entry]\r\n        );\r\n      }\r\n    },\r\n    [navigate]\r\n  );\r\n\r\n  return {performViewItemAction};\r\n}\r\n","import {DriveEntry} from '../../files/drive-entry';\r\nimport React, {useMemo} from 'react';\r\nimport {Table} from '@common/ui/tables/table';\r\nimport {\r\n  DriveSortDescriptor,\r\n  driveState,\r\n  useDriveStore,\r\n} from '../../drive-store';\r\nimport {FileTableRow} from './file-table-row';\r\nimport {useViewItemActionHandler} from '../use-view-item-action-handler';\r\nimport {fileTableColumns} from './file-table-columns';\r\n\r\ninterface Props {\r\n  entries: DriveEntry[];\r\n}\r\nexport function FileTable({entries}: Props) {\r\n  const {performViewItemAction} = useViewItemActionHandler();\r\n  const selectedEntries = useDriveStore(s => s.selectedEntries);\r\n  const sortDescriptor = useDriveStore(s => s.sortDescriptor);\r\n\r\n  const selectedRows = useMemo(() => {\r\n    return [...selectedEntries];\r\n  }, [selectedEntries]);\r\n\r\n  return (\r\n    <Table\r\n      columns={fileTableColumns}\r\n      data={entries}\r\n      sortDescriptor={sortDescriptor}\r\n      onSortChange={value => {\r\n        driveState().setSortDescriptor(value as DriveSortDescriptor);\r\n      }}\r\n      onAction={performViewItemAction}\r\n      selectedRows={selectedRows}\r\n      selectionStyle=\"highlight\"\r\n      renderRowAs={FileTableRow}\r\n      onSelectionChange={value => {\r\n        driveState().selectEntries(value as number[]);\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {DriveEntry} from '../../files/drive-entry';\r\nimport {driveState, useDriveStore} from '../../drive-store';\r\nimport {mergeProps} from '@react-aria/utils';\r\nimport {useFileViewDnd} from '../use-file-view-dnd';\r\nimport {useViewItemActionHandler} from '../use-view-item-action-handler';\r\nimport {usePointerEvents} from '@common/ui/interactions/use-pointer-events';\r\nimport {createEventHandler} from '@common/utils/dom/create-event-handler';\r\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\r\nimport {BaseFileGridItem} from './base-file-grid-item';\r\nimport {EntryActionMenuTrigger} from '../../entry-actions/entry-action-menu-trigger';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {MoreVertIcon} from '@common/icons/material/MoreVert';\r\nimport {Checkbox} from '@common/ui/forms/toggle/checkbox';\r\nimport {isCtrlOrShiftPressed} from '@common/utils/keybinds/is-ctrl-or-shift-pressed';\r\n\r\ninterface FileGridItemProps {\r\n  entry: DriveEntry;\r\n}\r\nexport function FileGridItem({entry}: FileGridItemProps) {\r\n  const isSelected = useDriveStore(s => s.selectedEntries.has(entry.id));\r\n  const {performViewItemAction} = useViewItemActionHandler();\r\n  const {isMobileMode} = useContext(DashboardLayoutContext);\r\n\r\n  const {draggableProps, droppableProps, itemClassName, ref} =\r\n    useFileViewDnd<HTMLDivElement>(entry);\r\n\r\n  const toggleEntry = () => {\r\n    if (isSelected) {\r\n      driveState().deselectEntries([entry.id]);\r\n    } else {\r\n      driveState().selectEntries([entry.id], true);\r\n    }\r\n  };\r\n\r\n  const pressHandler = (e: PointerEvent, el: HTMLElement) => {\r\n    if (isMobileMode) {\r\n      if (driveState().selectedEntries.size) {\r\n        toggleEntry();\r\n      } else {\r\n        performViewItemAction(entry);\r\n      }\r\n    } else {\r\n      if (isCtrlOrShiftPressed(e)) {\r\n        toggleEntry();\r\n      } else {\r\n        driveState().selectEntries([entry.id]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const {domProps: pressProps} = usePointerEvents({\r\n    onLongPress: isMobileMode ? () => toggleEntry() : undefined,\r\n    onPress: pressHandler,\r\n  });\r\n\r\n  const keyboardHandler: React.KeyboardEventHandler = e => {\r\n    if (e.key === 'Enter' || e.key === ' ') {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      performViewItemAction(entry);\r\n    }\r\n  };\r\n\r\n  const contextMenuHandler: React.MouseEventHandler = e => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (!isMobileMode) {\r\n      if (!driveState().selectedEntries.has(entry.id)) {\r\n        driveState().selectEntries([entry.id]);\r\n      }\r\n      driveState().setContextMenuData({x: e.clientX, y: e.clientY});\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BaseFileGridItem\r\n      {...mergeProps(draggableProps, droppableProps, pressProps, {\r\n        onKeyDown: createEventHandler(keyboardHandler),\r\n      })}\r\n      ref={ref}\r\n      entry={entry}\r\n      isSelected={isSelected}\r\n      isMobileMode={!!isMobileMode}\r\n      tabIndex={-1}\r\n      onDoubleClick={e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if (!isMobileMode) {\r\n          performViewItemAction(entry);\r\n        }\r\n      }}\r\n      footerAdornment={\r\n        isMobileMode && (\r\n          <FooterAdornment entry={entry} isSelected={isSelected} />\r\n        )\r\n      }\r\n      onContextMenu={createEventHandler(contextMenuHandler)}\r\n      className={itemClassName}\r\n    />\r\n  );\r\n}\r\n\r\ninterface FooterProps {\r\n  entry: DriveEntry;\r\n  isSelected?: boolean;\r\n}\r\nfunction FooterAdornment({entry, isSelected}: FooterProps) {\r\n  const anySelected = useDriveStore(s => s.selectedEntries.size);\r\n\r\n  if (anySelected) {\r\n    return <Checkbox className=\"block mr-8\" checked={isSelected} />;\r\n  }\r\n\r\n  return (\r\n    <EntryActionMenuTrigger entries={[entry]}>\r\n      <IconButton\r\n        className=\"text-muted\"\r\n        onPointerDown={e => {\r\n          e.stopPropagation();\r\n        }}\r\n      >\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n    </EntryActionMenuTrigger>\r\n  );\r\n}\r\n","import {FileGridItem} from './file-grid-item';\r\nimport React from 'react';\r\nimport {DriveEntry} from '../../files/drive-entry';\r\n\r\ninterface FileGridProps {\r\n  entries: DriveEntry[];\r\n}\r\nexport function FileGrid({entries}: FileGridProps) {\r\n  return (\r\n    <div className=\"file-grid-container\">\r\n      <div className=\"file-grid\">\r\n        {entries.map(entry => {\r\n          return <FileGridItem key={entry.id} entry={entry} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {driveState, useDriveStore} from '../../drive-store';\r\nimport {EntriesSortButton} from './entries-sort-button';\r\nimport React from 'react';\r\n\r\ninterface DriveSortButtonProps {\r\n  isDisabled?: boolean;\r\n}\r\nexport function DriveSortButton({isDisabled}: DriveSortButtonProps) {\r\n  const descriptor = useDriveStore(s => s.sortDescriptor);\r\n  return (\r\n    <EntriesSortButton\r\n      isDisabled={isDisabled}\r\n      descriptor={descriptor}\r\n      onChange={value => {\r\n        driveState().setSortDescriptor(value);\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, {ReactNode, useContext} from 'react';\r\nimport {useDriveStore} from './drive-store';\r\nimport {\r\n  DrivePage,\r\n  makeFolderPage,\r\n  RootFolderPage,\r\n  SharesPage,\r\n  TrashPage,\r\n} from './drive-page/drive-page';\r\nimport {Breadcrumb} from '@common/ui/breadcrumbs/breadcrumb';\r\nimport {useAuth} from '@common/auth/use-auth';\r\nimport {useFolderPath} from './files/queries/use-folder-path';\r\nimport {EntryActionMenuTrigger} from './entry-actions/entry-action-menu-trigger';\r\nimport {useActiveWorkspace} from '@common/workspace/active-workspace-id-context';\r\nimport {ButtonBase} from '@common/ui/buttons/button-base';\r\nimport {BreadcrumbItem} from '@common/ui/breadcrumbs/breadcrumb-item';\r\nimport {ArrowDropDownIcon} from '@common/icons/material/ArrowDropDown';\r\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\r\nimport {MixedText} from '@common/i18n/mixed-text';\r\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\r\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\r\n\r\ninterface ItemConfig {\r\n  page: DrivePage;\r\n  label: MessageDescriptor | string;\r\n}\r\n\r\ninterface PageBreadcrumbsProps {\r\n  className?: string;\r\n}\r\nexport function PageBreadcrumbs({className}: PageBreadcrumbsProps) {\r\n  const {isMobileMode} = useContext(DashboardLayoutContext);\r\n  const navigate = useNavigate();\r\n  const page = useDriveStore(s => s.activePage);\r\n  const folder = page?.folder;\r\n  const query = useFolderPath({\r\n    hash: folder?.hash,\r\n    isEnabled: folder?.hash !== RootFolderPage.folder.hash,\r\n  });\r\n  const workspace = useActiveWorkspace();\r\n  const rootItem = useRootItem();\r\n  // wait until path, folder and workspace load fully\r\n  const isLoading =\r\n    !page ||\r\n    !workspace ||\r\n    (page.isFolderPage && !folder) ||\r\n    query.fetchStatus !== 'idle';\r\n\r\n  let content: ReactNode;\r\n\r\n  if (isLoading) {\r\n    content = null;\r\n  } else {\r\n    const items: ItemConfig[] = rootItem ? [rootItem] : [];\r\n\r\n    if (query.data) {\r\n      query.data.path.forEach(parent => {\r\n        items.push({\r\n          page: makeFolderPage(parent),\r\n          label: parent.name,\r\n        });\r\n      });\r\n    }\r\n\r\n    content = (\r\n      <Breadcrumb\r\n        className={className}\r\n        size={isMobileMode ? 'md' : 'lg'}\r\n        currentIsClickable\r\n      >\r\n        {items.map((item, index) => {\r\n          const isLast = index === items.length - 1;\r\n          if (!isLast) {\r\n            return (\r\n              <BreadcrumbItem\r\n                key={item.page.uniqueId}\r\n                onSelected={() => {\r\n                  navigate(item.page.path);\r\n                }}\r\n              >\r\n                <MixedText value={item.label} />\r\n              </BreadcrumbItem>\r\n            );\r\n          }\r\n\r\n          return (\r\n            <BreadcrumbItem key={item.page.uniqueId}>\r\n              {({isMenuItem}) => {\r\n                if (\r\n                  isMenuItem ||\r\n                  (!item.page.folder && item.page !== TrashPage)\r\n                )\r\n                  return <MixedText value={item.label} />;\r\n                return (\r\n                  <EntryActionMenuTrigger page={item.page}>\r\n                    <ButtonBase className=\"flex items-center gap-2 rounded focus-visible:ring-offset-4\">\r\n                      <MixedText value={item.label} />\r\n                      <ArrowDropDownIcon className=\"text-muted icon-md\" />\r\n                    </ButtonBase>\r\n                  </EntryActionMenuTrigger>\r\n                );\r\n              }}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    );\r\n  }\r\n\r\n  return content;\r\n}\r\n\r\nfunction useRootItem(): ItemConfig | null {\r\n  const page = useDriveStore(s => s.activePage);\r\n  const workspace = useActiveWorkspace();\r\n  const {user} = useAuth();\r\n\r\n  if (!page) return null;\r\n\r\n  // in workspace\r\n  if (workspace && !workspace.default) {\r\n    if (\r\n      page?.isFolderPage &&\r\n      (page?.name === RootFolderPage.name ||\r\n        page.folder?.workspace_id === workspace.id)\r\n    ) {\r\n      return {label: workspace.name, page: RootFolderPage};\r\n    }\r\n  }\r\n\r\n  if (page?.isFolderPage) {\r\n    const owner = page.folder?.users.find(u => u.owns_entry);\r\n    // inside shared folder\r\n    if (owner?.id !== user?.id) {\r\n      return {label: SharesPage.label, page: SharesPage};\r\n    }\r\n    // if folder is currently active, root item will always be root folder page\r\n    return {label: RootFolderPage.label, page: RootFolderPage};\r\n  }\r\n\r\n  // if folder page is not active, we are already at the root\r\n  return {label: page.label, page};\r\n}\r\n","import React, {ReactNode, useEffect, useRef, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport {UseInfiniteQueryResult} from '@tanstack/react-query/src/types';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\r\nimport {ProgressCircle} from '@common/ui/progress/progress-circle';\r\n\r\nexport interface InfiniteScrollSentinelProps {\r\n  loaderMarginTop?: string;\r\n  children?: ReactNode;\r\n  loadMoreExtraContent?: ReactNode;\r\n  query: UseInfiniteQueryResult;\r\n  style?: React.CSSProperties;\r\n  className?: string;\r\n  variant?: 'infiniteScroll' | 'loadMore';\r\n  size?: 'sm' | 'md';\r\n}\r\nexport function InfiniteScrollSentinel({\r\n  query: {isInitialLoading, fetchNextPage, isFetchingNextPage, hasNextPage},\r\n  children,\r\n  loaderMarginTop = 'mt-24',\r\n  style,\r\n  className,\r\n  variant: _variant = 'infiniteScroll',\r\n  loadMoreExtraContent,\r\n  size = 'md',\r\n}: InfiniteScrollSentinelProps) {\r\n  const sentinelRef = useRef<HTMLDivElement>(null);\r\n  const isLoading = isFetchingNextPage || isInitialLoading;\r\n  const [loadMoreClickCount, setLoadMoreClickCount] = useState(0);\r\n  const innerVariant =\r\n    _variant === 'loadMore' && loadMoreClickCount < 3\r\n      ? 'loadMore'\r\n      : 'infiniteScroll';\r\n\r\n  useEffect(() => {\r\n    const sentinelEl = sentinelRef.current;\r\n    if (!sentinelEl || innerVariant === 'loadMore') return;\r\n    const observer = new IntersectionObserver(([entry]) => {\r\n      if (entry.isIntersecting && hasNextPage && !isLoading) {\r\n        fetchNextPage();\r\n      }\r\n    });\r\n    observer.observe(sentinelEl);\r\n    return () => {\r\n      observer.unobserve(sentinelEl);\r\n    };\r\n  }, [fetchNextPage, hasNextPage, isLoading, innerVariant]);\r\n\r\n  let content: ReactNode;\r\n\r\n  if (children) {\r\n    // children might already be wrapped in AnimatePresence, so only wrap default loader with it\r\n    content = isFetchingNextPage ? children : null;\r\n  } else if (innerVariant === 'loadMore') {\r\n    content = !isInitialLoading && hasNextPage && (\r\n      <div className={clsx('flex items-center gap-8', loaderMarginTop)}>\r\n        {loadMoreExtraContent}\r\n        <Button\r\n          size={size === 'md' ? 'sm' : 'xs'}\r\n          className={clsx(\r\n            size === 'sm' ? 'min-h-24 min-w-96' : 'min-h-36 min-w-112'\r\n          )}\r\n          variant=\"outline\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            fetchNextPage();\r\n            setLoadMoreClickCount(loadMoreClickCount + 1);\r\n          }}\r\n          disabled={isLoading}\r\n        >\r\n          {loadMoreClickCount >= 2 && !isFetchingNextPage ? (\r\n            <Trans message=\"Load all\" />\r\n          ) : (\r\n            <Trans message=\"Show more\" />\r\n          )}\r\n        </Button>\r\n      </div>\r\n    );\r\n  } else {\r\n    content = (\r\n      <AnimatePresence>\r\n        {isFetchingNextPage && (\r\n          <m.div\r\n            className={clsx('flex justify-center w-full', loaderMarginTop)}\r\n            {...opacityAnimation}\r\n          >\r\n            <ProgressCircle size={size} isIndeterminate aria-label=\"loading\" />\r\n          </m.div>\r\n        )}\r\n      </AnimatePresence>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={style}\r\n      className={clsx('w-full', className, hasNextPage && 'min-h-36')}\r\n      role=\"presentation\"\r\n    >\r\n      <div ref={sentinelRef} aria-hidden />\r\n      {content}\r\n    </div>\r\n  );\r\n}\r\n","import {AnimatePresence, m} from 'framer-motion';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport React from 'react';\r\nimport {opacityAnimation} from '@common/ui/animation/opacity-animation';\r\n\r\ninterface DropTargetMaskProps {\r\n  isVisible: boolean;\r\n}\r\nexport function DropTargetMask({isVisible}: DropTargetMaskProps) {\r\n  const mask = (\r\n    <m.div\r\n      key=\"dragTargetMask\"\r\n      {...opacityAnimation}\r\n      transition={{duration: 0.3}}\r\n      className=\"absolute inset-0 w-full min-h-full bg-primary-light/30 border-2 border-dashed border-primary pointer-events-none\"\r\n    >\r\n      <m.div\r\n        initial={{y: '100%', opacity: 0}}\r\n        animate={{y: '-10px', opacity: 1}}\r\n        exit={{y: '100%', opacity: 0}}\r\n        className=\"p-10 bg-primary text-on-primary fixed bottom-0 left-0 right-0 max-w-max mx-auto rounded\"\r\n      >\r\n        <Trans message=\"Drop files to upload them to this folder.\" />\r\n      </m.div>\r\n    </m.div>\r\n  );\r\n  return <AnimatePresence>{isVisible ? mask : null}</AnimatePresence>;\r\n}\r\n","import React, {\r\n  KeyboardEventHandler,\r\n  MouseEventHandler,\r\n  ReactNode,\r\n  useContext,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport {usePaginatedEntries} from '../files/queries/use-paginated-entries';\r\nimport {driveState, useDriveStore} from '../drive-store';\r\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\r\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\r\nimport {SearchFilterList} from '../search/search-filter-list';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {useMouseSelectionBox} from '@common/ui/interactions/dnd/mouse-selection/use-mouse-selection-box';\r\nimport {useDroppable} from '@common/ui/interactions/dnd/use-droppable';\r\nimport {mergeProps} from '@react-aria/utils';\r\nimport {useDriveUploadQueue} from '../uploading/use-drive-upload-queue';\r\nimport {EntryActionList} from '../entry-actions/entry-action-list';\r\nimport {DriveContextMenu} from '../files/drive-context-menu';\r\nimport {FileTable} from './file-table/file-table';\r\nimport {FileGrid} from './file-grid/file-grid';\r\nimport {DriveSortButton} from '../layout/sorting/drive-sort-button';\r\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\r\nimport {PageBreadcrumbs} from '../page-breadcrumbs';\r\nimport {InfiniteScrollSentinel} from '@common/ui/infinite-scroll/infinite-scroll-sentinel';\r\nimport {useEntries} from '../files/queries/use-entries';\r\nimport {AdHost} from '@common/admin/ads/ad-host';\r\nimport {DropTargetMask} from '../drop-target-mask';\r\nimport {useSearchParams} from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport {MixedDraggable} from '@common/ui/interactions/dnd/use-draggable';\r\nimport {isCtrlKeyPressed} from '@common/utils/keybinds/is-ctrl-key-pressed';\r\nimport {useDeleteEntries} from '@app/drive/files/queries/use-delete-entries';\r\nimport {createEventHandler} from '@common/utils/dom/create-event-handler';\r\nimport {TrashPage} from '@app/drive/drive-page/drive-page';\r\nimport {getSelectedEntries} from '@app/drive/files/use-selected-entries';\r\n\r\ninterface FileViewProps {\r\n  className?: string;\r\n}\r\nexport function FileView({className}: FileViewProps) {\r\n  const [params] = useSearchParams();\r\n  const isSearchingOrFiltering =\r\n    !!params.get('query') || !!params.get('filters');\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const query = usePaginatedEntries();\r\n  const entries = useEntries();\r\n  const {uploadFiles} = useDriveUploadQueue();\r\n  const deleteEntries = useDeleteEntries();\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  const [isDragOver, setIsDragOver] = useState(false);\r\n  const viewMode = useDriveStore(s => s.viewMode);\r\n  const {isMobileMode} = useContext(DashboardLayoutContext);\r\n\r\n  const {containerProps, boxProps} = useMouseSelectionBox({\r\n    containerRef,\r\n    onPointerDown: e => {\r\n      if (!(e.target as HTMLElement).closest('.entry-action-list')) {\r\n        driveState().deselectEntries('all');\r\n      }\r\n    },\r\n  });\r\n\r\n  const {droppableProps} = useDroppable({\r\n    id: 'driveRoot',\r\n    ref: containerRef,\r\n    types: ['nativeFile'],\r\n    disabled: !activePage?.canUpload,\r\n    onDragEnter: () => {\r\n      setIsDragOver(true);\r\n    },\r\n    onDragLeave: () => {\r\n      setIsDragOver(false);\r\n    },\r\n    onDrop: async (draggable: MixedDraggable) => {\r\n      if (draggable.type === 'nativeFile') {\r\n        uploadFiles(await draggable.getData());\r\n      }\r\n    },\r\n  });\r\n\r\n  if (!activePage) return null;\r\n\r\n  let content: ReactNode;\r\n  if (!entries.length && (!query.isLoading || query.fetchStatus === 'idle')) {\r\n    const noContentMessage = activePage.noContentMessage(\r\n      isSearchingOrFiltering,\r\n    );\r\n    content = (\r\n      <IllustratedMessage\r\n        className=\"mt-40\"\r\n        image={<SvgImage src={noContentMessage.image} />}\r\n        title={<Trans {...noContentMessage.title} />}\r\n        description={<Trans {...noContentMessage.description} />}\r\n      />\r\n    );\r\n  } else if (!query.isLoading) {\r\n    content =\r\n      viewMode === 'list' ? (\r\n        <FileTable entries={entries} />\r\n      ) : (\r\n        <FileGrid entries={entries} />\r\n      );\r\n  }\r\n\r\n  const handleContextMenu: MouseEventHandler = e => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    driveState().deselectEntries('all');\r\n    driveState().setContextMenuData({x: e.clientX, y: e.clientY});\r\n  };\r\n\r\n  const handleKeybinds: KeyboardEventHandler = e => {\r\n    if (e.key === 'a' && isCtrlKeyPressed(e)) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      driveState().selectEntries(entries.map(entry => entry.id));\r\n    }\r\n    if (e.key === 'Delete') {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      if (driveState().selectedEntries.size && !deleteEntries.isPending) {\r\n        if (activePage === TrashPage) {\r\n          driveState().setActiveActionDialog(\r\n            'confirmAndDeleteForever',\r\n            getSelectedEntries(),\r\n          );\r\n        } else {\r\n          deleteEntries.mutate({\r\n            entryIds: [...driveState().selectedEntries],\r\n            deleteForever: activePage === TrashPage,\r\n          });\r\n          driveState().selectEntries([]);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx('relative outline-none', className)}\r\n      tabIndex={-1}\r\n      {...mergeProps(containerProps, droppableProps, {\r\n        onKeyDown: createEventHandler(handleKeybinds),\r\n      })}\r\n      onContextMenu={handleContextMenu}\r\n    >\r\n      <div className=\"relative flex min-h-full flex-col pt-10\">\r\n        {isMobileMode ? (\r\n          <PageBreadcrumbs className=\"mb-10 px-14\" />\r\n        ) : (\r\n          <Toolbar />\r\n        )}\r\n        <SearchFilterList />\r\n        <div className=\"relative flex-auto px-18 pb-18 md:px-24\">\r\n          <AdHost slot=\"drive\" className=\"mb-24\" />\r\n          {content}\r\n          <InfiniteScrollSentinel query={query} />\r\n        </div>\r\n        <div\r\n          {...boxProps}\r\n          className=\"pointer-events-none absolute left-0 top-0 z-10 hidden border border-primary-light bg-primary-light/20 shadow-md\"\r\n        />\r\n        <DriveContextMenu />\r\n        <DropTargetMask isVisible={isDragOver} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Toolbar() {\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  return (\r\n    <div className=\"my-10 flex min-h-42 items-center justify-between gap-40 px-10 text-muted md:px-18\">\r\n      <DriveSortButton isDisabled={activePage?.disableSort} />\r\n      <EntryActionList className=\"text-muted\" />\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  ComponentPropsWithoutRef,\r\n  CSSProperties,\r\n  memo,\r\n  ReactElement,\r\n  useMemo,\r\n  useState,\r\n} from 'react';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {FileTypeIcon} from '@common/uploads/file-type-icon/file-type-icon';\r\nimport {prettyBytes} from '@common/uploads/utils/pretty-bytes';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {CloseIcon} from '@common/icons/material/Close';\r\nimport {ProgressCircle} from '@common/ui/progress/progress-circle';\r\nimport {CheckCircleIcon} from '@common/icons/material/CheckCircle';\r\nimport {UploadedFile} from '@common/uploads/uploaded-file';\r\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {MixedText} from '@common/i18n/mixed-text';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\nimport {ErrorIcon} from '@common/icons/material/Error';\r\nimport {WarningIcon} from '@common/icons/material/Warning';\r\nimport {message} from '@common/i18n/message';\r\n\r\ninterface UploadQueueProps {\r\n  file: UploadedFile;\r\n  style: CSSProperties;\r\n}\r\nexport const UploadQueueItem = memo(({file, style}: UploadQueueProps) => {\r\n  return (\r\n    <div\r\n      className=\"p-10 flex items-center gap-14 w-full absolute top-0 left-0\"\r\n      style={style}\r\n    >\r\n      <div className=\"shrink-0 border rounded p-8\">\r\n        <FileTypeIcon className=\"w-22 h-22\" mime={file.mime} />\r\n      </div>\r\n      <div className=\"flex-auto min-w-0 pr-10\">\r\n        <div className=\"mb-2 flex items-center min-w-0 gap-10\">\r\n          <div className=\"flex-auto font-medium whitespace-nowrap min-w-0 overflow-hidden overflow-ellipsis\">\r\n            {file.name}\r\n          </div>\r\n        </div>\r\n        <SizeInfo file={file} />\r\n      </div>\r\n      <div className=\"mr-10\">\r\n        <FileStatus file={file} />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\ninterface SizeInfoProps {\r\n  file: UploadedFile;\r\n}\r\nfunction SizeInfo({file}: SizeInfoProps) {\r\n  const fileUpload = useFileUploadStore(s => s.fileUploads.get(file.id));\r\n  const bytesUploaded = fileUpload?.bytesUploaded || 0;\r\n\r\n  const totalBytes = useMemo(() => prettyBytes(file.size), [file]);\r\n  const uploadedBytes = useMemo(\r\n    () => prettyBytes(bytesUploaded),\r\n    [bytesUploaded]\r\n  );\r\n\r\n  let statusMessage: ReactElement;\r\n  if (fileUpload?.status === 'completed') {\r\n    statusMessage = <Trans message=\"Upload complete\" />;\r\n  } else if (fileUpload?.status === 'aborted') {\r\n    statusMessage = <Trans message=\"Upload cancelled\" />;\r\n  } else if (fileUpload?.status === 'failed') {\r\n    statusMessage = <Trans message=\"Upload failed\" />;\r\n  } else {\r\n    statusMessage = (\r\n      <Trans\r\n        message=\":bytesUploaded of :totalBytes\"\r\n        values={{\r\n          bytesUploaded: uploadedBytes,\r\n          totalBytes,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return <div className=\"text-muted text-xs\">{statusMessage}</div>;\r\n}\r\n\r\ninterface FileStatusProps {\r\n  file: UploadedFile;\r\n}\r\nfunction FileStatus({file}: FileStatusProps) {\r\n  const fileUpload = useFileUploadStore(s => s.fileUploads.get(file.id));\r\n  const abortUpload = useFileUploadStore(s => s.abortUpload);\r\n  const percentage = fileUpload?.percentage || 0;\r\n  const status = fileUpload?.status;\r\n  const errorMessage = fileUpload?.errorMessage;\r\n  const [isHovered, setIsHovered] = useState(false);\r\n\r\n  const abortButton = (\r\n    <IconButton\r\n      size=\"sm\"\r\n      onClick={() => {\r\n        abortUpload(file.id);\r\n      }}\r\n    >\r\n      <CloseIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  const progressButton = (\r\n    <ProgressCircle aria-label=\"Upload progress\" size=\"sm\" value={percentage} />\r\n  );\r\n\r\n  let statusButton: ReactElement;\r\n  if (status === 'failed') {\r\n    const errMessage =\r\n      errorMessage || message('This file could not be uploaded');\r\n    statusButton = (\r\n      <AnimatedStatus>\r\n        <Tooltip variant=\"danger\" label={<MixedText value={errMessage} />}>\r\n          <ErrorIcon className=\"text-danger\" size=\"md\" />\r\n        </Tooltip>\r\n      </AnimatedStatus>\r\n    );\r\n  } else if (status === 'aborted') {\r\n    statusButton = (\r\n      <AnimatedStatus>\r\n        <WarningIcon className=\"text-warning\" size=\"md\" />\r\n      </AnimatedStatus>\r\n    );\r\n  } else if (status === 'completed') {\r\n    statusButton = (\r\n      <AnimatedStatus>\r\n        <CheckCircleIcon size=\"md\" className=\"text-positive\" />\r\n      </AnimatedStatus>\r\n    );\r\n  } else {\r\n    statusButton = (\r\n      <AnimatedStatus\r\n        onPointerEnter={e => {\r\n          if (e.pointerType === 'mouse') {\r\n            setIsHovered(true);\r\n          }\r\n        }}\r\n        onPointerLeave={e => {\r\n          if (e.pointerType === 'mouse') {\r\n            setIsHovered(false);\r\n          }\r\n        }}\r\n      >\r\n        {isHovered ? abortButton : progressButton}\r\n      </AnimatedStatus>\r\n    );\r\n  }\r\n\r\n  return <AnimatePresence>{statusButton}</AnimatePresence>;\r\n}\r\n\r\ninterface AnimatedStatusProps\r\n  extends Omit<\r\n    ComponentPropsWithoutRef<'div'>,\r\n    'onAnimationStart' | 'onDragStart' | 'onDragEnd' | 'onDrag'\r\n  > {\r\n  children: ReactElement;\r\n}\r\nfunction AnimatedStatus({children, ...domProps}: AnimatedStatusProps) {\r\n  return (\r\n    <m.div\r\n      {...domProps}\r\n      initial={{scale: 0, opacity: 0}}\r\n      animate={{scale: 1, opacity: 1}}\r\n      exit={{scale: 0, opacity: 0}}\r\n    >\r\n      {children}\r\n    </m.div>\r\n  );\r\n}\r\n","import {ReactElement, useRef} from 'react';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {driveState, useDriveStore} from '../drive-store';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {CloseIcon} from '@common/icons/material/Close';\r\nimport {useFileUploadStore} from '@common/uploads/uploader/file-upload-provider';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {UploadQueueItem} from './upload-queue-item';\r\nimport {useVirtualizer} from '@tanstack/react-virtual';\r\n\r\nexport function UploadQueue() {\r\n  const isOpen = useDriveStore(s => s.uploadQueueIsOpen);\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      {isOpen && (\r\n        <m.div\r\n          key=\"upload-queue\"\r\n          className=\"shadow-xl rounded fixed bottom-16 right-16 bg z-modal border w-375 text-sm\"\r\n          initial={{y: '100%', opacity: 0}}\r\n          animate={{y: 0, opacity: 1}}\r\n          exit={{y: '100%', opacity: 0}}\r\n        >\r\n          <Header />\r\n          <UploadList />\r\n        </m.div>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n}\r\n\r\nexport function Header() {\r\n  const inProgressUploadsCount = useFileUploadStore(s => s.activeUploadsCount);\r\n  const completedUploadsCount = useFileUploadStore(\r\n    s => s.completedUploadsCount\r\n  );\r\n  const clearInactive = useFileUploadStore(s => s.clearInactive);\r\n\r\n  let message: ReactElement;\r\n  if (inProgressUploadsCount) {\r\n    message = (\r\n      <Trans\r\n        message=\"Uploading :count files\"\r\n        values={{count: inProgressUploadsCount}}\r\n      />\r\n    );\r\n  } else if (completedUploadsCount) {\r\n    message = (\r\n      <Trans\r\n        message=\"Uploaded :count files\"\r\n        values={{count: completedUploadsCount}}\r\n      />\r\n    );\r\n  } else {\r\n    message = <Trans message=\"No active uploads\" />;\r\n  }\r\n\r\n  // only allow closing upload queue if there are no active uploads\r\n  return (\r\n    <div className=\"px-10 py-4 bg-alt flex items-center gap-10 justify-between border-b min-h-[45px]\">\r\n      {message}\r\n      {inProgressUploadsCount === 0 ? (\r\n        <IconButton\r\n          size=\"sm\"\r\n          onClick={() => {\r\n            driveState().setUploadQueueIsOpen(false);\r\n            // wait for upload queue panel animation to complete, then clear inactive uploads\r\n            setTimeout(() => {\r\n              clearInactive();\r\n            }, 200);\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : undefined}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction UploadList() {\r\n  const uploads = useFileUploadStore(s => s.fileUploads);\r\n  const uploadsArray = [...uploads.values()];\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const virtualizer = useVirtualizer({\r\n    count: uploads.size,\r\n    getScrollElement: () => ref.current,\r\n    estimateSize: () => 60,\r\n    overscan: 4,\r\n  });\r\n\r\n  return (\r\n    <div className=\"max-h-320 overflow-y-auto\" ref={ref}>\r\n      <div\r\n        className=\"relative w-full\"\r\n        style={{\r\n          height: `${virtualizer.getTotalSize()}px`,\r\n        }}\r\n      >\r\n        {virtualizer.getVirtualItems().map(virtualItem => {\r\n          const upload = uploadsArray[virtualItem.index];\r\n          return (\r\n            <UploadQueueItem\r\n              style={{\r\n                height: `${virtualItem.size}px`,\r\n                transform: `translateY(${virtualItem.start}px)`,\r\n              }}\r\n              key={upload.file.id}\r\n              file={upload.file}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default \"__VITE_ASSET__6b065fb0__\"","import React, {ReactNode, useContext} from 'react';\r\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\r\nimport {FileTypeIcon} from '@common/uploads/file-type-icon/file-type-icon';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {CloseIcon} from '@common/icons/material/Close';\r\n\r\ninterface HeaderProps {\r\n  entryType: string;\r\n  entryName: ReactNode;\r\n}\r\nexport function DetailsSidebarHeader({entryType, entryName}: HeaderProps) {\r\n  const {setRightSidenavStatus} = useContext(DashboardLayoutContext);\r\n  return (\r\n    <div className=\"flex items-center gap-16 text-text-main mb-38\">\r\n      <FileTypeIcon className=\"w-24 h-24\" type={entryType} />\r\n      <div className=\"text-xl font-normal text-ellipsis flex-auto mr-auto min-w-0 break-words\">\r\n        {entryName}\r\n      </div>\r\n      <IconButton\r\n        size=\"md\"\r\n        className=\"flex-shrink-0\"\r\n        onClick={() => {\r\n          setRightSidenavStatus('closed');\r\n        }}\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n","import React, {ReactNode} from 'react';\r\nimport clsx from 'clsx';\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n  margin?: string;\r\n}\r\nexport function DetailsSidebarSectionHeader({\r\n  children,\r\n  margin = 'mb-20',\r\n}: Props) {\r\n  return <div className={clsx('text-base text-main', margin)}>{children}</div>;\r\n}\r\n","import {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {useMutation} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\nimport {message} from '@common/i18n/message';\r\nimport {ChipValue} from '@common/ui/forms/input-field/chip-field/chip-field';\r\nimport {DriveEntry} from '@app/drive/files/drive-entry';\r\nimport {invalidateEntryQueries} from '@app/drive/drive-query-keys';\r\n\r\ninterface Response extends BackendResponse {\r\n  //\r\n}\r\n\r\ninterface Payload {\r\n  entry: DriveEntry;\r\n  tags: ChipValue[];\r\n}\r\n\r\nexport function useSyncEntryTags() {\r\n  return useMutation({\r\n    mutationFn: (props: Payload) => createComment(props),\r\n    onSuccess: () => {\r\n      invalidateEntryQueries();\r\n    },\r\n    onError: err => showHttpErrorToast(err, message('Failed to save tags.')),\r\n  });\r\n}\r\n\r\nfunction createComment({entry, tags}: Payload): Promise<Response> {\r\n  return apiClient\r\n    .post(`file-entries/${entry.id}/sync-tags`, {\r\n      tags: tags.map(tag => tag.name),\r\n    })\r\n    .then(r => r.data);\r\n}\r\n","import {keepPreviousData, useQuery} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {NormalizedModel} from '@common/datatable/filters/normalized-model';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\n\r\ninterface Response extends BackendResponse {\r\n  results: NormalizedModel[];\r\n}\r\n\r\nexport function useFileEntryTags(query?: string) {\r\n  return useQuery({\r\n    queryKey: ['file-entry-tags', query],\r\n    queryFn: () => fetchTags(query),\r\n    placeholderData: keepPreviousData,\r\n  });\r\n}\r\n\r\nasync function fetchTags(query?: string) {\r\n  return apiClient\r\n    .get<Response>('file-entry-tags', {params: {query}})\r\n    .then(r => r.data);\r\n}\r\n","import {DetailsSidebarSectionHeader} from '@app/drive/details-sidebar/details-sidebar-section-header';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {DriveEntry} from '@app/drive/files/drive-entry';\r\nimport {\r\n  ChipField,\r\n  ChipValue,\r\n} from '@common/ui/forms/input-field/chip-field/chip-field';\r\nimport React, {useState} from 'react';\r\nimport {Item} from '@common/ui/forms/listbox/item';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {message} from '@common/i18n/message';\r\nimport {useSyncEntryTags} from '@app/drive/details-sidebar/requests/use-sync-entry-tags';\r\nimport {useFileEntryTags} from '@app/drive/details-sidebar/requests/use-file-entry-tags';\r\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\r\n\r\ninterface Props {\r\n  entry: DriveEntry;\r\n}\r\nexport function DetailsSidebarTags({entry}: Props) {\r\n  // use key={entry.id} to force re-render tag chip field when entry changes\r\n  return (\r\n    <div className=\"mt-20 border-t pt-20\">\r\n      <DetailsSidebarSectionHeader margin=\"mb-10\">\r\n        <Trans message=\"Tags\" />\r\n      </DetailsSidebarSectionHeader>\r\n      <TagChipField entry={entry} key={entry.id} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TagChipField({entry}: Props) {\r\n  const {trans} = useTrans();\r\n  const navigate = useNavigate();\r\n  const syncTags = useSyncEntryTags();\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [value, setValue] = useState<ChipValue[]>(entry.tags || []);\r\n  const {data, isLoading} = useFileEntryTags(inputValue);\r\n\r\n  const handleChange = (newTags: ChipValue[]) => {\r\n    setValue(newTags);\r\n    if (!syncTags.isPending) {\r\n      syncTags.mutate({tags: newTags, entry});\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ChipField\r\n      isAsync\r\n      inputValue={inputValue}\r\n      onInputValueChange={setInputValue}\r\n      suggestions={data?.results}\r\n      placeholder={trans(message('+Add tag'))}\r\n      isLoading={isLoading}\r\n      chipSize=\"sm\"\r\n      value={value}\r\n      onChange={handleChange}\r\n      onChipClick={chip => {\r\n        navigate(`/drive/search?query=${chip.name}`);\r\n      }}\r\n    >\r\n      {data?.results?.map(result => (\r\n        <Item value={result} key={result.id}>\r\n          {result.name}\r\n        </Item>\r\n      ))}\r\n    </ChipField>\r\n  );\r\n}\r\n","import {useSelectedEntryParent} from '@app/drive/files/use-selected-entries';\r\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\r\nimport React, {ReactNode, useMemo} from 'react';\r\nimport {prettyBytes} from '@common/uploads/utils/pretty-bytes';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {FolderIcon} from '@common/icons/material/Folder';\r\nimport {\r\n  getPathForFolder,\r\n  RootFolderPage,\r\n} from '@app/drive/drive-page/drive-page';\r\nimport {FormattedDate} from '@common/i18n/formatted-date';\r\nimport {DriveEntry} from '@app/drive/files/drive-entry';\r\nimport {FileThumbnail} from '@common/uploads/file-type-icon/file-thumbnail';\r\nimport {GroupsIcon} from '@common/icons/material/Groups';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\nimport {Avatar} from '@common/ui/images/avatar';\r\nimport {driveState} from '@app/drive/drive-store';\r\nimport {DetailsSidebarHeader} from '@app/drive/details-sidebar/details-sidebar-header';\r\nimport {DetailsSidebarSectionHeader} from '@app/drive/details-sidebar/details-sidebar-section-header';\r\nimport {DetailsSidebarTags} from '@app/drive/details-sidebar/details-sidebar-tags';\r\n\r\ninterface EntryPropertiesProps {\r\n  entry: DriveEntry;\r\n}\r\nexport function DetailsSidebarProperties({entry}: EntryPropertiesProps) {\r\n  return (\r\n    <div>\r\n      <DetailsSidebarHeader entryType={entry.type} entryName={entry.name} />\r\n      {entry.type === 'image' && (\r\n        <FileThumbnail className=\"mb-20\" file={entry} />\r\n      )}\r\n      <div>\r\n        <DetailsSidebarSectionHeader>\r\n          <Trans message=\"Who has access\" />\r\n        </DetailsSidebarSectionHeader>\r\n        <div className=\"flex items-center gap-14\">\r\n          {entry.workspace_id ? (\r\n            <div className=\"rounded-full border w-32 h-32 flex items-center justify-center\">\r\n              <GroupsIcon className=\"icon-md\" />\r\n            </div>\r\n          ) : null}\r\n          {entry.users.map(user => (\r\n            <Tooltip label={user.display_name} key={user.id}>\r\n              <Avatar src={user.avatar} size=\"md\" circle />\r\n            </Tooltip>\r\n          ))}\r\n        </div>\r\n        {entry.permissions['files.update'] && (\r\n          <Button\r\n            className=\"block mt-20\"\r\n            variant=\"link\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              driveState().setActiveActionDialog('share', [entry]);\r\n            }}\r\n          >\r\n            <Trans message=\"Manage Access\" />\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <PropertyList entry={entry} />\r\n      <DetailsSidebarTags entry={entry} />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface Props {\r\n  entry: DriveEntry;\r\n}\r\nfunction PropertyList({entry}: Props) {\r\n  const parent = useSelectedEntryParent();\r\n  const navigate = useNavigate();\r\n  const owner = entry.users.find(user => user.owns_entry);\r\n  const prettySize = useMemo(\r\n    () => prettyBytes(entry.file_size),\r\n    [entry.file_size]\r\n  );\r\n\r\n  return (\r\n    <div className=\"mt-20 border-t pt-20\">\r\n      <DetailsSidebarSectionHeader>\r\n        <Trans message=\"Properties\" />\r\n      </DetailsSidebarSectionHeader>\r\n      <PropertyItem\r\n        label={<Trans message=\"Type\" />}\r\n        value={\r\n          <span className=\"capitalize\">\r\n            <Trans message={entry.type} />\r\n          </span>\r\n        }\r\n      />\r\n      <PropertyItem\r\n        label={<Trans message=\"Size\" />}\r\n        value={entry.file_size ? prettySize : '-'}\r\n      />\r\n      <PropertyItem\r\n        label={<Trans message=\"Location\" />}\r\n        value={\r\n          <Button\r\n            variant=\"link\"\r\n            startIcon={<FolderIcon />}\r\n            onClick={() => {\r\n              navigate(\r\n                parent ? getPathForFolder(parent.hash) : RootFolderPage.path\r\n              );\r\n            }}\r\n          >\r\n            {parent ? parent.name : <Trans message=\"Root\" />}\r\n          </Button>\r\n        }\r\n      />\r\n      {owner && (\r\n        <PropertyItem\r\n          label={<Trans message=\"Owner\" />}\r\n          value={owner.display_name}\r\n        />\r\n      )}\r\n      <PropertyItem\r\n        label={<Trans message=\"Modified\" />}\r\n        value={<FormattedDate date={entry.updated_at} />}\r\n      />\r\n      <PropertyItem\r\n        label={<Trans message=\"Created\" />}\r\n        value={<FormattedDate date={entry.updated_at} />}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface PropertyItemProps {\r\n  label: ReactNode;\r\n  value: ReactNode;\r\n}\r\nfunction PropertyItem({label, value}: PropertyItemProps) {\r\n  return (\r\n    <div className=\"flex items-center mb-14\">\r\n      <div className=\"w-1/3 text-xs text-muted\">{label}</div>\r\n      <div className=\"w-2/3 text-sm text-main\">{value}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {Fragment} from 'react';\r\nimport {useSelectedEntry} from '../files/use-selected-entries';\r\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\r\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport detailedExamination from './detailed-examination.svg';\r\nimport clsx from 'clsx';\r\nimport {DetailsSidebarHeader} from '@app/drive/details-sidebar/details-sidebar-header';\r\nimport {DetailsSidebarProperties} from '@app/drive/details-sidebar/details-sidebar-properties';\r\n\r\ninterface DetailsSidebarProps {\r\n  className?: string;\r\n}\r\nexport function DetailsSidebar({className}: DetailsSidebarProps) {\r\n  const selectedEntry = useSelectedEntry();\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        className,\r\n        'bg p-18 text-sm text-muted border-l h-full overflow-y-auto'\r\n      )}\r\n    >\r\n      {selectedEntry ? (\r\n        <DetailsSidebarProperties entry={selectedEntry} />\r\n      ) : (\r\n        <NothingSelected />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NothingSelected() {\r\n  return (\r\n    <Fragment>\r\n      <DetailsSidebarHeader\r\n        entryType=\"folder\"\r\n        entryName={<Trans message=\"All files\" />}\r\n      />\r\n      <IllustratedMessage\r\n        image={<SvgImage src={detailedExamination} />}\r\n        description={\r\n          <Trans message=\"Select file or folder to see details here\" />\r\n        }\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {message} from '@common/i18n/message';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {FileEntry} from '@common/uploads/file-entry';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {invalidateEntryQueries} from '../../drive-query-keys';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\n\r\ninterface Response extends BackendResponse {\r\n  fileEntry: FileEntry;\r\n}\r\n\r\ninterface Payload {\r\n  entryId: number;\r\n  name: string;\r\n  initialName: string;\r\n}\r\n\r\nexport function useRenameEntry(form: UseFormReturn<any>) {\r\n  return useMutation({\r\n    mutationFn: (payload: Payload) => renameEntry(payload),\r\n    onSuccess: (r, p) => {\r\n      invalidateEntryQueries();\r\n      toast(\r\n        message(':oldName renamed to :newName', {\r\n          values: {oldName: p.initialName, newName: r.fileEntry.name},\r\n        }),\r\n      );\r\n    },\r\n    onError: err => onFormQueryError(err, form),\r\n  });\r\n}\r\n\r\nfunction renameEntry({entryId, ...payload}: Payload): Promise<Response> {\r\n  return apiClient\r\n    .put(`file-entries/${entryId}`, payload)\r\n    .then(response => response.data);\r\n}\r\n","import React from 'react';\r\nimport {useForm} from 'react-hook-form';\r\nimport {useRenameEntry} from '../queries/use-rename-entry';\r\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {Form} from '@common/ui/forms/form';\r\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\r\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\r\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {DriveEntry} from '../drive-entry';\r\n\r\ninterface FormValue {\r\n  name?: string;\r\n}\r\n\r\ninterface RenameEntryDialogProps {\r\n  entries: DriveEntry[];\r\n}\r\nexport function RenameEntryDialog({entries}: RenameEntryDialogProps) {\r\n  const {close, formId} = useDialogContext();\r\n  const initialName = entries[0]?.name;\r\n  const form = useForm({defaultValues: {name: initialName}});\r\n  const renameEntry = useRenameEntry(form);\r\n\r\n  const onSubmit = (e: Required<FormValue>) => {\r\n    renameEntry.mutate(\r\n      {\r\n        entryId: entries[0].id,\r\n        name: e.name,\r\n        initialName,\r\n      },\r\n      {onSuccess: close},\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"Rename\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Form onSubmit={onSubmit} form={form} id={formId}>\r\n          <FormTextField\r\n            placeholder=\"Enter a name...\"\r\n            aria-label=\"Entry name\"\r\n            autoFocus\r\n            name=\"name\"\r\n            required\r\n            minLength={3}\r\n            maxLength={200}\r\n          />\r\n        </Form>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button variant=\"flat\" onClick={() => close()}>\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          form={formId}\r\n          type=\"submit\"\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          disabled={renameEntry.isPending || !form.formState.isDirty}\r\n        >\r\n          <Trans message=\"Save\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {DriveFolder} from '../drive-entry';\r\nimport {invalidateEntryQueries} from '../../drive-query-keys';\r\n\r\ninterface Response extends BackendResponse {\r\n  folder: DriveFolder;\r\n}\r\n\r\ninterface CreateFolderProps {\r\n  name: string;\r\n  parentId?: number | null;\r\n}\r\n\r\nfunction createFolder({name, parentId}: CreateFolderProps): Promise<Response> {\r\n  return apiClient\r\n    .post('folders', {\r\n      name,\r\n      parentId: parentId === 0 ? null : parentId,\r\n    })\r\n    .then(response => response.data);\r\n}\r\n\r\nexport function useCreateFolder(form: UseFormReturn<any>) {\r\n  return useMutation({\r\n    mutationFn: ({name, parentId}: CreateFolderProps) => {\r\n      return createFolder({name, parentId});\r\n    },\r\n    onSuccess: () => invalidateEntryQueries(),\r\n    onError: r => onFormQueryError(r, form),\r\n  });\r\n}\r\n","import React from 'react';\r\nimport {useForm} from 'react-hook-form';\r\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {Form} from '@common/ui/forms/form';\r\nimport {useCreateFolder} from '../queries/create-folder';\r\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\r\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\r\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {message} from '@common/i18n/message';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\n\r\ninterface FormValue {\r\n  name?: string;\r\n}\r\n\r\ninterface NewFolderDialogProps {\r\n  parentId: number;\r\n}\r\nexport function NewFolderDialog({parentId}: NewFolderDialogProps) {\r\n  const {close, formId} = useDialogContext();\r\n  const {trans} = useTrans();\r\n  const form = useForm({\r\n    defaultValues: {\r\n      name: trans({message: 'Untitled Folder'}),\r\n    },\r\n  });\r\n  const createFolder = useCreateFolder(form);\r\n\r\n  const onSubmit = (value: Required<FormValue>) => {\r\n    createFolder.mutate(\r\n      {...value, parentId},\r\n      {\r\n        onSuccess: response => {\r\n          close(response.folder);\r\n          toast(message('Folder created'));\r\n        },\r\n      },\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Dialog>\r\n      <DialogHeader>\r\n        <Trans message=\"New Folder\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <Form onSubmit={onSubmit} form={form} id={formId}>\r\n          <FormTextField\r\n            placeholder={trans({\r\n              message: 'Enter a name...',\r\n            })}\r\n            aria-label=\"Entry name\"\r\n            autoFocus\r\n            autoSelectText\r\n            name=\"name\"\r\n            required\r\n            minLength={3}\r\n            maxLength={200}\r\n          />\r\n        </Form>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button variant=\"flat\" onClick={() => close()}>\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          form={formId}\r\n          type=\"submit\"\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          disabled={createFolder.isPending}\r\n        >\r\n          <Trans message=\"Create\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Dialog>\r\n  );\r\n}\r\n","import {FilePreviewDialog} from '@common/uploads/preview/file-preview-dialog';\r\nimport {DriveEntry} from '../drive-entry';\r\nimport {createElement, Fragment, useState} from 'react';\r\nimport {useShareAction} from '../../entry-actions/use-entry-actions';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {useEntries} from '../queries/use-entries';\r\n\r\ninterface EntryPreviewDialogProps {\r\n  selectedEntry: DriveEntry;\r\n}\r\nexport function EntryPreviewDialog({selectedEntry}: EntryPreviewDialogProps) {\r\n  const files = useEntries().filter(entry => entry.type !== 'folder');\r\n  const defaultActiveIndex = files.findIndex(\r\n    file => file.id === selectedEntry?.id\r\n  );\r\n  const [activeIndex, setActiveIndex] = useState(defaultActiveIndex);\r\n  return (\r\n    <FilePreviewDialog\r\n      allowDownload={selectedEntry.permissions['files.download']}\r\n      headerActionsLeft={\r\n        <DriveActions activeIndex={activeIndex} entries={files} />\r\n      }\r\n      activeIndex={activeIndex}\r\n      onActiveIndexChange={setActiveIndex}\r\n      entries={files}\r\n    />\r\n  );\r\n}\r\n\r\ninterface DriveActionsProps {\r\n  activeIndex: number;\r\n  entries: DriveEntry[];\r\n}\r\nfunction DriveActions({activeIndex, entries}: DriveActionsProps) {\r\n  const selectedEntry = entries[activeIndex];\r\n  const share = useShareAction([selectedEntry]);\r\n  if (!selectedEntry || !share) return null;\r\n\r\n  return (\r\n    <Fragment>\r\n      <IconButton\r\n        className=\"md:hidden\"\r\n        onClick={() => {\r\n          share.execute();\r\n        }}\r\n      >\r\n        {createElement(share.icon)}\r\n      </IconButton>\r\n      <Button\r\n        className=\"max-md:hidden\"\r\n        variant=\"text\"\r\n        startIcon={createElement(share.icon)}\r\n        onClick={() => {\r\n          share.execute();\r\n        }}\r\n      >\r\n        <Trans {...share.label} />\r\n      </Button>\r\n    </Fragment>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport {useMutation} from '@tanstack/react-query';\r\nimport {DriveEntryPermissions} from '../../files/drive-entry';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {invalidateEntryQueries} from '../../drive-query-keys';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {BackendErrorResponse} from '@common/errors/backend-error-response';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\n\r\nexport interface ShareEntryPayload {\r\n  emails: string[];\r\n  permissions: DriveEntryPermissions;\r\n  entryId: number;\r\n}\r\n\r\nfunction shareEntry({\r\n  entryId,\r\n  ...payload\r\n}: ShareEntryPayload): Promise<BackendResponse> {\r\n  return apiClient\r\n    .post(`file-entries/${entryId}/share`, payload)\r\n    .then(response => response.data);\r\n}\r\n\r\nexport function useShareEntry() {\r\n  return useMutation({\r\n    mutationFn: (payload: ShareEntryPayload) => shareEntry(payload),\r\n    onSuccess: () => {\r\n      invalidateEntryQueries();\r\n    },\r\n    onError: err => {\r\n      if (axios.isAxiosError(err) && err.response) {\r\n        const response = err.response.data as BackendErrorResponse;\r\n        if (response.errors?.emails) {\r\n          toast.danger(response.errors?.emails[0]);\r\n        } else {\r\n          showHttpErrorToast(err);\r\n        }\r\n      }\r\n    },\r\n  });\r\n}\r\n","import {FileEntry} from '@common/uploads/file-entry';\r\n\r\nexport interface DriveEntry extends FileEntry {\r\n  users: DriveEntryUser[];\r\n  workspace_id?: number;\r\n  permissions: {\r\n    'files.create': boolean;\r\n    'files.update': boolean;\r\n    'files.delete': boolean;\r\n    'files.download': boolean;\r\n  };\r\n}\r\n\r\nexport interface DriveFolder extends DriveEntry {\r\n  type: 'folder';\r\n  model_type?: string;\r\n}\r\n\r\nexport interface DriveEntryUser {\r\n  id: number;\r\n  email: string;\r\n  display_name: string;\r\n  avatar?: string;\r\n  owns_entry: boolean;\r\n  entry_permissions: DriveEntryPermissions;\r\n}\r\n\r\nexport interface DriveEntryPermissions {\r\n  edit?: boolean;\r\n  view?: boolean;\r\n  download?: boolean;\r\n}\r\n\r\nexport const DRIVE_ENTRY_FULL_PERMISSIONS = {\r\n  edit: true,\r\n  view: true,\r\n  download: true,\r\n};\r\n","import {Button} from '@common/ui/buttons/button';\r\nimport {ArrowDropDownIcon} from '@common/icons/material/ArrowDropDown';\r\nimport {\r\n  DRIVE_ENTRY_FULL_PERMISSIONS,\r\n  DriveEntryPermissions,\r\n  DriveEntryUser,\r\n} from '../files/drive-entry';\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  MenuTrigger,\r\n} from '@common/ui/navigation/menu/menu-trigger';\r\nimport {message} from '@common/i18n/message';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {MessageDescriptor} from '@common/i18n/message-descriptor';\r\n\r\nexport interface PermissionSelectorItem {\r\n  key: keyof DriveEntryPermissions;\r\n  value: DriveEntryPermissions;\r\n  label: MessageDescriptor;\r\n}\r\n\r\nexport const PermissionSelectorItems: PermissionSelectorItem[] = [\r\n  {\r\n    key: 'view',\r\n    value: {view: true},\r\n    label: message('Can view'),\r\n  },\r\n  {\r\n    key: 'download',\r\n    value: {view: true, download: true},\r\n    label: message('Can Download'),\r\n  },\r\n  {\r\n    key: 'edit',\r\n    value: DRIVE_ENTRY_FULL_PERMISSIONS,\r\n    label: message('Can edit'),\r\n  },\r\n];\r\n\r\ninterface Props {\r\n  onChange: (value: PermissionSelectorItem) => void;\r\n  value: PermissionSelectorItem;\r\n}\r\nexport function PermissionSelector({value, onChange}: Props) {\r\n  return (\r\n    <MenuTrigger\r\n      selectedValue={value.key}\r\n      selectionMode=\"single\"\r\n      onSelectionChange={key => {\r\n        if (key !== value.key) {\r\n          onChange(PermissionSelectorItems.find(p => p.key === key)!);\r\n        }\r\n      }}\r\n    >\r\n      <Button\r\n        variant=\"flat\"\r\n        color=\"chip\"\r\n        size=\"xs\"\r\n        endIcon={<ArrowDropDownIcon />}\r\n      >\r\n        <Trans {...value.label} />\r\n      </Button>\r\n      <Menu>\r\n        {PermissionSelectorItems.map(item => {\r\n          return (\r\n            <MenuItem key={item.key} value={item.key}>\r\n              <Trans {...item.label} />\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Menu>\r\n    </MenuTrigger>\r\n  );\r\n}\r\n\r\nexport function getPermissionItemForUser(\r\n  user: DriveEntryUser\r\n): PermissionSelectorItem {\r\n  const {download, edit} = user.entry_permissions;\r\n  if (edit) {\r\n    return PermissionSelectorItems.find(item => item.key === 'edit')!;\r\n  }\r\n  if (download) {\r\n    return PermissionSelectorItems.find(item => item.key === 'download')!;\r\n  }\r\n  return PermissionSelectorItems.find(item => item.key === 'view')!;\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {DriveEntryPermissions} from '../../files/drive-entry';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {invalidateEntryQueries} from '../../drive-query-keys';\r\nimport {message} from '@common/i18n/message';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\n\r\nexport interface ChangePermissionsPayload {\r\n  userId: number;\r\n  permissions: DriveEntryPermissions;\r\n  entryId: number;\r\n}\r\n\r\nexport function useChangePermission() {\r\n  return useMutation({\r\n    mutationFn: (payload: ChangePermissionsPayload) =>\r\n      changePermission(payload),\r\n    onSuccess: () => {\r\n      invalidateEntryQueries();\r\n      toast(message('Updated user permissions'));\r\n    },\r\n    onError: err =>\r\n      showHttpErrorToast(err, message('Could not update permissions')),\r\n  });\r\n}\r\n\r\nfunction changePermission({\r\n  entryId,\r\n  ...payload\r\n}: ChangePermissionsPayload): Promise<BackendResponse> {\r\n  return apiClient\r\n    .put(`file-entries/${entryId}/change-permissions`, payload)\r\n    .then(response => response.data);\r\n}\r\n","import {Avatar, AvatarProps} from '@common/ui/images/avatar';\r\nimport {User} from '@common/auth/user';\r\nimport {useContext} from 'react';\r\nimport {SiteConfigContext} from '@common/core/settings/site-config-context';\r\n\r\ninterface UserAvatarProps extends Omit<AvatarProps, 'label' | 'src' | 'link'> {\r\n  user?: User;\r\n}\r\nexport function UserAvatar({user, ...props}: UserAvatarProps) {\r\n  const {auth} = useContext(SiteConfigContext);\r\n  return (\r\n    <Avatar\r\n      {...props}\r\n      label={user?.display_name}\r\n      src={user?.avatar}\r\n      link={user?.id && auth.getUserProfileLink?.(user)}\r\n    />\r\n  );\r\n}\r\n","import {useState} from 'react';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport clsx from 'clsx';\r\nimport {DriveEntry, DriveEntryUser} from '../files/drive-entry';\r\nimport {\r\n  getPermissionItemForUser,\r\n  PermissionSelector,\r\n  PermissionSelectorItem,\r\n} from './permission-selector';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {CloseIcon} from '@common/icons/material/Close';\r\nimport {useChangePermission} from './queries/use-change-permission';\r\nimport {useUnshareEntries} from './queries/use-unshare-entries';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {message} from '@common/i18n/message';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\nimport {UserAvatar} from '@common/ui/images/user-avatar';\r\n\r\ninterface MemberListProps {\r\n  className?: string;\r\n  entry: DriveEntry;\r\n}\r\n\r\nexport function MemberList({className, entry}: MemberListProps) {\r\n  if (!entry) return null;\r\n\r\n  const users = entry.users;\r\n\r\n  return (\r\n    <div className={clsx(className, 'overflow-hidden')}>\r\n      <div className=\"mb-14 text-sm\">\r\n        <Trans message=\"Who has access\" />\r\n      </div>\r\n      <AnimatePresence initial={false}>\r\n        {users.map(user => {\r\n          return <MemberListItem key={user.id} user={user} entry={entry} />;\r\n        })}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface MemberListItemProps {\r\n  user: DriveEntryUser;\r\n  entry: DriveEntry;\r\n}\r\nfunction MemberListItem({user, entry}: MemberListItemProps) {\r\n  return (\r\n    <m.div\r\n      initial={{x: '-100%', opacity: 0}}\r\n      animate={{x: 0, opacity: 1}}\r\n      exit={{x: '100%', opacity: 0}}\r\n      transition={{type: 'tween', duration: 0.125}}\r\n      className=\"flex items-center text-sm gap-14 mb-20\"\r\n      key={user.id}\r\n    >\r\n      <UserAvatar user={user as any} circle size=\"w-44 h-44\" />\r\n      <div>\r\n        <div>{user.display_name}</div>\r\n        <div className=\"text-muted\">{user.email}</div>\r\n      </div>\r\n      <div className=\"ml-auto\">\r\n        {user.owns_entry ? (\r\n          <span className=\"text-muted\">\r\n            <Trans message=\"Owner\" />\r\n          </span>\r\n        ) : (\r\n          <ActionButtons user={user} entry={entry} />\r\n        )}\r\n      </div>\r\n    </m.div>\r\n  );\r\n}\r\n\r\ninterface ActionButtonsProps {\r\n  user: DriveEntryUser;\r\n  entry: DriveEntry;\r\n}\r\nfunction ActionButtons({user, entry}: ActionButtonsProps) {\r\n  const changePermissions = useChangePermission();\r\n  const unshareEntry = useUnshareEntries();\r\n  const [activePermission, setActivePermission] =\r\n    useState<PermissionSelectorItem>(() => {\r\n      return getPermissionItemForUser(user);\r\n    });\r\n\r\n  return (\r\n    <div className=\"flex items-center gap-10\">\r\n      <PermissionSelector\r\n        onChange={item => {\r\n          changePermissions.mutate({\r\n            userId: user.id,\r\n            permissions: item.value,\r\n            entryId: entry.id,\r\n          });\r\n          setActivePermission(item);\r\n        }}\r\n        value={activePermission}\r\n      />\r\n      <IconButton\r\n        onClick={() => {\r\n          unshareEntry.mutate(\r\n            {userId: user.id, entryIds: [entry.id]},\r\n            {\r\n              onSuccess: () => {\r\n                toast(message('Member removed'));\r\n              },\r\n              onError: err =>\r\n                showHttpErrorToast(err, message('Could not remove member')),\r\n            }\r\n          );\r\n        }}\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n","import {useState} from 'react';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {useShareEntry} from './queries/use-share-entry';\r\nimport {\r\n  PermissionSelector,\r\n  PermissionSelectorItem,\r\n  PermissionSelectorItems,\r\n} from './permission-selector';\r\nimport {MemberList} from './member-list';\r\nimport {\r\n  ChipField,\r\n  ChipValue,\r\n} from '@common/ui/forms/input-field/chip-field/chip-field';\r\nimport {Avatar} from '@common/ui/images/avatar';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {DriveEntry} from '../files/drive-entry';\r\nimport {Item} from '@common/ui/forms/listbox/item';\r\nimport {isEmail} from '@common/utils/string/is-email';\r\nimport {useNormalizedModels} from '@common/users/queries/use-normalized-models';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\n\r\ninterface SharePanelProps {\r\n  className?: string;\r\n  entry: DriveEntry;\r\n}\r\nexport function SharePanel({className, entry}: SharePanelProps) {\r\n  const {trans} = useTrans();\r\n  const {share} = useSettings();\r\n  const shareEntry = useShareEntry();\r\n  const [chips, setChips] = useState<ChipValue[]>([]);\r\n  const [isSharing, setIsSharing] = useState(false);\r\n  const [selectedPermission, setSelectedPermission] =\r\n    useState<PermissionSelectorItem>(PermissionSelectorItems[0]);\r\n  const allEmailsValid = chips.every(chip => !chip.invalid);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const query = useNormalizedModels(\r\n    'normalized-models/user',\r\n    {perPage: 7, query: inputValue},\r\n    {enabled: share.suggest_emails},\r\n  );\r\n\r\n  // show user's email, instead of name in the chip\r\n  const displayWith = (chip: ChipValue) => chip.description || chip.name;\r\n\r\n  return (\r\n    <div className={className}>\r\n      <ChipField\r\n        value={chips}\r\n        onChange={setChips}\r\n        isAsync\r\n        isLoading={query.fetchStatus === 'fetching'}\r\n        inputValue={inputValue}\r\n        onInputValueChange={setInputValue}\r\n        suggestions={query.data?.results}\r\n        displayWith={displayWith}\r\n        validateWith={chip => {\r\n          const invalid = !isEmail(chip.description);\r\n          return {\r\n            ...chip,\r\n            invalid,\r\n            errorMessage: invalid\r\n              ? trans({message: 'Not a valid email'})\r\n              : undefined,\r\n          };\r\n        }}\r\n        placeholder={trans({message: 'Enter email addresses'})}\r\n        label={<Trans message=\"Invite people\" />}\r\n      >\r\n        {user => (\r\n          <Item\r\n            value={user.id}\r\n            startIcon={<Avatar circle src={user.image} alt=\"\" />}\r\n            description={user.description}\r\n          >\r\n            {user.name}\r\n          </Item>\r\n        )}\r\n      </ChipField>\r\n      <div className=\"mt-14 flex items-center justify-between gap-14\">\r\n        <PermissionSelector\r\n          onChange={setSelectedPermission}\r\n          value={selectedPermission}\r\n        />\r\n        {chips.length ? (\r\n          <Button\r\n            variant=\"flat\"\r\n            color=\"primary\"\r\n            size=\"sm\"\r\n            disabled={isSharing || !allEmailsValid}\r\n            onClick={() => {\r\n              setIsSharing(true);\r\n              shareEntry.mutate(\r\n                {\r\n                  emails: chips.map(c => displayWith(c)),\r\n                  permissions: selectedPermission.value,\r\n                  entryId: entry.id,\r\n                },\r\n                {\r\n                  onSuccess: () => {\r\n                    setChips([]);\r\n                  },\r\n                  onSettled: () => {\r\n                    setIsSharing(false);\r\n                  },\r\n                },\r\n              );\r\n            }}\r\n          >\r\n            <Trans message=\"Share\" />\r\n          </Button>\r\n        ) : null}\r\n      </div>\r\n      <MemberList className=\"mt-30\" entry={entry} />\r\n    </div>\r\n  );\r\n}\r\n","import {useQuery} from '@tanstack/react-query';\r\nimport {ShareableLink} from '../shareable-link';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {DriveQueryKeys} from '../../drive-query-keys';\r\nimport {apiClient} from '@common/http/query-client';\r\n\r\nexport interface FetchShareableLinkResponse extends BackendResponse {\r\n  link: ShareableLink | null;\r\n}\r\n\r\nexport function useEntryShareableLink(entryId: number) {\r\n  return useQuery({\r\n    queryKey: DriveQueryKeys.fetchEntryShareableLink(entryId!),\r\n    queryFn: () => fetchLinkByEntryId(entryId!),\r\n    enabled: !!entryId,\r\n  });\r\n}\r\n\r\nfunction fetchLinkByEntryId(\r\n  entryId: number,\r\n): Promise<FetchShareableLinkResponse> {\r\n  return apiClient\r\n    .get(`file-entries/${entryId}/shareable-link`, {\r\n      params: {loader: 'shareableLink'},\r\n    })\r\n    .then(response => response.data);\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {FetchShareableLinkResponse} from './use-entry-shareable-link';\r\nimport {BackendResponse} from '@common/http/backend-response/backend-response';\r\nimport {DriveQueryKeys} from '../../drive-query-keys';\r\nimport {message} from '@common/i18n/message';\r\nimport {showHttpErrorToast} from '@common/utils/http/show-http-error-toast';\r\n\r\ninterface DeleteLinkParams {\r\n  entryId: number;\r\n}\r\n\r\nfunction deleteShareableLink({\r\n  entryId,\r\n}: DeleteLinkParams): Promise<BackendResponse> {\r\n  return apiClient\r\n    .delete(`file-entries/${entryId}/shareable-link`)\r\n    .then(r => r.data);\r\n}\r\n\r\ninterface Payload {\r\n  entryId: number;\r\n}\r\nexport function useDeleteShareableLink() {\r\n  return useMutation({\r\n    mutationFn: ({entryId}: Payload) => deleteShareableLink({entryId}),\r\n    onSuccess: (response, {entryId}) => {\r\n      queryClient.setQueryData<FetchShareableLinkResponse>(\r\n        DriveQueryKeys.fetchEntryShareableLink(entryId),\r\n        {...response, link: null},\r\n      );\r\n    },\r\n    onError: err => showHttpErrorToast(err, message('Could not delete link')),\r\n  });\r\n}\r\n","export function randomString(length: number = 36) {\r\n  let random = '';\r\n  const possible =\r\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n  for (let i = 0; i < length; i += 1) {\r\n    random += possible.charAt(Math.floor(Math.random() * possible.length));\r\n  }\r\n\r\n  return random;\r\n}\r\n","import useClipboard from 'react-use-clipboard';\r\nimport {useEntryShareableLink} from '../../shareable-link/queries/use-entry-shareable-link';\r\nimport {useCreateShareableLink} from '../../shareable-link/queries/create-shareable-link';\r\nimport {useDeleteShareableLink} from '../../shareable-link/queries/use-delete-shareable-link';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {ShareableLink} from '../../shareable-link/shareable-link';\r\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport type {ShareDialogActivePanel} from '../share-dialog';\r\nimport {Switch} from '@common/ui/forms/toggle/switch';\r\nimport {randomString} from '@common/utils/string/random-string';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {useActiveDialogEntry} from '../../drive-store';\r\nimport {DriveEntry} from '../../files/drive-entry';\r\nimport {useSettings} from '@common/core/settings/use-settings';\r\n\r\ninterface ShareableLinkPanelProps {\r\n  setActivePanel: (name: ShareDialogActivePanel) => void;\r\n  entry: DriveEntry;\r\n  focusInput?: boolean;\r\n}\r\nexport function ShareableLinkPanel({\r\n  setActivePanel,\r\n  entry,\r\n  focusInput,\r\n}: ShareableLinkPanelProps) {\r\n  const query = useEntryShareableLink(entry.id);\r\n  const linkExists = !!query.data?.link;\r\n  const createLink = useCreateShareableLink();\r\n  const deleteLink = useDeleteShareableLink();\r\n  const isLoading =\r\n    query.isLoading || createLink.isPending || deleteLink.isPending;\r\n  return (\r\n    <div>\r\n      <div className=\"mb-10\">\r\n        <Trans message=\"Share link\" />\r\n      </div>\r\n      <div className=\"flex items-center justify-between gap-14 px-2 pb-4\">\r\n        <Switch\r\n          checked={linkExists}\r\n          disabled={isLoading}\r\n          onChange={() => {\r\n            if (linkExists) {\r\n              deleteLink.mutate({entryId: entry.id});\r\n            } else {\r\n              createLink.mutate({entryId: entry.id});\r\n            }\r\n          }}\r\n        >\r\n          {linkExists ? (\r\n            <Trans message=\"Shareable link is created\" />\r\n          ) : (\r\n            <Trans message=\"Create shareable link\" />\r\n          )}\r\n        </Switch>\r\n        {linkExists && (\r\n          <Button\r\n            variant=\"link\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              setActivePanel('linkSettings');\r\n            }}\r\n          >\r\n            <Trans message=\"Link settings\" />\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <ShareableLinkInput autoFocus={focusInput} link={query.data?.link} />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface ShareableLinkInputProps {\r\n  link?: ShareableLink | null;\r\n  autoFocus?: boolean;\r\n}\r\nfunction ShareableLinkInput({link, autoFocus}: ShareableLinkInputProps) {\r\n  const {base_url} = useSettings();\r\n  const {trans} = useTrans();\r\n  const entry = useActiveDialogEntry();\r\n  const hash = link?.hash || entry?.hash || randomString();\r\n  const linkUrl = `${base_url}/drive/s/${hash}`;\r\n  const [isCopied, setCopied] = useClipboard(linkUrl, {\r\n    successDuration: 1000,\r\n  });\r\n  return (\r\n    <TextField\r\n      autoFocus={autoFocus}\r\n      disabled={!link}\r\n      className=\"mt-10\"\r\n      readOnly\r\n      value={linkUrl}\r\n      aria-label={trans({message: 'Shareable link'})}\r\n      onFocus={e => {\r\n        (e.target as HTMLInputElement).select();\r\n      }}\r\n      endAppend={\r\n        <Button\r\n          className=\"min-w-100\"\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          onClick={setCopied}\r\n        >\r\n          {isCopied ? <Trans message=\"Copied!\" /> : <Trans message=\"Copy\" />}\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n}\r\n","import {useMutation} from '@tanstack/react-query';\r\nimport {UseFormReturn} from 'react-hook-form';\r\nimport {apiClient, queryClient} from '@common/http/query-client';\r\nimport {FetchShareableLinkResponse} from './use-entry-shareable-link';\r\nimport {onFormQueryError} from '@common/errors/on-form-query-error';\r\nimport {DriveQueryKeys} from '../../drive-query-keys';\r\n\r\nexport interface UpdateShareableLinkPayload {\r\n  allowEdit: boolean;\r\n  allowDownload: boolean;\r\n  expiresAt: string;\r\n  password: string;\r\n  entryId: number;\r\n}\r\n\r\nfunction updateShareableLink({\r\n  entryId,\r\n  ...payload\r\n}: UpdateShareableLinkPayload): Promise<FetchShareableLinkResponse> {\r\n  return apiClient\r\n    .put(`file-entries/${entryId}/shareable-link`, payload)\r\n    .then(response => response.data);\r\n}\r\n\r\nexport function useUpdateShareableLink(\r\n  form: UseFormReturn<UpdateShareableLinkPayload>,\r\n) {\r\n  return useMutation({\r\n    mutationFn: (payload: UpdateShareableLinkPayload) =>\r\n      updateShareableLink(payload),\r\n    onSuccess: (data, {entryId}) => {\r\n      queryClient.setQueryData<FetchShareableLinkResponse>(\r\n        DriveQueryKeys.fetchEntryShareableLink(entryId),\r\n        data,\r\n      );\r\n    },\r\n    onError: r => onFormQueryError(r, form),\r\n  });\r\n}\r\n","import {useForm} from 'react-hook-form';\r\nimport {Fragment, ReactElement, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport {m} from 'framer-motion';\r\nimport {getLocalTimeZone, now} from '@internationalized/date';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {FormTextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\r\nimport type {ShareDialogActivePanel} from '../share-dialog';\r\nimport {useEntryShareableLink} from '../../shareable-link/queries/use-entry-shareable-link';\r\nimport {Form} from '@common/ui/forms/form';\r\nimport {\r\n  UpdateShareableLinkPayload,\r\n  useUpdateShareableLink,\r\n} from '../../shareable-link/queries/use-update-shareable-link';\r\nimport {FormSwitch, Switch} from '@common/ui/forms/toggle/switch';\r\nimport {toast} from '@common/ui/toast/toast';\r\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\r\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\r\nimport {FormDatePicker} from '@common/ui/forms/input-field/date/date-picker/date-picker';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {message} from '@common/i18n/message';\r\nimport {FileEntry} from '@common/uploads/file-entry';\r\n\r\ninterface LinkSettingsDialogProps {\r\n  className?: string;\r\n  setActivePanel: (name: ShareDialogActivePanel) => void;\r\n  entry: FileEntry;\r\n}\r\nexport function LinkSettingsDialog({\r\n  className,\r\n  setActivePanel,\r\n  entry,\r\n}: LinkSettingsDialogProps) {\r\n  const {formId} = useDialogContext();\r\n  const {data} = useEntryShareableLink(entry.id);\r\n  const link = data?.link;\r\n  const form = useForm<UpdateShareableLinkPayload>({\r\n    defaultValues: {\r\n      allowDownload: link?.allow_download,\r\n      allowEdit: link?.allow_edit,\r\n      expiresAt: link?.expires_at,\r\n      entryId: entry.id,\r\n    },\r\n  });\r\n  const updateLink = useUpdateShareableLink(form);\r\n\r\n  return (\r\n    <Fragment>\r\n      <DialogHeader\r\n        onDismiss={() => {\r\n          setActivePanel('main');\r\n        }}\r\n      >\r\n        <Trans message=\"Shareable Link Settings\" />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <m.div\r\n          key=\"link-settings-content\"\r\n          className=\"min-h-[335px]\"\r\n          animate={{opacity: 1, y: 0}}\r\n          initial={{opacity: 0, y: 20}}\r\n          exit={{opacity: 0, y: -20}}\r\n          transition={{duration: 0.1}}\r\n        >\r\n          <Form\r\n            id={formId}\r\n            className={className}\r\n            form={form}\r\n            onSubmit={value => {\r\n              updateLink.mutate(value, {\r\n                onSuccess: () => {\r\n                  setActivePanel('main');\r\n                  toast(message('Link settings saved'));\r\n                },\r\n              });\r\n            }}\r\n          >\r\n            <LinkExpirationOption showField={!!link?.expires_at} />\r\n            <LinkPasswordOption showField={!!link?.password} />\r\n            <LinkOption>\r\n              <Trans message=\"Allow download\" />\r\n              <FormSwitch name=\"allowDownload\">\r\n                <Trans message=\"Users with link can download this item\" />\r\n              </FormSwitch>\r\n            </LinkOption>\r\n            <LinkOption showBorder={false}>\r\n              <Trans message=\"Allow import\" />\r\n              <FormSwitch name=\"allowEdit\">\r\n                <Trans message=\"Users with link can import this item into their own drive\" />\r\n              </FormSwitch>\r\n            </LinkOption>\r\n          </Form>\r\n        </m.div>\r\n      </DialogBody>\r\n      <DialogFooter>\r\n        <Button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            setActivePanel('main');\r\n          }}\r\n        >\r\n          <Trans message=\"Cancel\" />\r\n        </Button>\r\n        <Button\r\n          type=\"submit\"\r\n          form={formId}\r\n          variant=\"flat\"\r\n          color=\"primary\"\r\n          disabled={updateLink.isPending}\r\n        >\r\n          <Trans message=\"Save\" />\r\n        </Button>\r\n      </DialogFooter>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst minDate = now(getLocalTimeZone());\r\n\r\ninterface LinkExpirationOptionProps {\r\n  showField: boolean;\r\n}\r\nfunction LinkExpirationOption({\r\n  showField: showFieldDefault,\r\n}: LinkExpirationOptionProps) {\r\n  const {trans} = useTrans();\r\n  const [showField, setShowField] = useState(showFieldDefault);\r\n  return (\r\n    <LinkOption>\r\n      <Trans message=\"Link expiration\" />\r\n      <div>\r\n        <Switch\r\n          checked={showField}\r\n          onChange={e => {\r\n            setShowField(e.target.checked);\r\n          }}\r\n        >\r\n          <Trans message=\"Link is valid until\" />\r\n        </Switch>\r\n        {showField && (\r\n          <FormDatePicker\r\n            min={minDate}\r\n            name=\"expiresAt\"\r\n            granularity=\"minute\"\r\n            className=\"mt-20\"\r\n            aria-label={trans({\r\n              message: 'Link expiration date and time',\r\n            })}\r\n          />\r\n        )}\r\n      </div>\r\n    </LinkOption>\r\n  );\r\n}\r\n\r\ninterface LinkPasswordOptionProps {\r\n  showField: boolean;\r\n}\r\nfunction LinkPasswordOption({\r\n  showField: showFieldDefault,\r\n}: LinkPasswordOptionProps) {\r\n  const {trans} = useTrans();\r\n  const [showField, setShowField] = useState(showFieldDefault);\r\n  return (\r\n    <LinkOption>\r\n      <Trans message=\"Password protect\" />\r\n      <div>\r\n        <Switch\r\n          checked={showField}\r\n          onChange={e => {\r\n            setShowField(e.target.checked);\r\n          }}\r\n        >\r\n          <Trans message=\"Users will need to enter password in order to view this link\" />\r\n        </Switch>\r\n        {showField && (\r\n          <FormTextField\r\n            type=\"password\"\r\n            autoFocus\r\n            name=\"password\"\r\n            className=\"mt-20\"\r\n            aria-label={trans({message: 'Link password'})}\r\n            description={\r\n              <Trans message=\"Password will not be requested when viewing the link as file owner.\" />\r\n            }\r\n            placeholder={trans({\r\n              message: 'Enter new password...',\r\n            })}\r\n          />\r\n        )}\r\n      </div>\r\n    </LinkOption>\r\n  );\r\n}\r\n\r\ninterface LinkOptionProps {\r\n  children: [ReactElement, ReactElement];\r\n  showBorder?: boolean;\r\n}\r\nfunction LinkOption({children, showBorder = true}: LinkOptionProps) {\r\n  const [title, content] = children;\r\n  return (\r\n    <div className={clsx(showBorder && 'mb-20 border-b pb-20')}>\r\n      <div className=\"mb-8 text-sm font-medium\">{title}</div>\r\n      {content}\r\n    </div>\r\n  );\r\n}\r\n","import {Fragment, useState} from 'react';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport {SharePanel} from './share-panel';\r\nimport {ShareableLinkPanel} from './link-panel/shareable-link-panel';\r\nimport {LinkSettingsDialog} from './link-panel/link-settings-dialog';\r\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {DriveEntry} from '../files/drive-entry';\r\nimport {useQuery} from '@tanstack/react-query';\r\nimport {apiClient} from '@common/http/query-client';\r\nimport {DriveQueryKeys} from '../drive-query-keys';\r\n\r\nexport type ShareDialogActivePanel = 'main' | 'linkSettings';\r\n\r\ninterface ShareDialogProps {\r\n  entry: DriveEntry;\r\n  focusLinkInput?: boolean;\r\n}\r\nexport function ShareDialog({\r\n  entry: initialEntry,\r\n  focusLinkInput,\r\n}: ShareDialogProps) {\r\n  const {\r\n    data: {fileEntry},\r\n  } = useQuery({\r\n    queryKey: DriveQueryKeys.fetchFileEntry(initialEntry.id),\r\n    queryFn: () =>\r\n      apiClient\r\n        .get(`drive/file-entries/${initialEntry.id}/model`)\r\n        .then(response => response.data as {fileEntry: DriveEntry}),\r\n    initialData: {fileEntry: initialEntry},\r\n  });\r\n\r\n  const [activePanel, setActivePanel] =\r\n    useState<ShareDialogActivePanel>('main');\r\n\r\n  return (\r\n    <Dialog size=\"lg\">\r\n      <AnimatePresence initial={false} mode=\"wait\">\r\n        {activePanel === 'linkSettings' ? (\r\n          <LinkSettingsDialog\r\n            key=\"one\"\r\n            setActivePanel={setActivePanel}\r\n            entry={fileEntry}\r\n          />\r\n        ) : (\r\n          <MainDialog\r\n            key=\"two\"\r\n            setActivePanel={setActivePanel}\r\n            entry={fileEntry}\r\n            focusLinkInput={focusLinkInput}\r\n          />\r\n        )}\r\n      </AnimatePresence>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\ninterface MainDialogProps {\r\n  setActivePanel: (name: ShareDialogActivePanel) => void;\r\n  entry: DriveEntry;\r\n  focusLinkInput?: boolean;\r\n}\r\nfunction MainDialog({setActivePanel, entry, focusLinkInput}: MainDialogProps) {\r\n  return (\r\n    <Fragment>\r\n      <DialogHeader>\r\n        <Trans message=\"Share ‘:name’\" values={{name: entry.name}} />\r\n      </DialogHeader>\r\n      <DialogBody className=\"relative\">\r\n        <m.div\r\n          key=\"share-content\"\r\n          animate={{opacity: 1, y: 0}}\r\n          initial={{opacity: 0, y: 20}}\r\n          exit={{opacity: 0, y: -20}}\r\n          transition={{duration: 0.1}}\r\n        >\r\n          <SharePanel className=\"mb-30 border-b pb-30\" entry={entry} />\r\n          <ShareableLinkPanel\r\n            setActivePanel={setActivePanel}\r\n            entry={entry}\r\n            focusInput={!!focusLinkInput}\r\n          />\r\n        </m.div>\r\n      </DialogBody>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {SearchIcon} from '@common/icons/material/Search';\r\nimport {ComboBox} from '@common/ui/forms/combobox/combobox';\r\nimport {Item} from '@common/ui/forms/listbox/item';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {PartialFolder} from '../../utils/can-move-entries-into';\r\n\r\ninterface SearchComboBoxProps {\r\n  allFolders: PartialFolder[];\r\n  onFolderSelected: (folder: PartialFolder) => void;\r\n}\r\nexport function MoveEntriesDialogSearch({\r\n  allFolders,\r\n  onFolderSelected,\r\n}: SearchComboBoxProps) {\r\n  const {trans} = useTrans();\r\n  const searchLabel = trans({message: 'Search folders'});\r\n  return (\r\n    <ComboBox\r\n      size=\"sm\"\r\n      maxItems={10}\r\n      placeholder={searchLabel}\r\n      aria-label={searchLabel}\r\n      className=\"pt-20\"\r\n      endAdornmentIcon={<SearchIcon />}\r\n      items={allFolders}\r\n      clearInputOnItemSelection\r\n      onItemSelected={value => {\r\n        const folderId = parseInt(value as string);\r\n        const folder = allFolders.find(f => f.id === folderId);\r\n        if (folder) {\r\n          onFolderSelected(folder);\r\n        }\r\n      }}\r\n    >\r\n      {item => (\r\n        <Item key={item.id} value={item.id}>\r\n          {item.name}\r\n        </Item>\r\n      )}\r\n    </ComboBox>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {ArrowBackIcon} from '@common/icons/material/ArrowBack';\r\nimport {Breadcrumb} from '@common/ui/breadcrumbs/breadcrumb';\r\nimport {FolderIcon} from '@common/icons/material/Folder';\r\nimport {BreadcrumbItem} from '@common/ui/breadcrumbs/breadcrumb-item';\r\nimport {PartialFolder} from '../../utils/can-move-entries-into';\r\n\r\ninterface FolderBreadCrumbsProps {\r\n  selectedFolder: PartialFolder;\r\n  allFolders: PartialFolder[];\r\n  rootFolder: PartialFolder;\r\n  onFolderSelected: (folder: PartialFolder) => void;\r\n}\r\nexport function MoveEntriesDialogBreadcrumbs({\r\n  selectedFolder,\r\n  allFolders,\r\n  rootFolder,\r\n  onFolderSelected,\r\n}: FolderBreadCrumbsProps) {\r\n  const path: PartialFolder[] = selectedFolder.path\r\n    .split('/')\r\n    .map(part => {\r\n      const folderId = parseInt(part);\r\n      return allFolders.find(folder => folderId === folder.id);\r\n    })\r\n    .filter(f => !!f) as PartialFolder[];\r\n  const fullPath: PartialFolder[] = [rootFolder, ...path];\r\n\r\n  const previous = path[path.length - 2];\r\n\r\n  return (\r\n    <div className=\"flex items-center gap-6 border-b pb-10\">\r\n      <IconButton\r\n        className=\"flex-shrink-0\"\r\n        variant=\"outline\"\r\n        size=\"xs\"\r\n        disabled={!previous && !selectedFolder.id}\r\n        onClick={() => {\r\n          onFolderSelected(previous || rootFolder);\r\n        }}\r\n      >\r\n        <ArrowBackIcon />\r\n      </IconButton>\r\n      <Breadcrumb size=\"sm\" className=\"flex-auto\">\r\n        {fullPath.map(item => {\r\n          return (\r\n            <BreadcrumbItem\r\n              onSelected={() => {\r\n                onFolderSelected(item);\r\n              }}\r\n              key={item.id || 'root'}\r\n              className=\"flex items-center gap-8\"\r\n            >\r\n              {!item.id && <FolderIcon className=\"icon-sm\" />}\r\n              {item.name}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </div>\r\n  );\r\n}\r\n","export default \"__VITE_ASSET__b64d6dd2__\"","import React, {useMemo} from 'react';\r\nimport {IllustratedMessage} from '@common/ui/images/illustrated-message';\r\nimport {SvgImage} from '@common/ui/images/svg-image/svg-image';\r\nimport {FileTypeIcon} from '@common/uploads/file-type-icon/file-type-icon';\r\nimport {ChevronRightIcon} from '@common/icons/material/ChevronRight';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {List, ListItem} from '@common/ui/list/list';\r\nimport myFilesSvg from './my-files.svg';\r\nimport {PartialFolder} from '../../utils/can-move-entries-into';\r\n\r\ninterface FolderListProps {\r\n  selectedFolder: PartialFolder;\r\n  allFolders: PartialFolder[];\r\n  onFolderSelected: (folder: PartialFolder) => void;\r\n}\r\n\r\nexport function MoveEntriesDialogFolderList(props: FolderListProps) {\r\n  const {onFolderSelected, selectedFolder, allFolders} = props;\r\n\r\n  const subFolders = useMemo(() => {\r\n    const parentId = selectedFolder.id || null;\r\n    return allFolders.filter(f => f.parent_id === parentId);\r\n  }, [selectedFolder.id, allFolders]);\r\n\r\n  if (!subFolders.length) {\r\n    return (\r\n      <IllustratedMessage\r\n        size=\"xs\"\r\n        className=\"pt-64 pb-20 min-h-288\"\r\n        image={<SvgImage src={myFilesSvg} />}\r\n        title={\r\n          <Trans\r\n            message={`There are no subfolders in \":folder\"`}\r\n            values={{folder: selectedFolder.name}}\r\n          />\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <List className=\"h-288 overflow-y-auto\">\r\n      {subFolders.map(folder => {\r\n        return (\r\n          <ListItem\r\n            className=\"border-b min-h-48\"\r\n            key={folder.id}\r\n            onSelected={() => {\r\n              onFolderSelected(folder);\r\n            }}\r\n            startIcon={<FileTypeIcon type=\"folder\" />}\r\n            endIcon={<ChevronRightIcon size=\"md\" />}\r\n          >\r\n            {folder.name}\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n}\r\n","import React, {useState} from 'react';\r\nimport {Button} from '@common/ui/buttons/button';\r\nimport {useFolders} from '../../queries/use-folders';\r\nimport {useMoveEntries} from '../../queries/use-move-entries';\r\nimport {NewFolderDialog} from '../new-folder-dialog';\r\nimport {CreateNewFolderIcon} from '@common/icons/material/CreateNewFolder';\r\nimport {MoveEntriesDialogSearch} from './move-entries-dialog-search';\r\nimport {MoveEntriesDialogBreadcrumbs} from './move-entries-dialog-breadcrumbs';\r\nimport {MoveEntriesDialogFolderList} from './move-entries-dialog-folder-list';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {DialogFooter} from '@common/ui/overlays/dialog/dialog-footer';\r\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\r\nimport {Dialog} from '@common/ui/overlays/dialog/dialog';\r\nimport {DialogHeader} from '@common/ui/overlays/dialog/dialog-header';\r\nimport {DialogBody} from '@common/ui/overlays/dialog/dialog-body';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {RootFolderPage} from '../../../drive-page/drive-page';\r\nimport {DriveEntry} from '../../drive-entry';\r\nimport {useDriveStore} from '../../../drive-store';\r\nimport {\r\n  canMoveEntriesInto,\r\n  PartialFolder,\r\n} from '../../utils/can-move-entries-into';\r\n\r\ninterface MoveEntriesDialogProps {\r\n  entries: DriveEntry[];\r\n}\r\nexport function MoveEntriesDialog({entries}: MoveEntriesDialogProps) {\r\n  const {data} = useFolders();\r\n  const allFolders = data?.folders || [];\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  const [selectedFolder, setSelectedFolder] = useState<PartialFolder>(\r\n    activePage?.folder || RootFolderPage.folder,\r\n  );\r\n\r\n  return (\r\n    <Dialog size=\"lg\">\r\n      <DialogHeader>\r\n        <Trans\r\n          message=\"Move [one ‘:name‘|other :count items]\"\r\n          values={{\r\n            count: entries.length,\r\n            name: entries[0].name,\r\n          }}\r\n        />\r\n      </DialogHeader>\r\n      <DialogBody>\r\n        <div className=\"text-sm\">\r\n          <Trans message=\"Select a destination folder.\" />\r\n        </div>\r\n        <MoveEntriesDialogSearch\r\n          allFolders={allFolders}\r\n          onFolderSelected={setSelectedFolder}\r\n        />\r\n        <div className=\"mb-20 mt-40\">\r\n          <MoveEntriesDialogBreadcrumbs\r\n            selectedFolder={selectedFolder}\r\n            allFolders={allFolders}\r\n            rootFolder={RootFolderPage.folder}\r\n            onFolderSelected={setSelectedFolder}\r\n          />\r\n          <MoveEntriesDialogFolderList\r\n            selectedFolder={selectedFolder}\r\n            allFolders={allFolders}\r\n            onFolderSelected={setSelectedFolder}\r\n          />\r\n        </div>\r\n      </DialogBody>\r\n      <Footer\r\n        selectedFolder={selectedFolder}\r\n        setSelectedFolder={setSelectedFolder}\r\n        entries={entries}\r\n      />\r\n    </Dialog>\r\n  );\r\n}\r\n\r\ninterface FooterProps {\r\n  selectedFolder: PartialFolder;\r\n  setSelectedFolder: (folder: PartialFolder) => void;\r\n  entries: DriveEntry[];\r\n}\r\nfunction Footer({selectedFolder, setSelectedFolder, entries}: FooterProps) {\r\n  const {close} = useDialogContext();\r\n  const moveEntries = useMoveEntries();\r\n  return (\r\n    <DialogFooter\r\n      className=\"border-t\"\r\n      startAction={\r\n        <DialogTrigger\r\n          type=\"modal\"\r\n          onClose={folder => {\r\n            if (folder) {\r\n              setSelectedFolder(folder);\r\n            }\r\n          }}\r\n        >\r\n          <Button startIcon={<CreateNewFolderIcon />} variant=\"text\">\r\n            <Trans message=\"New Folder\" />\r\n          </Button>\r\n          <NewFolderDialog parentId={selectedFolder.id} />\r\n        </DialogTrigger>\r\n      }\r\n    >\r\n      <Button className=\"max-md:hidden\" variant=\"flat\" onClick={() => close()}>\r\n        <Trans message=\"Cancel\" />\r\n      </Button>\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"flat\"\r\n        color=\"primary\"\r\n        disabled={\r\n          !canMoveEntriesInto(entries, selectedFolder) || moveEntries.isPending\r\n        }\r\n        onClick={() => {\r\n          moveEntries.mutate(\r\n            {\r\n              destinationId: selectedFolder.id,\r\n              entryIds: entries.map(e => e.id),\r\n            },\r\n            {onSuccess: close},\r\n          );\r\n        }}\r\n      >\r\n        <Trans message=\"Move here\" />\r\n      </Button>\r\n    </DialogFooter>\r\n  );\r\n}\r\n","import {DriveEntry} from '../drive-entry';\r\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {useDeleteEntries} from '../queries/use-delete-entries';\r\nimport {driveState} from '../../drive-store';\r\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\r\n\r\ninterface DeleteEntriesForeverDialogProps {\r\n  entries: DriveEntry[];\r\n}\r\nexport function DeleteEntriesForeverDialog({\r\n  entries,\r\n}: DeleteEntriesForeverDialogProps) {\r\n  const deleteEntries = useDeleteEntries();\r\n  const {close} = useDialogContext();\r\n\r\n  const message =\r\n    entries.length === 1 ? (\r\n      <Trans\r\n        message=\"‘:name‘ will be deleted forever and you won't be able to restore it.\"\r\n        values={{name: entries[0].name}}\r\n      />\r\n    ) : (\r\n      <Trans\r\n        message=\":count items will be deleted forever and you won't be able to restore them.\"\r\n        values={{count: entries.length}}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <ConfirmationDialog\r\n      isDanger\r\n      title={<Trans message=\"Delete forever?\" />}\r\n      body={message}\r\n      confirm={<Trans message=\"Delete forever\" />}\r\n      isLoading={deleteEntries.isPending}\r\n      onConfirm={() => {\r\n        deleteEntries.mutate(\r\n          {\r\n            entryIds: entries.map(e => e.id),\r\n            deleteForever: true,\r\n          },\r\n          {\r\n            onSuccess: () => {\r\n              close();\r\n              driveState().selectEntries([]);\r\n            },\r\n          },\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import {DriveEntry} from '../drive-entry';\r\nimport {ConfirmationDialog} from '@common/ui/overlays/dialog/confirmation-dialog';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {driveState} from '../../drive-store';\r\nimport {useRestoreEntries} from '../queries/use-restore-entries';\r\nimport {useDialogContext} from '@common/ui/overlays/dialog/dialog-context';\r\n\r\ninterface DeleteEntriesForeverDialogProps {\r\n  entries: DriveEntry[];\r\n}\r\nexport function BlockTrashFolderViewDialog({\r\n  entries,\r\n}: DeleteEntriesForeverDialogProps) {\r\n  const restoreEntries = useRestoreEntries();\r\n  const {close} = useDialogContext();\r\n\r\n  return (\r\n    <ConfirmationDialog\r\n      title={<Trans message=\"This folder is in your trash\" />}\r\n      body={<Trans message=\"To view this folder, restore it from the trash.\" />}\r\n      confirm={<Trans message=\"Restore\" />}\r\n      isLoading={restoreEntries.isPending}\r\n      onConfirm={() => {\r\n        restoreEntries.mutate(\r\n          {\r\n            entryIds: entries.map(e => e.id),\r\n          },\r\n          {\r\n            onSuccess: () => {\r\n              close();\r\n              driveState().selectEntries([]);\r\n            },\r\n          },\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, {ReactElement} from 'react';\r\nimport {ActiveActionDialog, driveState, useDriveStore} from '../../drive-store';\r\nimport {RenameEntryDialog} from './rename-entry-dialog';\r\nimport {NewFolderDialog} from './new-folder-dialog';\r\nimport {EntryPreviewDialog} from './entry-preview-dialog';\r\nimport {ShareDialog} from '../../share-dialog/share-dialog';\r\nimport {MoveEntriesDialog} from './move-entries-dialog/move-entries-dialog';\r\nimport {DialogTrigger} from '@common/ui/overlays/dialog/dialog-trigger';\r\nimport {DeleteEntriesForeverDialog} from './delete-entries-forever-dialog';\r\nimport {BlockTrashFolderViewDialog} from './block-trash-folder-view-dialog';\r\n\r\nexport function DriveDialogsContainer() {\r\n  const activeDialog = useDriveStore(s => s.activeActionDialog);\r\n  const dialog = getDialog(activeDialog);\r\n\r\n  return (\r\n    <DialogTrigger\r\n      type=\"modal\"\r\n      isOpen={!!dialog}\r\n      onClose={() => {\r\n        driveState().setActiveActionDialog(null);\r\n      }}\r\n    >\r\n      {dialog}\r\n    </DialogTrigger>\r\n  );\r\n}\r\n\r\nfunction getDialog(dialog?: ActiveActionDialog | null): ReactElement | null {\r\n  switch (dialog?.name) {\r\n    case 'rename':\r\n      return <RenameEntryDialog entries={dialog.entries} />;\r\n    case 'newFolder':\r\n      return <NewFolderDialog parentId={dialog.entries[0]?.id} />;\r\n    case 'preview':\r\n      return <EntryPreviewDialog selectedEntry={dialog.entries[0]} />;\r\n    case 'share':\r\n      return <ShareDialog entry={dialog.entries[0]} />;\r\n    case 'getLink':\r\n      return <ShareDialog entry={dialog.entries[0]} focusLinkInput />;\r\n    case 'moveTo':\r\n      return <MoveEntriesDialog entries={dialog.entries} />;\r\n    case 'confirmAndDeleteForever':\r\n      return <DeleteEntriesForeverDialog entries={dialog.entries} />;\r\n    case 'trashFolderBlock':\r\n      return <BlockTrashFolderViewDialog entries={dialog.entries} />;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n","import React, {useState} from 'react';\r\nimport {SearchIcon} from '@common/icons/material/Search';\r\nimport {TextField} from '@common/ui/forms/input-field/text-field/text-field';\r\nimport {SearchPage} from '../drive-page/drive-page';\r\nimport {useTrans} from '@common/i18n/use-trans';\r\nimport {useDriveStore} from '../drive-store';\r\nimport {useNavigate} from '@common/utils/hooks/use-navigate';\r\nimport {useSearchParams} from 'react-router-dom';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\n\r\nexport function NavbarSearch() {\r\n  const {trans} = useTrans();\r\n  const navigate = useNavigate();\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  const [searchParams] = useSearchParams();\r\n  const [inputValue, setInputValue] = useState(searchParams.get('query') || '');\r\n\r\n  return (\r\n    <form\r\n      className=\"max-w-620 flex-auto\"\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        navigate(\r\n          {\r\n            pathname: SearchPage.path,\r\n            search: `?query=${inputValue}`,\r\n          },\r\n          {replace: true},\r\n        );\r\n      }}\r\n    >\r\n      <TextField\r\n        size=\"sm\"\r\n        background=\"bg\"\r\n        value={inputValue}\r\n        onChange={e => setInputValue(e.target.value)}\r\n        onFocus={() => {\r\n          if (activePage !== SearchPage) {\r\n            navigate(SearchPage.path);\r\n          }\r\n        }}\r\n        startAdornment={\r\n          <IconButton type=\"submit\">\r\n            <SearchIcon />\r\n          </IconButton>\r\n        }\r\n        className=\"max-w-620 flex-auto\"\r\n        placeholder={trans({message: 'Search'})}\r\n        aria-label={trans({message: 'Search files and folders'})}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n","import {InteractableEvent} from '../interactable-event';\r\nimport {useEffect, useId, useRef} from 'react';\r\nimport {dragMonitors, DragSessionStatus} from './drag-state';\r\nimport {ConnectedDraggable} from './use-draggable';\r\n\r\nexport interface DragMonitor {\r\n  type: string;\r\n  onDragStart?: (e: InteractableEvent, dragTarget: ConnectedDraggable) => void;\r\n  onDragMove?: (e: InteractableEvent, dragTarget: ConnectedDraggable) => void;\r\n  onDragEnd?: (\r\n    e: InteractableEvent,\r\n    dragTarget: ConnectedDraggable,\r\n    status: DragSessionStatus\r\n  ) => void;\r\n}\r\n\r\nexport function useDragMonitor(monitor: DragMonitor) {\r\n  const monitorRef = useRef(monitor);\r\n  const id = useId();\r\n\r\n  useEffect(() => {\r\n    dragMonitors.set(id, monitorRef.current);\r\n    return () => {\r\n      dragMonitors.delete(id);\r\n    };\r\n  }, [id]);\r\n}\r\n","import {useDragMonitor} from '@common/ui/interactions/dnd/use-drag-monitor';\r\nimport React, {memo, useRef, useState} from 'react';\r\nimport {FileTypeIcon} from '@common/uploads/file-type-icon/file-type-icon';\r\nimport {FileEntry} from '@common/uploads/file-entry';\r\nimport {\r\n  DragSessionStatus,\r\n  droppables,\r\n} from '@common/ui/interactions/dnd/drag-state';\r\nimport {AnimatePresence, m} from 'framer-motion';\r\nimport clsx from 'clsx';\r\nimport {\r\n  isFolderTreeDragId,\r\n  makeFolderTreeDragId,\r\n} from '../layout/sidebar/folder-tree-drag-id';\r\nimport {InteractableEvent} from '@common/ui/interactions/interactable-event';\r\nimport {useDriveStore} from '../drive-store';\r\nimport {ConnectedDraggable} from '@common/ui/interactions/dnd/use-draggable';\r\n\r\ninterface Point {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\ninterface DragPreviewState {\r\n  entries?: FileEntry[];\r\n  e?: InteractableEvent;\r\n  status?: DragSessionStatus;\r\n  draggingTreeItem?: boolean;\r\n}\r\n\r\nexport function EntryDragPreview() {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const [points, setPoints] = useState<{start?: Point; end?: Point}>();\r\n  const [state, setState] = useState<DragPreviewState>({});\r\n\r\n  useDragMonitor({\r\n    type: 'fileEntry',\r\n    onDragStart: (e, dragTarget) => {\r\n      const target = dragTarget as ConnectedDraggable<FileEntry[]>;\r\n      if (target) {\r\n        setState({\r\n          entries: target.getData(),\r\n          e,\r\n          draggingTreeItem: isFolderTreeDragId(target.id as number),\r\n        });\r\n        setPoints({start: e});\r\n      }\r\n    },\r\n    onDragMove: e => {\r\n      setState(prev => {\r\n        return {...prev, e: e};\r\n      });\r\n      setPoints(prev => {\r\n        return {...prev, end: e};\r\n      });\r\n    },\r\n    onDragEnd: (e, dragTarget, status) => {\r\n      setState({status});\r\n    },\r\n  });\r\n\r\n  let preview = null;\r\n\r\n  if (state.entries && state.e) {\r\n    preview = (\r\n      <div\r\n        ref={ref}\r\n        style={\r\n          state.e\r\n            ? {\r\n                transform: `translate(${state.e.x}px, ${state.e.y}px)`,\r\n                width: `${state.e.rect.width}px`,\r\n              }\r\n            : undefined\r\n        }\r\n        className=\"fixed isolate left-0 top-0 pointer-events-none\"\r\n      >\r\n        {state.entries.map((item, index) => (\r\n          <EntryPreview\r\n            key={item.id}\r\n            index={index}\r\n            entry={item}\r\n            points={points}\r\n            state={state}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <AnimatePresence custom={state.status}>{preview}</AnimatePresence>;\r\n}\r\n\r\ninterface EntryPreviewProps {\r\n  entry: FileEntry;\r\n  index: number;\r\n  points?: {start?: Point; end?: Point};\r\n  state: DragPreviewState;\r\n}\r\nconst EntryPreview = memo(\r\n  ({entry, points, index, state}: EntryPreviewProps) => {\r\n    const viewMode = useDriveStore(s => s.viewMode);\r\n    const droppableId = state.draggingTreeItem\r\n      ? makeFolderTreeDragId(entry)\r\n      : entry.id;\r\n    const target = droppables.get(droppableId);\r\n    if (!target?.rect || !points?.start) return null;\r\n    const rect = target.rect;\r\n    const itemCount = state.entries?.length || 0;\r\n\r\n    const exitVariant = (status: DragSessionStatus) => {\r\n      if (status === 'dropSuccess') {\r\n        return {\r\n          x: 0,\r\n          y: 0,\r\n          opacity: 0,\r\n          transition: {duration: 0.1, delay: 0},\r\n        };\r\n      }\r\n      return {\r\n        x: rect.left - (points.end?.x || 0),\r\n        y: rect.top - (points.end?.y || 0),\r\n        width: `${state.e?.rect.width}px`,\r\n      };\r\n    };\r\n\r\n    return (\r\n      <m.div\r\n        key={entry.id}\r\n        transition={{delay: 0.01 * index, bounce: 0, duration: 0.2}}\r\n        initial={{\r\n          x: rect.left - points.start.x,\r\n          y: rect.top - points.start.y,\r\n          width: `${state.e?.rect.width}px`,\r\n        }}\r\n        animate={{\r\n          x: 0,\r\n          y: 0,\r\n          // in list/table mode limit preview size to 288px, but start and end the animation\r\n          // at full width, so it returns to original position at original size smoothly\r\n          width: viewMode === 'list' ? 288 : undefined,\r\n        }}\r\n        exit={exitVariant as any}\r\n        style={{\r\n          // in grid mode simply use the width of the draggable item\r\n          width: viewMode === 'grid' ? `${state.e?.rect.width}px` : undefined,\r\n          height: `${state.e?.rect.height}px`,\r\n        }}\r\n        className={clsx(\r\n          'absolute bg-paper whitespace-nowrap rounded border border-primary-light max-h-48',\r\n          index < 2 && 'shadow',\r\n          index === 0 && 'z-10 top-0 left-0',\r\n          index > 0 && 'top-6 left-6'\r\n        )}\r\n      >\r\n        {itemCount > 1 && index === 0 && <EntryCount count={itemCount} />}\r\n        <div className=\"text-sm h-full flex justify-center items-center px-16 gap-10 bg-primary-light/20 overflow-hidden\">\r\n          <FileTypeIcon type={entry.type} />\r\n          <div className=\"flex-auto text-ellipsis overflow-hidden\">\r\n            {entry.name}\r\n          </div>\r\n        </div>\r\n      </m.div>\r\n    );\r\n  }\r\n);\r\n\r\ninterface EntryCountProps {\r\n  count: number;\r\n}\r\nconst EntryCount = memo(({count}: EntryCountProps) => {\r\n  return (\r\n    <m.div\r\n      key=\"entryCount\"\r\n      initial={{opacity: 0}}\r\n      animate={{opacity: 1, transition: {delay: 0.1}}}\r\n      exit={{opacity: 0}}\r\n      transition={{duration: 0.1}}\r\n      className=\"absolute -top-6 shadow-lg -right-6 z-30 rounded-full bg-danger text-white w-20 h-20 flex items-center justify-center text-sm font-bold z-10\"\r\n    >\r\n      {count}\r\n    </m.div>\r\n  );\r\n});\r\n","import {PageBreadcrumbs} from '../page-breadcrumbs';\r\nimport {DashboardContentHeader} from '@common/ui/layout/dashboard-content-header';\r\nimport React, {useContext} from 'react';\r\nimport {driveState, useDriveStore} from '../drive-store';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {Tooltip} from '@common/ui/tooltip/tooltip';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {ViewListIcon} from '@common/icons/material/ViewList';\r\nimport {ViewModuleIcon} from '@common/icons/material/ViewModule';\r\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\r\nimport {InfoIcon} from '@common/icons/material/Info';\r\nimport {DriveSortButton} from './sorting/drive-sort-button';\r\n\r\nexport function DriveContentHeader() {\r\n  const {isMobileMode} = useContext(DashboardLayoutContext);\r\n  const activePage = useDriveStore(s => s.activePage);\r\n  return (\r\n    <DashboardContentHeader className=\"px-8 md:px-26 py-4 flex items-center gap-20 border-b h-60\">\r\n      {isMobileMode ? (\r\n        <DriveSortButton isDisabled={activePage?.disableSort} />\r\n      ) : (\r\n        <PageBreadcrumbs />\r\n      )}\r\n      <div className=\"text-muted ml-auto flex-shrink-0\">\r\n        <ToggleViewModeButton />\r\n        <ToggleDetailsButton />\r\n      </div>\r\n    </DashboardContentHeader>\r\n  );\r\n}\r\n\r\nfunction ToggleViewModeButton() {\r\n  const viewMode = useDriveStore(s => s.viewMode);\r\n  const tooltip =\r\n    viewMode === 'grid' ? (\r\n      <Trans message=\"List view\" />\r\n    ) : (\r\n      <Trans message=\"Grid view\" />\r\n    );\r\n  return (\r\n    <Tooltip label={tooltip}>\r\n      <IconButton\r\n        size=\"md\"\r\n        onClick={() => {\r\n          driveState().setViewMode(\r\n            driveState().viewMode === 'list' ? 'grid' : 'list'\r\n          );\r\n        }}\r\n      >\r\n        {viewMode === 'list' ? <ViewListIcon /> : <ViewModuleIcon />}\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nfunction ToggleDetailsButton() {\r\n  const {rightSidenavStatus: status, setRightSidenavStatus} = useContext(\r\n    DashboardLayoutContext\r\n  );\r\n  const tooltip = status ? (\r\n    <Trans message=\"Hide details\" />\r\n  ) : (\r\n    <Trans message=\"Show details\" />\r\n  );\r\n  return (\r\n    <Tooltip label={tooltip}>\r\n      <IconButton\r\n        size=\"md\"\r\n        color={status === 'open' ? 'primary' : null}\r\n        onClick={() => {\r\n          setRightSidenavStatus(status === 'open' ? 'closed' : 'open');\r\n        }}\r\n      >\r\n        <InfoIcon />\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n","import React, {Fragment, useContext, useEffect, useMemo} from 'react';\r\nimport {Link, useLocation, useParams} from 'react-router-dom';\r\nimport {Sidebar} from './sidebar/sidebar';\r\nimport {FileView} from '../file-view/file-view';\r\nimport {UploadQueue} from '../uploading/upload-queue';\r\nimport {driveState, useDriveStore} from '../drive-store';\r\nimport {\r\n  DRIVE_PAGES,\r\n  makePartialFolderPage,\r\n  SearchPage,\r\n} from '../drive-page/drive-page';\r\nimport {DetailsSidebar} from '../details-sidebar/details-sidebar';\r\nimport {DriveDialogsContainer} from '../files/dialogs/drive-dialogs-container';\r\nimport {NavbarSearch} from '../search/navbar-search';\r\nimport {useActiveWorkspaceId} from '@common/workspace/active-workspace-id-context';\r\nimport {FileEntryUrlsContext} from '@common/uploads/hooks/file-entry-urls';\r\nimport {FileUploadProvider} from '@common/uploads/uploader/file-upload-provider';\r\nimport {EntryDragPreview} from '../file-view/entry-drag-preview';\r\nimport {DashboardLayout} from '@common/ui/layout/dashboard-layout';\r\nimport {DashboardContent} from '@common/ui/layout/dashboard-content';\r\nimport {DashboardNavbar} from '@common/ui/layout/dashboard-navbar';\r\nimport {DriveContentHeader} from './drive-content-header';\r\nimport {IconButton} from '@common/ui/buttons/icon-button';\r\nimport {SearchIcon} from '@common/icons/material/Search';\r\nimport {DashboardLayoutContext} from '@common/ui/layout/dashboard-layout-context';\r\nimport {CloseIcon} from '@common/icons/material/Close';\r\nimport {Trans} from '@common/i18n/trans';\r\nimport {EntryActionList} from '../entry-actions/entry-action-list';\r\nimport {CreateNewButton} from './create-new-button';\r\nimport {StaticPageTitle} from '@common/seo/static-page-title';\r\nimport {DashboardSidenav} from '@common/ui/layout/dashboard-sidenav';\r\n\r\nexport function DriveLayout() {\r\n  const {pathname} = useLocation();\r\n  const {hash} = useParams();\r\n  const {workspaceId} = useActiveWorkspaceId();\r\n  const activePage = useDriveStore(s => s.activePage);\r\n\r\n  useEffect(() => {\r\n    driveState().setActivePage(\r\n      DRIVE_PAGES.find(p => p.path === pathname) ||\r\n        makePartialFolderPage(hash!),\r\n    );\r\n  }, [pathname, hash]);\r\n\r\n  const urlsContextValue = useMemo(() => {\r\n    return {workspaceId};\r\n  }, [workspaceId]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      driveState().reset();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      {activePage?.label && (\r\n        <StaticPageTitle>\r\n          <Trans\r\n            message={\r\n              typeof activePage.label === 'string'\r\n                ? activePage.label\r\n                : activePage.label.message\r\n            }\r\n          />\r\n        </StaticPageTitle>\r\n      )}\r\n      <FileUploadProvider>\r\n        <FileEntryUrlsContext.Provider value={urlsContextValue}>\r\n          <DashboardLayout\r\n            name=\"drive\"\r\n            onDragOver={e => {\r\n              e.preventDefault();\r\n              e.stopPropagation();\r\n              e.dataTransfer.dropEffect = 'none';\r\n            }}\r\n            onDrop={e => {\r\n              // prevent files from desktop from blowing away the document\r\n              e.preventDefault();\r\n            }}\r\n          >\r\n            <Navbar />\r\n            <DashboardSidenav position=\"left\" size=\"md\">\r\n              <Sidebar />\r\n            </DashboardSidenav>\r\n            <DriveContentHeader />\r\n            <DashboardContent>\r\n              <FileView />\r\n            </DashboardContent>\r\n            <UploadQueue />\r\n            <DriveDialogsContainer />\r\n            <DashboardSidenav position=\"right\" size=\"lg\">\r\n              <DetailsSidebar />\r\n            </DashboardSidenav>\r\n          </DashboardLayout>\r\n        </FileEntryUrlsContext.Provider>\r\n        <EntryDragPreview />\r\n      </FileUploadProvider>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction Navbar() {\r\n  const {isMobileMode} = useContext(DashboardLayoutContext);\r\n  const activePage = useDriveStore(s => s.activePage);\r\n\r\n  const children = isMobileMode ? null : <NavbarSearch />;\r\n  const searchButton = (\r\n    <IconButton elementType={Link} to={SearchPage.path}>\r\n      <SearchIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  const mobileRightChildren = (\r\n    <Fragment>\r\n      {activePage !== SearchPage && searchButton}\r\n      <CreateNewButton isCompact />\r\n    </Fragment>\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <DashboardNavbar\r\n        rightChildren={isMobileMode && mobileRightChildren}\r\n        menuPosition=\"drive-navbar\"\r\n      >\r\n        {children}\r\n      </DashboardNavbar>\r\n      {isMobileMode && <FloatingActionList />}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nfunction FloatingActionList() {\r\n  const entriesSelected = useDriveStore(s => s.selectedEntries.size);\r\n  if (!entriesSelected) return null;\r\n  return (\r\n    <div className=\"fixed right-0 top-0 z-10 flex h-54 w-full items-center justify-center gap-10 rounded bg-primary px-6 text-on-primary shadow-xl\">\r\n      <IconButton\r\n        onClick={() => {\r\n          driveState().selectEntries([]);\r\n        }}\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n      <Trans message=\":count selected\" values={{count: entriesSelected}} />\r\n      <EntryActionList className=\"ml-auto\" />\r\n    </div>\r\n  );\r\n}\r\n","import {RouteObject, redirect, useNavigate, useRoutes} from 'react-router-dom';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {ShareableLinkPage} from './shareable-link/shareable-link-page/shareable-link-page';\r\nimport {DriveLayout} from './layout/drive-layout';\r\nimport {AuthRoute} from '@common/auth/guards/auth-route';\r\nimport {NotFoundPage} from '@common/ui/not-found-page/not-found-page';\r\n\r\nconst DriveRouteConfig: RouteObject[] = [\r\n  {\r\n    path: '/',\r\n    element: (\r\n      <AuthRoute>\r\n        <DriveLayout />\r\n      </AuthRoute>\r\n    ),\r\n  },\r\n  {\r\n    path: '/folders/:hash',\r\n    element: (\r\n      <AuthRoute>\r\n        <DriveLayout />\r\n      </AuthRoute>\r\n    ),\r\n  },\r\n  {\r\n    path: '/shares',\r\n    element: (\r\n      <AuthRoute>\r\n        <DriveLayout />\r\n      </AuthRoute>\r\n    ),\r\n  },\r\n  {\r\n    path: '/recent',\r\n    element: (\r\n      <AuthRoute>\r\n        <DriveLayout />\r\n      </AuthRoute>\r\n    ),\r\n  },\r\n  {\r\n    path: '/starred',\r\n    element: (\r\n      <AuthRoute>\r\n        <DriveLayout />\r\n      </AuthRoute>\r\n    ),\r\n  },\r\n  {\r\n    path: '/trash',\r\n    element: (\r\n      <AuthRoute>\r\n        <DriveLayout />\r\n      </AuthRoute>\r\n    ),\r\n  },\r\n  {\r\n    path: '/search',\r\n    element: (\r\n      <AuthRoute>\r\n        <DriveLayout />\r\n      </AuthRoute>\r\n    ),\r\n  },\r\n  {path: 's/:hash', element: <ShareableLinkPage />},\r\n  {path: '*', element: <NotFoundPage />},\r\n];\r\n\r\nexport default function DriveRoutes() {\r\n  return useRoutes(DriveRouteConfig);\r\n}\r\n"],"names":["InfiniteQueryObserver","QueryObserver","client","options","notifyOptions","infiniteQueryBehavior","query","state","parentResult","isFetching","isRefetching","isError","isRefetchError","fetchDirection","_b","_a","isFetchNextPageError","isFetchingNextPage","isFetchPreviousPageError","isFetchingPreviousPage","hasNextPage","hasPreviousPage","useInfiniteQuery","queryClient","useBaseQuery","DriveQueryKeys","params","key","hash","entryId","id","invalidateEntryQueries","useLinkPageStore","create","immer","set","getFromLocalStorage","value","mode","setInLocalStorage","linkPageState","useShareableLinkPage","useParams","orderBy","orderDir","s","order","isPasswordProtected","password","pageParam","response","fetchLinkByHash","data","getBootstrapData","lastResponse","currentPage","lastPage","keepPreviousData","p","page","apiClient","checkLinkPassword","linkHash","r","useCheckLinkPassword","useMutation","props","err","showHttpErrorToast","message","importIntoOwnDrive","linkId","useImportIntoOwnDrive","toast","ShareableLinkPageActionButtons","link","user","isLoggedIn","useAuth","downloadUrl","useFileEntryUrls","alreadyImported","u","jsx","DownloadButton","jsxs","MenuTrigger","downloadFileFromUrl","IconButton","KeyboardArrowDownIcon","Menu","MenuItem","FileDownloadIcon","Trans","ImportExportIcon","Fragment","Tooltip","Button","ShareableLinkNavbar","isMobile","useIsMobileMediaQuery","Navbar","FileTypeIcon","PasswordPage","trans","useTrans","fieldLabel","setPassword","useState","checkPassword","passwordIsInvalid","SvgImage","secureFilesSvg","e","TextField","BaseFileGridItem","React","entry","className","isSelected","isMobileMode","footerAdornment","domProps","ref","clsx","FileThumbnail","Footer","adornment","FolderPreviewFileGrid","entries","onEntrySelected","index","stableArray","enableMapSet","initialState","useDriveStore","get","isOpen","activePageId","storedDescriptor","name","current","merge","driveState","useActiveDialogEntry","dialog","createShareableLink","useCreateShareableLink","addStarToEntries","entryIds","useAddStarToEntries","payload","removeStarFromEntries","useRemoveStarFromEntries","duplicateEntries","useDuplicateEntries","addFilesSvg","timeManagement","fileSearching","throwAwaySvg","lovingItSvg","shareSvg","defaultSortDescriptor","makeFolderPage","folder","makePartialFolderPage","getPathForFolder","rootFolder","RootFolderPage","RecentPage","SearchPage","isSearchingOrFiltering","SharesPage","TrashPage","StarredPage","DRIVE_PAGES","deleteEntries","useDeleteEntries","getLoaderMessage","emptyTrash","deleteForever","backendError","getAxiosErrorMessage","useUnshareEntries","unshareEntries","useRestoreEntries","restoreEntries","useEntryActions","preview","usePreviewAction","share","useShareAction","getLink","useGetLinkAction","addStar","useAddToStarredAction","removeStar","useRemoveFromStarred","moveTo","useMoveToAction","rename","useRenameAction","makeCopy","useMakeCopyAction","download","useDownloadEntriesAction","deleteAction","useDeleteEntriesAction","removeSharedEntries","useRemoveSharedEntriesAction","useRestoreEntriesAction","action","RemoveRedEyeIcon","activePage","PersonAddIcon","createLink","LinkIcon","starEntries","tag","StarIcon","StarOutlineIcon","DriveFileMoveIcon","DriveFileRenameOutlineIcon","ContentCopyIcon","DeleteIcon","RestoreIcon","useStorageSummary","useQuery","fetchStorageSummary","formatResponse","percentage","prettyBytes","EightMB","useDriveUploadQueue","uploadMultiple","useFileUploadStore","usage","uploads","useSettings","maxFileSize","allowedFileTypes","blockedFileTypes","useCallback","files","getActiveWorkspaceId","file","UploadedFile","sizeOfFiles","sum","currentlyUsing","availableSpace","useDrivePageActions","newFolder","useNewFolderAction","uploadFiles","useUploadFilesAction","uploadFolder","useUploadFolderAction","useEmptyTrashAction","CreateNewFolderIcon","FileUploadIcon","openUploadWindow","DriveFolderUploadIcon","DeleteForeverIcon","EntryActionMenuTrigger","children","PageMenu","EntriesMenu","actions","BaseMenu","createElement","formatFileSize","memoize","bytes","fileTableColumns","FileNameColumn","FormattedDate","ActionsColumn","isCollapsedMode","useContext","TableContext","sizeClassName","selectedRows","Checkbox","MoreVertIcon","mobileColumns","config","FolderPreviewFileTable","sortDescriptor","Table","item","buildFolderHash","folderHash","useNavigateToSubfolder","navigate","useNavigate","FolderPreviewFileView","pathname","useLocation","navigateToSubfolder","activePreviewIndex","setActivePreviewIndex","viewMode","sentinelRef","useRef","fetchNextPage","isPlaceholderData","useEffect","sentinelEl","observer","ProgressCircle","handlePreview","folderEntries","AdHost","AnimatePresence","m","opacityAnimation","DialogTrigger","FilePreviewDialog","DashboardContentHeader","useFolderPath","isEnabled","fetchFolderPath","FolderPreviewBreadcrumb","content","items","parent","Breadcrumb","BreadcrumbItem","AVAILABLE_SORTS","EntriesSortButton","descriptor","onChange","isDisabled","column","direction","sort","SortIcon","MenuSection","FolderPreviewHeader","activeSort","hasEntry","GridViewIcon","FolderPreview","isFetched","showEmptyMessage","DashboardLayout","DashboardNavbar","FileUploadProvider","DashboardContent","EmptyMessage","IllustratedMessage","ShareableLinkPageFilePreview","FilePreviewContainer","ShareableLinkPage","status","NotFoundPage","FileEntryUrlsContext","Meter","ProgressBarBase","StorageMeter","isLoading","label","StorageIcon","useCreateWorkspace","form","createWorkspace","WorkspaceQueryKeys","onFormQueryError","NewWorkspaceDialog","useForm","formId","close","useDialogContext","Dialog","DialogHeader","DialogBody","Form","FormTextField","DialogFooter","fetchWorkspaceWithMembers","workspaceId","useWorkspaceWithMembers","InviteMembers","other","useInviteMembers","ResendInvite","inviteId","useResendInvite","matcher","isEmail","string","ChangeRole","member","modelType","memberId","useChangeRole","removeMember","memberType","endpoint","useRemoveMember","setWorkspaceId","useActiveWorkspaceId","PersonalWorkspace","LeaveWorkspaceConfirmation","onConfirm","ConfirmationDialog","WorkspaceMembersDialog","workspace","Manager","can","usePermissions","members","shouldHideOtherMembers","InviteChipField","GroupIcon","MemberListItem","MemberDisplayNameAppend","MemberActions","authUser","permissions","authMember","mb","permission","selectedRole","setSelectedRole","changeRole","isOwner","isCurrentUser","roleSelector","RoleMenuTrigger","roleId","RemoveMemberButton","chips","setChips","allEmailsValid","chip","displayWith","inviteMembers","useValueLists","ChipField","invalid","c","type","isConfirmed","ExitToAppIcon","CloseIcon","RemoveMemberConfirmation","size","role","newValue","ArrowDropDownIcon","ResendInviteDialogTrigger","resendInvite","updateWorkspace","useUpdateWorkspace","RenameWorkspaceDialog","deleteWorkspace","useDeleteWorkspace","PolicyFailMessage","resourceName","color","reason","MessageText","SectionHelper","billing","upgradeMsgValues","text","Link","LinkStyle","WorkspaceSelector","trigger","placement","workspaces","useUserWorkspaces","activeWorkspace","useActiveWorkspace","selectorIsOpen","setSelectorIsOpen","hasPermission","cloneElement","DefaultTrigger","WorkspaceItem","CreateWorkspaceButton","onClick","onCreated","workspaceCount","checkOverQuotaOrNoPermission","overQuotaOrNoPermission","openDialog","AddIcon","forwardRef","ButtonBase","UnfoldMoreIcon","isActive","CheckIcon","ManageButton","LeaveWorkspaceDialog","DeleteWorkspaceConfirmation","EditIcon","MenuPositions","__assign","this","t","n","o","defaultConfig","exports","arrayToTree","a","h","i","d","getNestedProperty","l","countNodes","fetchUserFolders","useFolders","useMoveEntries","moveEntries","canMoveEntriesInto","targets","destination","target","destinationIsInTarget","destinationPath","part","useFolderDropAction","folderAcceptsDrop","makeFolderTreeDragId","isFolderTreeDragId","useSidebarTreeDropTarget","isDragOver","setIsDragOver","onDrop","useDroppable","draggable","TreeContext","createContext","renderTree","nodes","itemRenderer","parentNode","level","node","TreeLabel","icon","expandedKeys","setExpandedKeys","selectedKeys","setSelectedKeys","isExpanded","handleExpandIconClick","newExpandedKeys","_","ArrowRightIcon","TreeItem","labelRef","labelClassName","focusManager","useFocusManager","focusedNode","setFocusedNode","hasChildren","isFirstNode","isFocused","onKeyDown","newKeys","parentEl","childNode","createEventHandler","Tree","useControlledState","FocusScope","TreeRoot","FolderTree","tree","useMemo","folders","keys","entryHash","findHash","FolderTreeItem","isRootFolder","isDragging","draggableProps","useDraggable","droppableProps","mergeProps","BackupIcon","FolderIcon","SidebarMenu","CustomMenu","TrashMenuItem","CustomMenuItem","CreateNewButton","isCompact","button","activeFolder","UploadFileIcon","Sidebar","isSubscribed","WorkspaceSwitcher","fetchEntries","setActiveFolder","shallowEqual","usePaginatedEntries","searchParams","useSearchParams","isDisabledInSearch","getAllEntries","all","cache","driveSearchFilters","FILE_ENTRY_TYPE_FILTER","FilterOperator","FilterControlType","createdAtFilter","updatedAtFilter","alwaysShownFilters","f","SearchFilterList","DashboardLayoutContext","inputValue","setInputValue","SearchIcon","FilterList","restrictResizableWithinBoundary","rect","boundaryRect","boundedRect","leftRestriction","topRestriction","mouseSelectables","useMouseSelectable","optionsRef","useLayoutEffect","droppables","rectsIntersect","rectA","rectB","useMouseSelectionBox","onPointerDown","defaultRef","containerRef","boxRef","drawSelectionBox","startPoint","endPoint","initialScrollTop","currentScrollTop","newRect","scrollDiff","scrollValue","absoluteRect","selectable","intersect","_c","_d","_e","_f","_g","usePointerEvents","activeInteraction","updateRects","el","reachedBottomEdge","reachedTopEdge","useEntries","useSelectedEntries","ids","useSelectedEntry","useSelectedEntryParent","getSelectedEntries","allEntries","EntryActionList","selectedEntries","ActionList","removeShared","DriveContextMenu","PageContextMenu","EntriesContextMenu","position","BaseContextMenu","ContextMenu","useIsTouchDevice","useMediaQuery","useFileViewDnd","isTouchDevice","itemClassName","FileTableRow","useViewItemActionHandler","FileTable","performViewItemAction","FileGridItem","toggleEntry","pressHandler","isCtrlOrShiftPressed","pressProps","keyboardHandler","contextMenuHandler","FooterAdornment","FileGrid","DriveSortButton","PageBreadcrumbs","rootItem","useRootItem","isMenuItem","MixedText","owner","InfiniteScrollSentinel","isInitialLoading","loaderMarginTop","style","_variant","loadMoreExtraContent","loadMoreClickCount","setLoadMoreClickCount","innerVariant","DropTargetMask","isVisible","mask","FileView","containerProps","boxProps","noContentMessage","handleContextMenu","handleKeybinds","isCtrlKeyPressed","Toolbar","UploadQueueItem","memo","SizeInfo","FileStatus","fileUpload","bytesUploaded","totalBytes","uploadedBytes","statusMessage","abortUpload","errorMessage","isHovered","setIsHovered","abortButton","progressButton","statusButton","errMessage","AnimatedStatus","ErrorIcon","WarningIcon","CheckCircleIcon","UploadQueue","Header","UploadList","inProgressUploadsCount","completedUploadsCount","clearInactive","uploadsArray","virtualizer","useVirtualizer","virtualItem","upload","detailedExamination","DetailsSidebarHeader","entryType","entryName","setRightSidenavStatus","DetailsSidebarSectionHeader","margin","useSyncEntryTags","createComment","tags","useFileEntryTags","fetchTags","DetailsSidebarTags","TagChipField","syncTags","setValue","handleChange","newTags","result","Item","DetailsSidebarProperties","GroupsIcon","Avatar","PropertyList","prettySize","PropertyItem","DetailsSidebar","selectedEntry","NothingSelected","useRenameEntry","renameEntry","RenameEntryDialog","initialName","onSubmit","createFolder","parentId","useCreateFolder","NewFolderDialog","EntryPreviewDialog","defaultActiveIndex","activeIndex","setActiveIndex","DriveActions","shareEntry","useShareEntry","axios","DRIVE_ENTRY_FULL_PERMISSIONS","PermissionSelectorItems","PermissionSelector","getPermissionItemForUser","edit","useChangePermission","changePermission","UserAvatar","auth","SiteConfigContext","MemberList","users","ActionButtons","changePermissions","unshareEntry","activePermission","setActivePermission","SharePanel","isSharing","setIsSharing","selectedPermission","setSelectedPermission","useNormalizedModels","useEntryShareableLink","fetchLinkByEntryId","deleteShareableLink","useDeleteShareableLink","randomString","length","random","possible","ShareableLinkPanel","setActivePanel","focusInput","linkExists","deleteLink","Switch","ShareableLinkInput","autoFocus","base_url","linkUrl","isCopied","setCopied","useClipboard","updateShareableLink","useUpdateShareableLink","LinkSettingsDialog","updateLink","LinkExpirationOption","LinkPasswordOption","LinkOption","FormSwitch","minDate","now","getLocalTimeZone","showFieldDefault","showField","setShowField","FormDatePicker","showBorder","title","ShareDialog","initialEntry","focusLinkInput","fileEntry","activePanel","MainDialog","MoveEntriesDialogSearch","allFolders","onFolderSelected","searchLabel","ComboBox","folderId","MoveEntriesDialogBreadcrumbs","selectedFolder","path","fullPath","previous","ArrowBackIcon","myFilesSvg","MoveEntriesDialogFolderList","subFolders","List","ListItem","ChevronRightIcon","MoveEntriesDialog","setSelectedFolder","DeleteEntriesForeverDialog","BlockTrashFolderViewDialog","DriveDialogsContainer","activeDialog","getDialog","NavbarSearch","useDragMonitor","monitor","monitorRef","useId","dragMonitors","EntryDragPreview","points","setPoints","setState","dragTarget","prev","EntryPreview","droppableId","itemCount","exitVariant","EntryCount","count","DriveContentHeader","ToggleViewModeButton","ToggleDetailsButton","tooltip","ViewListIcon","ViewModuleIcon","InfoIcon","DriveLayout","urlsContextValue","StaticPageTitle","DashboardSidenav","searchButton","mobileRightChildren","FloatingActionList","entriesSelected","DriveRouteConfig","AuthRoute","DriveRoutes","useRoutes"],"mappings":"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","x_google_ignoreList":[0,1,63]}